openapi: 3.1.0
info:
    contact:
        email: support@numspot.eu
        name: Numspot
        url: https://numspot.com/contact/
    description: Numspot Public API
    license:
        name: BSD 3 Clause
        url: https://opensource.org/licenses/BSD-3-Clause
    termsOfService: https://numspot.com/
    title: Numspot Public API
    version: 999.999.999
servers:
    - url: https://api.{region}.numspot.com
      variables:
        region:
            default: cloudgouv-eu-west-1
            description: Region
            enum:
                - eu-west-2
                - cloudgouv-eu-west-1
paths:
    /compute/spaces/{spaceId}/bulk/loadBalancersTags:
        delete:
            description: Deletes one or more tags from the specified load balancers.
            operationId: DeleteLoadBalancerTags
            requestBody:
                $ref: '#/components/requestBodies/DeleteLoadBalancerTagsRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancer
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        patch:
            description: |-
                Adds one or more tags to the specified load balancers.<br />
                 If a tag with the same key already exists for the load balancer, the tag value is replaced.<br /><br />
            operationId: CreateLoadBalancerTags
            requestBody:
                $ref: '#/components/requestBodies/CreateLoadBalancerTagsRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancer
    /compute/spaces/{spaceId}/bulk/tags:
        delete:
            description: Deletes one or more tags from the specified resources.
            operationId: DeleteTags
            requestBody:
                $ref: '#/components/requestBodies/DeleteTagsRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Tag
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        patch:
            description: |-
                Adds one or more tags to the specified resources.<br />
                If a tag with the same key already exists, its value is replaced.<br />
                This tagging functionality applies to following resources identifiable by their IDs:<br /><br />

                * Virtual machines (VMs) (i-xxxxxxxx)<br />
                * NMIs (ami-xxxxxxxx)<br />
                * Volumes (vol-xxxxxxxx)<br />
                * Snapshots (snap-xxxxxxxx)<br />
                * Public IPs (eipalloc-xxxxxxxx)<br />
                * Security groups (sg-xxxxxxxx)<br />
                * Route tables (rtb-xxxxxxxx)<br />
                * Network interface cards (NIC) (eni-xxxxxxxx)<br />
                * Vpcs (vpc-xxxxxxxx)<br />
                * Subnets (subnet-xxxxxxxx)<br />
                * Vpc peerings (vpcx-xxxxxxxx)<br />
                * Vpc endpoints (vpce-xxxxxxxx)<br />
                * NAT Gateways (nat-xxxxxxxx)<br />
                * Internet Gateways (igw-xxxxxxxx)<br />
                * Client gateways (cgw-xxxxxxxx)<br />
                * Virtual gateways (vgw-xxxxxxxx)<br />
                * VPN connections (vpn-xxxxxxxx)<br />
                * DHCP options (dopt-xxxxxxxx)<br />
                * NMI export tasks (image-export-xxxxxxxx)<br />
                * Snapshot export tasks (snap-export-xxxxxxxx)
            operationId: CreateTags
            requestBody:
                $ref: '#/components/requestBodies/CreateTagsRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Tag
    /compute/spaces/{spaceId}/clientGateways:
        get:
            description: Lists one or more of your client gateways.
            operationId: ReadClientGateways
            parameters:
                - description: The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.
                  in: query
                  name: bgpAsns
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The types of communication tunnels used by the client gateways (only `ipsec.1` is supported).
                  in: query
                  name: connectionTypes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The public IPv4 addresses of the client gateways.
                  in: query
                  name: publicIps
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of the client gateways (`pending` \| `available` \| `deleting` \| `deleted`).
                  in: query
                  name: states
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the client gateways.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the client gateways.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the client gateways, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the client gateways.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadClientGatewaysResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ClientGateway
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Provides information about your client gateway.<br />
                This action registers information to identify the client gateway that you deployed in your network.<br />
                To open a tunnel to the client gateway, you must provide the communication protocol type, the fixed public IP of the gateway, and an Autonomous System Number (ASN).<br /><br />
            operationId: CreateClientGateway
            requestBody:
                $ref: '#/components/requestBodies/CreateClientGatewayRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateClientGatewayResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ClientGateway
    /compute/spaces/{spaceId}/clientGateways/{id}:
        delete:
            description: |-
                Deletes a client gateway.<br />
                You must delete the VPN connection before deleting the client gateway.
            operationId: DeleteClientGateway
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the client gateway you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ClientGateway
        get:
            description: Retrieves information about the ClientGateway whose id is given as a parameter.
            operationId: ReadClientGatewaysById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadClientGateways
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadClientGatewaysByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ClientGateway
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/dhcpOptions:
        get:
            description: Gets information about the content one or more DHCP options sets.
            operationId: ReadDhcpOptions
            parameters:
                - description: If true, lists all default DHCP options set. If false, lists all non-default DHCP options set.
                  in: query
                  name: default
                  schema:
                    type: boolean
                - description: The IPs of the domain name servers used for the DHCP options sets.
                  in: query
                  name: domainNameServers
                  schema:
                    items:
                        type: string
                    type: array
                - description: The domain names used for the DHCP options sets.
                  in: query
                  name: domainNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IPs of the log servers used for the DHCP options sets.
                  in: query
                  name: logServers
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IPs of the Network Time Protocol (NTP) servers used for the DHCP options sets.
                  in: query
                  name: ntpServers
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the DHCP options sets.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the DHCP options sets.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the DHCP options sets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the DHCP options sets.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadDhcpOptionsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - DhcpOption
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: Creates a set of DHCP options, that you can then associate with a Vpc using the [UpdateVpc](#updatenet) method.<br /><br />
            operationId: CreateDhcpOptions
            requestBody:
                $ref: '#/components/requestBodies/CreateDhcpOptionsRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateDhcpOptionsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - DhcpOption
    /compute/spaces/{spaceId}/dhcpOptions/{id}:
        delete:
            description: |-
                Deletes a specified DHCP options set.<br />
                Before deleting a DHCP options set, you must disassociate it from the Vpcs you associated it with. To do so, you need to associate with each Vpc a new set of DHCP options, or the `default` one if you do not want to associate any DHCP options with the Vpc.<br /><br />

                **[IMPORTANT]**<br />
                You cannot delete the `default` set.
            operationId: DeleteDhcpOptions
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the DHCP options set you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - DhcpOption
        get:
            description: Retrieves information about the DHCP Option whose id is given as a parameter.
            operationId: ReadDhcpOptionsById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadDhcpOptions
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadDhcpOptionsByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - DhcpOption
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/flexibleGpus:
        get:
            description: Lists one or more flexible GPUs (fGPUs) allocated to your account.
            operationId: ReadFlexibleGpus
            parameters:
                - description: Indicates whether the fGPU is deleted when terminating the VM.
                  in: query
                  name: deleteOnVmDeletion
                  schema:
                    type: boolean
                - description: The processor generations that the fGPUs are compatible with.
                  in: query
                  name: generations
                  schema:
                    items:
                        type: string
                    type: array
                - description: One or more models of fGPUs.
                  in: query
                  name: modelNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of the fGPUs (`allocated` \| `attaching` \| `attached` \| `detaching`).
                  in: query
                  name: states
                  schema:
                    items:
                        type: string
                    type: array
                - description: One or more IDs of VMs.
                  in: query
                  name: vmIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The Subregions where the fGPUs are located.
                  in: query
                  name: availabilityZoneNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: One or more IDs of fGPUs.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadFlexibleGpusResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - FlexibleGpu
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Allocates a flexible GPU (fGPU) to your account.<br />
                You can then attach this fGPU to a virtual machine (VM).<br /><br />
            operationId: CreateFlexibleGpu
            requestBody:
                $ref: '#/components/requestBodies/CreateFlexibleGpuRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateFlexibleGpuResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - FlexibleGpu
    /compute/spaces/{spaceId}/flexibleGpus/{id}:
        delete:
            description: |-
                Releases a flexible GPU (fGPU) from your account.<br />
                The fGPU becomes free to be used by someone else.
            operationId: DeleteFlexibleGpu
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the fGPU you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - FlexibleGpu
        get:
            description: Gets information about one of flexible GPUs (fGPUs) allocated to your account.
            operationId: ReadFlexibleGpusById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadFlexibleGpus
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadFlexibleGpusByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - FlexibleGpu
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: Modifies a flexible GPU (fGPU) behavior.
            operationId: UpdateFlexibleGpu
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the fGPU you want to modify.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateFlexibleGpuRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateFlexibleGpuResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - FlexibleGpu
    /compute/spaces/{spaceId}/flexibleGpus/{id}/vms/link:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Attaches one of your allocated flexible GPUs (fGPUs) to one of your virtual machines (VMs).<br />
                The fGPU is in the `attaching` state until the VM is stopped, after which it becomes `attached`.
            operationId: LinkFlexibleGpu
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the fGPU you want to attach.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/LinkFlexibleGpuRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - FlexibleGpu
    /compute/spaces/{spaceId}/flexibleGpus/{id}/vms/unlink:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Detaches a flexible GPU (fGPU) from a virtual machine (VM).<br />
                The fGPU is in the `detaching` state until the VM is stopped, after which it becomes available for allocation again.
            operationId: UnlinkFlexibleGpu
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the fGPU you want to detach from your VM.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - FlexibleGpu
    /compute/spaces/{spaceId}/images:
        get:
            description: Lists one or more NumSpot machine images (NMIs) you can use.
            operationId: ReadImages
            parameters:
                - description: The account aliases of the owners of the OMIs.
                  in: query
                  name: accountAliases
                  schema:
                    items:
                        type: string
                    type: array
                - description: The architectures of the OMIs (`i386` \| `x86_64`).
                  in: query
                  name: architectures
                  schema:
                    items:
                        type: string
                    type: array
                - description: Whether the volumes are deleted or not when terminating the VM.
                  in: query
                  name: blockDeviceMappingDeleteOnVmDeletion
                  schema:
                    type: boolean
                - description: The device names for the volumes.
                  in: query
                  name: blockDeviceMappingDeviceNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the snapshots used to create the volumes.
                  in: query
                  name: blockDeviceMappingSnapshotIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The sizes of the volumes, in gibibytes (GiB).
                  in: query
                  name: blockDeviceMappingVolumeSizes
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The types of volumes (`standard` \| `gp2` \| `io1`).
                  in: query
                  name: blockDeviceMappingVolumeTypes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The descriptions of the OMIs, provided when they were created.
                  in: query
                  name: descriptions
                  schema:
                    items:
                        type: string
                    type: array
                - description: The locations of the buckets where the OMI files are stored.
                  in: query
                  name: fileLocations
                  schema:
                    items:
                        type: string
                    type: array
                - description: The hypervisor type of the OMI (always `xen`).
                  in: query
                  name: hypervisors
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the OMIs, provided when they were created.
                  in: query
                  name: imageNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the product codes associated with the OMI.
                  in: query
                  name: productCodeNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The product codes associated with the OMI.
                  in: query
                  name: productCodes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The name of the root device. This value must be /dev/sda1.
                  in: query
                  name: rootDeviceNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The types of root device used by the OMIs (`bsu` or `ebs`).
                  in: query
                  name: rootDeviceTypes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of the OMIs (`pending` \| `available` \| `failed`).
                  in: query
                  name: states
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the OMIs.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the OMIs.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the OMIs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The virtualization types (always `hvm`).
                  in: query
                  name: virtualizationTypes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the OMIs.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
                - description: If true, lists all public OMIs. If false, lists all private OMIs.
                  in: query
                  name: isPublic
                  schema:
                    type: boolean
            responses:
                "200":
                    $ref: '#/components/responses/ReadImagesResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Image
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates an NumSpot machine image (NMI).<br />
                You can use this method in different ways:
                * **Creating from a VM**: You create an NMI from one of your virtual machines (VMs).<br>
                * **Copying an NMI**: You copy an existing NMI. The source NMI can be one of your own NMIs, or an NMI owned by another account that has granted you permission via the [UpdateImage](#updateimage) method.<br>
                * **Registering from a snapshot**: You register an NMI from an existing snapshot. The source snapshot can be one of your own snapshots, or a snapshot owned by another account that has granted you permission via the [UpdateSnapshot](#updatesnapshot) method.<br>
                * **Registering from a bucket by using a manifest file**: You register an NMI from the manifest file of an NMI that was exported to an NumSpot Object Storage (NOS) bucket. First, the owner of the source NMI must export it to the bucket by using the [CreateImageExportTask](#createimageexporttask) method. Then, they must grant you permission to read the manifest file via a pre-signed URL or Access Control Lists.<br />
                * **Registering from a bucket without using a manifest file**: This is similar to the previous case but you manually specify all the information that would be in a manifest file instead of using a manifest file.

                **[TIP]**<br />
                Registering from a bucket enables you to copy an NMI across Regions.
            operationId: CreateImage
            requestBody:
                $ref: '#/components/requestBodies/CreateImageRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateImageResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Image
    /compute/spaces/{spaceId}/images/{id}:
        delete:
            description: Deletes an NumSpot machine image (NMI) so that you cannot use it anymore to launch virtual machines (VMs). However, you can still use VMs already launched from this NMI.
            operationId: DeleteImage
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the OMI you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Image
        get:
            description: Gets information about one of NumSpot machine images (NMIs) you can use.
            operationId: ReadImagesById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadImages
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadImagesByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Image
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Modifies the access permissions for an NumSpot machine image (NMI).<br />
                You must specify either the `Additions` or the `Removals` parameter.<br />
                After sharing an NMI with an account, the other account can create a copy of it that they own. For more information about copying NMIs, see [CreateImage](#createimage).
            operationId: UpdateImage
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the OMI you want to modify.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateImageRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateImageResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Image
    /compute/spaces/{spaceId}/internetGateways:
        get:
            description: |-
                Lists one or more of your Internet Gateways.<br />
                An Internet Gateway enables your virtual machines (VMs) launched in a Vpc to connect to the Internet. By default, a Vpc includes an Internet Gateway, and each Subnet is public. Every VM launched within a default Subnet has a private IP and a public IP.
            operationId: ReadInternetGateways
            parameters:
                - description: The current states of the attachments between the Internet gateways and the Vpcs (only `available`, if the Internet gateway is attached to a Vpc).
                  in: query
                  name: linkStates
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the Internet gateways.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the Internet gateways.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the Internet gateways, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpcs the Internet gateways are attached to.
                  in: query
                  name: linkVpcIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Internet gateways.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadInternetGatewaysResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - InternetGateway
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates an Internet Gateway you can use with a Vpc.<br />
                An Internet Gateway enables your virtual machines (VMs) launched in a Vpc to connect to the Internet. By default, a Vpc includes an Internet Gateway, and each Subnet is public. Every VM launched within a default Subnet has a private IP and a public IP.<br /><br />
            operationId: CreateInternetGateway
            responses:
                "201":
                    $ref: '#/components/responses/CreateInternetGatewayResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - InternetGateway
    /compute/spaces/{spaceId}/internetGateways/{id}:
        delete:
            description: |-
                Deletes an Internet Gateway.<br />
                Before deleting an Internet Gateway, you must detach it from any Vpc it is attached to.
            operationId: DeleteInternetGateway
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the Internet gateway you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - InternetGateway
        get:
            description: Retrieves information about the Internet Gateways whose id is given as a parameter.
            operationId: ReadInternetGatewaysById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadInternetGateways
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadInternetGatewaysByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - InternetGateway
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/internetGateways/{id}/vpcs/link:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Attaches an Internet Gateway to a Vpc.<br />
                To enable the connection between the Internet and a Vpc, you must attach an Internet Gateway to this Vpc.
            operationId: LinkInternetGateway
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the Internet gateway you want to attach.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/LinkInternetGatewayRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - InternetGateway
    /compute/spaces/{spaceId}/internetGateways/{id}/vpcs/unlink:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Detaches an Internet Gateway from a Vpc.<br />
                This action disables and detaches an Internet Gateway from a Vpc. The Vpc must not contain virtual machines (VMs) using public IPs nor internet-facing load balancers.
            operationId: UnlinkInternetGateway
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the Internet gateway you want to detach.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UnlinkInternetGatewayRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - InternetGateway
    /compute/spaces/{spaceId}/keypairs:
        get:
            description: Lists one or more of your keypairs.
            operationId: ReadKeypairs
            parameters:
                - description: The fingerprints of the keypairs.
                  in: query
                  name: keypairFingerprints
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the keypairs.
                  in: query
                  name: keypairNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The types of the keypairs (`ssh-rsa`, `ssh-ed25519`, `ecdsa-sha2-nistp256`, `ecdsa-sha2-nistp384`, or `ecdsa-sha2-nistp521`).
                  in: query
                  name: keypairTypes
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadKeypairsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Keypair
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a keypair to use with your virtual machines (VMs).<br />
                You can use this method in two different ways:
                * **Creating a keypair**: In that case, NumSpot creates a 2048-bit RSA keypair, stores its public key in your account, and returns its private key in the response of the call so that you can save it in a file.<br />
                When you save the returned private key, make sure you replace the `\n` escape sequences with real line breaks.
                 * **Importing a keypair created locally**: If you already have a keypair that you have created locally with a third-party tool, you can import its public key in your account. The following types of key can be imported: RSA (2048 bits or preferably 4096 bits), ECDSA (256 bits), and Ed25519. The following formats can be used: PEM, PKCS8, RFC4716, and OpenSSH.
            operationId: CreateKeypair
            requestBody:
                $ref: '#/components/requestBodies/CreateKeypairRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateKeypairResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 409 response (Conflict).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Keypair
    /compute/spaces/{spaceId}/keypairs/{id}:
        delete:
            description: |-
                Deletes the specified keypair.<br />
                This action deletes the public key stored by NumSpot, thus deleting the keypair.
            operationId: DeleteKeypair
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The name of the keypair you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Keypair
        get:
            description: Retrieves information about the KeyPair whose id is given as a parameter.
            operationId: ReadKeypairsById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadKeypairs
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadKeypairsByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Keypair
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/listenerRules:
        get:
            description: Lists one or more listener rules. By default, this action returns the full list of listener rules for the account.
            operationId: ReadListenerRules
            parameters:
                - description: The names of the listener rules.
                  in: query
                  name: listenerRuleNames
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadListenerRulesResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Listener
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a rule for traffic redirection for the specified listener. Each rule must have either the `HostNamePattern` or `PathPattern` parameter specified. Rules are treated in priority order, from the highest value to the lowest value.<br />
                Once the rule is created, you need to register backend VMs with it. For more information, see the [RegisterVmsInLoadBalancer](#registervmsinloadbalancer) method.<br /><br />
            operationId: CreateListenerRule
            requestBody:
                $ref: '#/components/requestBodies/CreateListenerRuleRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateListenerRuleResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Listener
    /compute/spaces/{spaceId}/listenerRules/{id}:
        delete:
            description: |-
                Deletes a listener rule.<br />
                The previously active rule is disabled after deletion.
            operationId: DeleteListenerRule
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The name of the rule you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Listener
        get:
            description: Retrieves information about the ListenerRule whose id is given as a parameter.
            operationId: ReadListenerRulesById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadListenerRules
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadListenerRulesByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Listener
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Updates the pattern of the listener rule.<br />
                This call updates the pattern matching algorithm for incoming traffic.
            operationId: UpdateListenerRule
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The name of the listener rule.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateListenerRuleRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateListenerRuleResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Listener
    /compute/spaces/{spaceId}/loadBalancers:
        get:
            description: Lists one or more load balancers and their attributes.
            operationId: ReadLoadBalancers
            parameters:
                - description: The names of the load balancers.
                  in: query
                  name: loadBalancerNames
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadLoadBalancersResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - loadbalancing.loadBalancer
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancer
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a load balancer.<br />
                The load balancer is created with a unique Domain Name Service (DNS) name. It receives the incoming traffic and routes it to its registered virtual machines (VMs).<br />
                By default, this action creates an Internet-facing load balancer, resolving to public IPs. To create an internal load balancer in a Vpc, resolving to private IPs, use the `LoadBalancerType` parameter.<br />
                You must specify either the `Subnets` or the `AvailabilityZoneNames` parameters.<br /><br />
            operationId: CreateLoadBalancer
            requestBody:
                $ref: '#/components/requestBodies/CreateLoadBalancerRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateLoadBalancerResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancer
    /compute/spaces/{spaceId}/loadBalancers/{id}:
        delete:
            description: Deletes a specified load balancer.
            operationId: DeleteLoadBalancer
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The name of the load balancer you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancer
        get:
            description: Retrieves information about the LoadBalancer whose id is given as a parameter.
            operationId: ReadLoadBalancersById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadLoadBalancers
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadLoadBalancersByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancer
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Modifies the specified attribute of a load balancer. You can specify only one attribute at a time.<br /><br />

                You can set a new SSL certificate to an SSL or HTTPS listener of a load balancer.<br />
                This certificate replaces any certificate used on the same load balancer and port.<br /><br />

                You can also replace the currently enabled policy for the load balancer with another one.<br />
                If the `PolicyNames` parameter is empty, the currently enabled policy is disabled.
            operationId: UpdateLoadBalancer
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The name of the load balancer.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateLoadBalancerRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateLoadBalancerResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancer
    /compute/spaces/{spaceId}/loadBalancers/{id}/backendMachines/link:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Attaches virtual machine (VM) to a specified load balancer. You need to specify at least the `BackendIps` or the `BackendVmIds` parameter.<br />
                The VMs can be in different Subnets and different AvailabilityZones than the load balancer, as long as the VMs and load balancers are all in the public Cloud or all in the same Vpc. It may take a little time for a VM to be registered with the load balancer. Once the VM is registered with a load balancer, it receives traffic and requests from this load balancer and is called a back-end VM.
            operationId: LinkLoadBalancerBackendMachines
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ' The name of the load balancer. '
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/LinkLoadBalancerBackendMachinesRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancer
    /compute/spaces/{spaceId}/loadBalancers/{id}/backendMachines/unlink:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: Detaches one or more back-end virtual machines (VMs) from a load balancer. You need to specify at least the `BackendIps` or the `BackendVmIds` parameter.
            operationId: UnlinkLoadBalancerBackendMachines
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ' The name of the load balancer.'
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UnlinkLoadBalancerBackendMachinesRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancer
    /compute/spaces/{spaceId}/loadBalancers/{id}/listeners:
        delete:
            description: Deletes listeners of a specified load balancer.
            operationId: DeleteLoadBalancerListeners
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The name of the load balancer for which you want to delete listeners.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/DeleteLoadBalancerListenersRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Listener
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: Creates one or more listeners for a specified load balancer.<br /><br />
            operationId: CreateLoadBalancerListeners
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The name of the load balancer for which you want to create listeners.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/CreateLoadBalancerListenersRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateLoadBalancerListenersResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Listener
    /compute/spaces/{spaceId}/loadBalancers/{id}/policies:
        delete:
            description: |-
                Deletes a specified policy from a load balancer.<br />
                In order to be deleted, the policy must not be enabled for any listener.
            operationId: DeleteLoadBalancerPolicy
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The name of the load balancer for which you want to delete a policy.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/DeleteLoadBalancerPolicyRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancerPolicy
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a stickiness policy with sticky session lifetimes defined by the browser lifetime.<br />
                The created policy can be used with HTTP or HTTPS listeners only.<br />
                If this policy is implemented by a load balancer, this load balancer uses this cookie in all incoming requests to direct them to the specified back-end server virtual machine (VM). If this cookie is not present, the load balancer sends the request to any other server according to its load-balancing algorithm.<br /><br />

                You can also create a stickiness policy with sticky session lifetimes following the lifetime of an application-generated cookie.<br />
                Unlike the other type of stickiness policy, the lifetime of the special Load Balancer Unit (LBU) cookie follows the lifetime of the application-generated cookie specified in the policy configuration. The load balancer inserts a new stickiness cookie only when the application response includes a new application cookie.<br />
                The session stops being sticky if the application cookie is removed or expires, until a new application cookie is issued.<br /><br />
            operationId: CreateLoadBalancerPolicy
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The name of the load balancer for which you want to create a policy.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/CreateLoadBalancerPolicyRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateLoadBalancerPolicyResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancerPolicy
    /compute/spaces/{spaceId}/loadBalancers/{id}/vmsHealth:
        get:
            description: Lists the state of one or more back-end virtual machines (VMs) registered with a specified load balancer.
            operationId: ReadVmsHealth
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The name of the load balancer.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/ReadVmsHealthRequest'
            responses:
                "200":
                    $ref: '#/components/responses/ReadVmsHealthResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancer
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/loadBalancersTags:
        get:
            description: Lists the tags associated with one or more specified load balancers.
            operationId: ReadLoadBalancerTags
            requestBody:
                $ref: '#/components/requestBodies/ReadLoadBalancerTagsRequest'
            responses:
                "200":
                    $ref: '#/components/responses/ReadLoadBalancerTagsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - LoadBalancer
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/natGateways:
        get:
            description: Lists one or more network address translation (NAT) services.
            operationId: ReadNatGateway
            parameters:
                - description: The states of the NAT gateways (`pending` \| `available` \| `deleting` \| `deleted`).
                  in: query
                  name: states
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Subnets in which the NAT gateways are.
                  in: query
                  name: subnetIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the NAT gateways.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the NAT gateways.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the NAT gateways, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the NAT gateways.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpcs in which the NAT gateways are.
                  in: query
                  name: vpcIds
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadNatGatewayResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - NatGateway
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: "Creates a network address translation (NAT) service in the specified public Subnet of a Vpc.<br />\nA NAT Gateway enables virtual machines (VMs) placed in the private Subnet of this Vpc to connect to the Internet, without being accessible from the Internet.<br />\nWhen creating a NAT Gateway, you specify the allocation ID of the public IP you want to use as public IP for the NAT Gateway. Once the NAT Gateway is created, you need to create a route in the route table of the private Subnet, with 0.0.0.0/0 as destination and the ID of the NAT Gateway as target. For more information, see [LinkPublicIP](#linkpublicip) and [CreateRoute](#createroute).<br />\nThis action also enables you to create multiple NAT Gateways in the same Vpc (one per public Subnet).<br /><br />\n \n**[IMPORTANT]**<br />\nYou cannot modify the public IP associated with a NAT Gateway after its creation. To do so, you need to delete the NAT Gateway and create a new one with another public IP.<br /><br />"
            operationId: CreateNatGateway
            requestBody:
                $ref: '#/components/requestBodies/CreateNatGatewayRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateNatGatewayResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - NatGateway
    /compute/spaces/{spaceId}/natGateways/{id}:
        delete:
            description: |-
                Deletes a specified network address translation (NAT) service.<br />
                This action disassociates the public IP from the NAT Gateway, but does not release this public IP from your account. However, it does not delete any NAT Gateway routes in your route tables.
            operationId: DeleteNatGateway
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the NAT gateway you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - NatGateway
        get:
            description: Retrieves information about the Network Address Translation (NAT) Gateway whose id is given as a parameter.
            operationId: ReadNatGatewayById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadNatGateways
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadNatGatewayByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - NatGateway
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/nics:
        get:
            description: |-
                Lists one or more network interface cards (NICs).<br />
                A NIC is a virtual network interface that you can attach to a virtual machine (VM) in a Vpc.
            operationId: ReadNics
            parameters:
                - description: The descriptions of the NICs.
                  in: query
                  name: descriptions
                  schema:
                    items:
                        type: string
                    type: array
                - description: Whether the source/destination checking is enabled (true) or disabled (false).
                  in: query
                  name: isSourceDestCheck
                  schema:
                    type: boolean
                - description: Whether the NICs are deleted when the VMs they are attached to are terminated.
                  in: query
                  name: linkNicDeleteOnVmDeletion
                  schema:
                    type: boolean
                - description: The device numbers the NICs are attached to.
                  in: query
                  name: linkNicDeviceNumbers
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The attachment IDs of the NICs.
                  in: query
                  name: linkNicLinkNicIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of the attachments.
                  in: query
                  name: linkNicStates
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the VMs the NICs are attached to.
                  in: query
                  name: linkNicVmIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The association IDs returned when the public IPs were associated with the NICs.
                  in: query
                  name: linkPublicIpLinkPublicIpIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The allocation IDs returned when the public IPs were allocated to their accounts.
                  in: query
                  name: linkPublicIpPublicIpIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The public IPs associated with the NICs.
                  in: query
                  name: linkPublicIpPublicIps
                  schema:
                    items:
                        type: string
                    type: array
                - description: The Media Access Control (MAC) addresses of the NICs.
                  in: query
                  name: macAddresses
                  schema:
                    items:
                        type: string
                    type: array
                - description: The private DNS names associated with the primary private IPs.
                  in: query
                  name: privateDnsNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The public IPs associated with the private IPs.
                  in: query
                  name: privateIpsLinkPublicIpPublicIps
                  schema:
                    items:
                        type: string
                    type: array
                - description: Whether the private IP is the primary IP associated with the NIC.
                  in: query
                  name: privateIpsPrimaryIp
                  schema:
                    type: boolean
                - description: The private IPs of the NICs.
                  in: query
                  name: privateIpsPrivateIps
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the security groups associated with the NICs.
                  in: query
                  name: securityGroupIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the security groups associated with the NICs.
                  in: query
                  name: securityGroupNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of the NICs.
                  in: query
                  name: states
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Subnets for the NICs.
                  in: query
                  name: subnetIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the NICs.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the NICs.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the NICs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpcs where the NICs are located.
                  in: query
                  name: vpcIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the NICs.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
                - description: The Subregions where the NICs are located.
                  in: query
                  name: availabilityZoneNames
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadNicsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Nic
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: Creates a network interface card (NIC) in the specified Subnet.<br /><br />
            operationId: CreateNic
            requestBody:
                $ref: '#/components/requestBodies/CreateNicRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateNicResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Nic
    /compute/spaces/{spaceId}/nics/{id}:
        delete:
            description: |-
                Deletes the specified network interface card (NIC).<br />
                The network interface must not be attached to any virtual machine (VM).
            operationId: DeleteNic
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the NIC you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Nic
        get:
            description: Retrieves information about the Network Interface Card (NIC) whose id is given as a parameter.
            operationId: ReadNicsById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadNics
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadNicsByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Nic
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: Modifies the specified network interface card (NIC). You can specify only one attribute at a time.
            operationId: UpdateNic
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the NIC you want to modify.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateNicRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateNicResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Nic
    /compute/spaces/{spaceId}/nics/{id}/privateIps/link:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: Assigns one or more secondary private IPs to a specified network interface card (NIC). This action is only available in a Vpc. The private IPs to be assigned can be added individually using the `PrivateIps` parameter, or you can specify the number of private IPs to be automatically chosen within the Subnet range using the `SecondaryPrivateIpCount` parameter. You can specify only one of these two parameters. If none of these parameters are specified, a private IP is chosen within the Subnet range.
            operationId: LinkPrivateIps
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the NIC.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/LinkPrivateIpsRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Nic
    /compute/spaces/{spaceId}/nics/{id}/privateIps/unlink:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: Unassigns one or more secondary private IPs from a network interface card (NIC).
            operationId: UnlinkPrivateIps
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: Id of Nic
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UnlinkPrivateIpsRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Nic
    /compute/spaces/{spaceId}/nics/{id}/vms/link:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Attaches a network interface card (NIC) to a virtual machine (VM).<br />
                The interface and the VM must be in the same AvailabilityZone. The VM can be either `running` or `stopped`. The NIC must be in the `available` state.
            operationId: LinkNic
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the NIC you want to attach.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/LinkNicRequest'
            responses:
                "200":
                    $ref: '#/components/responses/LinkNicResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Nic
    /compute/spaces/{spaceId}/nics/{id}/vms/unlink:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Detaches a network interface card (NIC) from a virtual machine (VM).<br />
                The primary NIC cannot be detached.
            operationId: UnlinkNic
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: Id of Nic
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UnlinkNicRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Nic
    /compute/spaces/{spaceId}/publicIpRanges:
        get:
            description: Gets the public IPv4 addresses in CIDR notation for the Region specified in the endpoint of the request.
            operationId: ReadPublicIpRanges
            responses:
                "200":
                    $ref: '#/components/responses/ReadPublicIpRangesResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security: []
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - PublicIp
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/publicIps:
        get:
            description: |-
                Lists one or more public IPs allocated to your account.<br />
                 By default, this action returns information about all your public IPs: available or associated with a virtual machine (VM), a network interface card (NIC) or a NAT Gateway.
            operationId: ReadPublicIps
            parameters:
                - description: The IDs representing the associations of public IPs with VMs or NICs.
                  in: query
                  name: linkPublicIpIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the NICs.
                  in: query
                  name: nicIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The private IPs associated with the public IPs.
                  in: query
                  name: privateIps
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the public IPs.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the public IPs.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the public IPs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the VMs.
                  in: query
                  name: vmIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the public IPs.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadPublicIpsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - PublicIp
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Acquires a public IP for your account.<br />
                A public IP is a static IP designed for dynamic Cloud computing. It can be associated with a virtual machine (VM) in the public Cloud or in a Vpc, a network interface card (NIC), a NAT Gateway.<br /><br />
            operationId: CreatePublicIp
            responses:
                "201":
                    $ref: '#/components/responses/CreatePublicIpResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - PublicIp
    /compute/spaces/{spaceId}/publicIps/{id}:
        delete:
            description: |-
                Releases a public IP.<br />
                You can release a public IP associated with your account. This address is released in the public IP pool and can be used by someone else. Before releasing a public IP, ensure you updated all your resources communicating with this address.
            operationId: DeletePublicIp
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID representing the association of the public IP with the VM or the NIC. In a Vpc, this parameter is required.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - PublicIp
        get:
            description: Gets information about one of public IPs allocated to your account.
            operationId: ReadPublicIpsById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadPublicIps
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadPublicIpsByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - PublicIp
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/publicIps/{id}/link:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Associates a public IP with a virtual machine (VM) or a network interface card (NIC), in the public Cloud or in a Vpc. You can associate a public IP with only one VM or network interface at a time.<br />
                To associate a public IP in a Vpc, ensure that the Vpc has an Internet Gateway attached. For more information, see the [LinkInternetGateway](#linkinternetservice) method.<br />
                By default, the public IP is disassociated every time you stop and start the VM. For a persistent association, you can add the `osc.fcu.eip.auto-attach` tag to the VM with the public IP as value. For more information, see the [CreateTags](#createtags) method.<br /><br />

                **[IMPORTANT]**<br />
                You can associate a public IP with a network address translation (NAT) service only when creating the NAT Gateway. To modify its public IP, you need to delete the NAT Gateway and re-create it with the new public IP. For more information, see the [CreateNatGateway](#createnatgateway) method.
            operationId: LinkPublicIp
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The allocation ID of the public IP. This parameter is required unless you use the `PublicIp` parameter.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/LinkPublicIpRequest'
            responses:
                "200":
                    $ref: '#/components/responses/LinkPublicIpResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - PublicIp
    /compute/spaces/{spaceId}/publicIps/{id}/unlink:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Disassociates a public IP from the virtual machine (VM) or network interface card (NIC) it is associated with.<br /><br />

                **[IMPORTANT]**<br />
                To disassociate the public IP from a NAT Gateway, you need to delete the NAT Gateway. For more information, see the [DeleteNatGateway](#deletenatgateway) method.
            operationId: UnlinkPublicIp
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: Id of the PublicIp
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UnlinkPublicIpRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - PublicIp
    /compute/spaces/{spaceId}/routeTables:
        get:
            description: |-
                Lists one or more of your route tables.<br />
                In your Vpc, each Subnet must be associated with a route table. If a Subnet is not explicitly associated with a route table, it is implicitly associated with the main route table of the Vpc.
            operationId: ReadRouteTables
            parameters:
                - description: The IDs of the route tables involved in the associations.
                  in: query
                  name: linkRouteTableIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the associations between the route tables and the Subnets.
                  in: query
                  name: linkRouteTableLinkRouteTableIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: If true, the route tables are the main ones for their Vpcs.
                  in: query
                  name: linkRouteTableMain
                  schema:
                    type: boolean
                - description: The IDs of the Subnets involved in the associations.
                  in: query
                  name: linkSubnetIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The methods used to create a route.
                  in: query
                  name: routeCreationMethods
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IP ranges specified in routes in the tables.
                  in: query
                  name: routeDestinationIpRanges
                  schema:
                    items:
                        type: string
                    type: array
                - description: The service IDs specified in routes in the tables.
                  in: query
                  name: routeDestinationServiceIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the gateways specified in routes in the tables.
                  in: query
                  name: routeGatewayIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of routes in the route tables (always `active`).
                  in: query
                  name: routeStates
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the VMs specified in routes in the tables.
                  in: query
                  name: routeVmIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the route tables.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the route tables.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the route tables, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpcs for the route tables.
                  in: query
                  name: vpcIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the NAT gateways specified in routes in the tables.
                  in: query
                  name: routeNatGatewayIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpc peerings specified in routes in the tables.
                  in: query
                  name: routeVpcPeeringIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the route tables.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadRouteTablesResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - RouteTable
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a route table for a specified Vpc.<br />
                You can then add routes and associate this route table with a Subnet.<br /><br />
            operationId: CreateRouteTable
            requestBody:
                $ref: '#/components/requestBodies/CreateRouteTableRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateRouteTableResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - RouteTable
    /compute/spaces/{spaceId}/routeTables/{id}:
        delete:
            description: |-
                Deletes a specified route table.<br />
                Before deleting a route table, you must disassociate it from any Subnet. You cannot delete the main route table.
            operationId: DeleteRouteTable
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the route table you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - RouteTable
        get:
            description: Retrieves information about the RouteTable whose id is given as a parameter.
            operationId: ReadRouteTablesById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadRouteTables
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadRouteTablesByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - RouteTable
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/routeTables/{id}/routePropagation:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: Configures the propagation of routes to a specified route table of a Vpc by a virtual gateway.
            operationId: UpdateRouteTableRoutePropagation
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the route table.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateRouteTableRoutePropagationRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateRouteTableRoutePropagationResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - RouteTable
    /compute/spaces/{spaceId}/routeTables/{id}/routes:
        delete:
            description: Deletes a route from a specified route table.
            operationId: DeleteRoute
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the route table from which you want to delete a route.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/DeleteRouteRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Route
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a route in a specified route table within a specified Vpc.<br />
                You must specify one of the following elements as the target:<br /><br />

                * Vpc peering<br />
                * NAT VM<br />
                * Internet Gateway<br />
                 * Virtual gateway<br />
                * NAT Gateway<br />
                * Network interface card (NIC)<br /><br />

                The routing algorithm is based on the most specific match.<br /><br />
            operationId: CreateRoute
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the route table for which you want to create a route.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/CreateRouteRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateRouteResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Route
        put:
            description: "Replaces an existing route within a route table in a Vpc.<br />\n You must specify one of the following elements as the target:<br /><br />\n \n* Vpc peering<br />\n* NAT virtual machine (VM)<br />\n* Internet Gateway<br />\n* Virtual gateway<br />\n* NAT Gateway<br />\n* Network interface card (NIC)<br /><br />\n\nThe routing algorithm is based on the most specific match."
            operationId: UpdateRoute
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the route table.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateRouteRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateRouteResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Route
    /compute/spaces/{spaceId}/routeTables/{id}/subnets/link:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Associates a Subnet with a route table.<br />
                The Subnet and the route table must be in the same Vpc. The traffic is routed according to the route table defined within this Vpc. You can associate a route table with several Subnets.
            operationId: LinkRouteTable
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the route table.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/LinkRouteTableRequest'
            responses:
                "200":
                    $ref: '#/components/responses/LinkRouteTableResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - RouteTable
    /compute/spaces/{spaceId}/routeTables/{id}/subnets/unlink:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Disassociates a Subnet from a route table.<br />
                After disassociation, the Subnet can no longer use the routes in this route table, but uses the routes in the main route table of the Vpc instead.
            operationId: UnlinkRouteTable
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: Id of the RouteTable
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UnlinkRouteTableRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - RouteTable
    /compute/spaces/{spaceId}/securityGroups:
        get:
            description: |-
                Lists one or more security groups.<br />
                You can specify either the name of the security groups or their IDs.
            operationId: ReadSecurityGroups
            parameters:
                - description: The descriptions of the security groups.
                  in: query
                  name: descriptions
                  schema:
                    items:
                        type: string
                    type: array
                - description: The beginnings of the port ranges for the TCP and UDP protocols, or the ICMP type numbers.
                  in: query
                  name: inboundRuleFromPortRanges
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The IP ranges that have been granted permissions, in CIDR notation (for example, `10.0.0.0/24`).
                  in: query
                  name: inboundRuleIpRanges
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IP protocols for the permissions (`tcp` \| `udp` \| `icmp`, or a protocol number, or `-1` for all protocols).
                  in: query
                  name: inboundRuleProtocols
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the security groups that have been granted permissions.
                  in: query
                  name: inboundRuleSecurityGroupIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the security groups that have been granted permissions.
                  in: query
                  name: inboundRuleSecurityGroupNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The ends of the port ranges for the TCP and UDP protocols, or the ICMP code numbers.
                  in: query
                  name: inboundRuleToPortRanges
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The beginnings of the port ranges for the TCP and UDP protocols, or the ICMP type numbers.
                  in: query
                  name: outboundRuleFromPortRanges
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The IP ranges that have been granted permissions, in CIDR notation (for example, `10.0.0.0/24`).
                  in: query
                  name: outboundRuleIpRanges
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IP protocols for the permissions (`tcp` \| `udp` \| `icmp`, or a protocol number, or `-1` for all protocols).
                  in: query
                  name: outboundRuleProtocols
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the security groups that have been granted permissions.
                  in: query
                  name: outboundRuleSecurityGroupIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the security groups that have been granted permissions.
                  in: query
                  name: outboundRuleSecurityGroupNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The ends of the port ranges for the TCP and UDP protocols, or the ICMP code numbers.
                  in: query
                  name: outboundRuleToPortRanges
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The IDs of the security groups.
                  in: query
                  name: securityGroupIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the security groups.
                  in: query
                  name: securityGroupNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the security groups.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the security groups.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the security groups, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpcs specified when the security groups were created.
                  in: query
                  name: vpcIds
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadSecurityGroupsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - SecurityGroup
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a security group.<br />
                This action creates a security group either in the public Cloud or in a specified Vpc. By default, a default security group for use in the public Cloud and a default security group for use in a Vpc are created.<br />
                When launching a virtual machine (VM), if no security group is explicitly specified, the appropriate default security group is assigned to the VM. Default security groups include a default rule granting VMs network access to each other.<br />
                When creating a security group, you specify a name. Two security groups for use in the public Cloud or for use in a Vpc cannot have the same name.<br />
                You can have up to 500 security groups in the public Cloud. You can create up to 500 security groups per Vpc.<br />
                To add or remove rules, use the [CreateSecurityGroupRule](#createsecuritygrouprule) method.<br /><br />
            operationId: CreateSecurityGroup
            requestBody:
                $ref: '#/components/requestBodies/CreateSecurityGroupRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateSecurityGroupResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - SecurityGroup
    /compute/spaces/{spaceId}/securityGroups/{id}:
        delete:
            description: |-
                Deletes a specified security group.<br />
                You can specify either the name of the security group or its ID.<br />
                This action fails if the specified group is associated with a virtual machine (VM) or referenced by another security group.
            operationId: DeleteSecurityGroup
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the security group you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - SecurityGroup
        get:
            description: Retrieves information about the SecurityGroup whose id is given as a parameter.
            operationId: ReadSecurityGroupsById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadSecurityGroups
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadSecurityGroupsByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - SecurityGroup
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/securityGroups/{id}/rules:
        delete:
            description: |-
                Deletes one or more inbound or outbound rules from a security group. For the rule to be deleted, the values specified in the deletion request must exactly match the value of the existing rule.<br />
                In case of TCP and UDP protocols, you have to indicate the destination port or range of ports. In case of ICMP protocol, you have to specify the ICMP type and code numbers.<br />
                Rules (IP permissions) consist of the protocol, IP range or source security group.<br />
                To remove outbound access to a destination security group, we recommend to use a set of IP permissions. We also recommend to specify the protocol in a set of IP permissions.
            operationId: DeleteSecurityGroupRule
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the security group you want to delete a rule from.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/DeleteSecurityGroupRuleRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - SecurityGroupRule
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Adds one or more rules to a security group.<br />
                Use the `SecurityGroupId` parameter to specify the security group for which you want to create a rule.<br />
                Use the `Flow` parameter to specify if you want an inbound rule or an outbound rule.<br /><br />
                An inbound rule allows the security group to receive traffic:
                * Either from a specific IP range (`IpRange` parameter) on a specific port range (`FromPortRange` and `ToPortRange` parameters) and specific protocol (`IpProtocol` parameter).
                * Or from another specific security group (`SecurityGroupAccountIdToLink` and `SecurityGroupNameToLink` parameters).<br />

                (Vpc only) An outbound rule works similarly but allows the security group to send traffic rather than receive traffic.<br />

                Alternatively, you can use the `Rules` parameter to add several rules at the same time.

                **[NOTE]**<br />
                * The modifications are effective as quickly as possible, but a small delay may occur.<br />
                 * By default, traffic between two security groups is allowed through both public and private IPs. To restrict traffic to private IPs only, contact our Support team at support@numspot.com.
            operationId: CreateSecurityGroupRule
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the security group for which you want to create a rule.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/CreateSecurityGroupRuleRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateSecurityGroupRuleResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - SecurityGroupRule
    /compute/spaces/{spaceId}/serverCertificates:
        get:
            description: Lists your server certificates.
            operationId: ReadServerCertificates
            parameters:
                - description: The paths to the server certificates.
                  in: query
                  name: paths
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadServerCertificatesResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ServerCertificates
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: Creates a server certificate and its matching private key.
            operationId: CreateServerCertificate
            requestBody:
                $ref: '#/components/requestBodies/CreateServerCertificateRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateServerCertificateResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ServerCertificates
    /compute/spaces/{spaceId}/serverCertificates/{id}:
        delete:
            description: Deletes a specified server certificate.
            operationId: DeleteServerCertificate
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the server certificate.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ServerCertificate
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: Modifies the name and/or the path of a specified server certificate.
            operationId: UpdateServerCertificate
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the server certificate.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateServerCertificateRequest'
            responses:
                "204":
                    $ref: '#/components/responses/UpdateServerCertificateResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ServerCertificate
    /compute/spaces/{spaceId}/snapshots:
        get:
            description: Lists one or more available snapshots and the permissions required to create volumes from them.
            operationId: ReadSnapshots
            parameters:
                - description: The descriptions of the snapshots.
                  in: query
                  name: descriptions
                  schema:
                    items:
                        type: string
                    type: array
                - description: The beginning of the time period, in ISO 8601 date-time format (for example, `2020-06-14T00:00:00.000Z`).
                  in: query
                  name: fromCreationDate
                  schema:
                    type: string
                - description: The progresses of the snapshots, as a percentage.
                  in: query
                  name: progresses
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The states of the snapshots (`in-queue` \| `completed` \| `error`).
                  in: query
                  name: states
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the snapshots.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the snapshots.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the snapshots, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The end of the time period, in ISO 8601 date-time format (for example, `2020-06-30T00:00:00.000Z`).
                  in: query
                  name: toCreationDate
                  schema:
                    type: string
                - description: The IDs of the volumes used to create the snapshots.
                  in: query
                  name: volumeIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The sizes of the volumes used to create the snapshots, in gibibytes (GiB).
                  in: query
                  name: volumeSizes
                  schema:
                    items:
                        type: integer
                    type: array
                - description: If true, lists all public volumes. If false, lists all private volumes.
                  in: query
                  name: isPublic
                  schema:
                    type: boolean
                - description: The IDs of the snapshots.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadSnapshotsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Snapshot
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a snapshot. Snapshots are point-in-time images of a volume that you can use to back up your data or to create replicas of this volume.<br />
                You can use this method in three different ways:
                * **Creating from a volume**: You can create a snapshot from one of your volumes.<br />
                * **Copying a snapshot**: You can copy an existing snapshot. The source snapshot can be one of your own snapshots, or a snapshot owned by another account that has granted you permission via the [UpdateSnapshot](#updatesnapshot) method.<br />
                * **Importing from a bucket**: You can import a snapshot located in an NumSpot Object Storage (NOS) bucket. First, the owner of the source snapshot must export it to the bucket by using the [CreateSnapshotExportTask](#createsnapshotexporttask) method. Then, they must grant you permission to read the snapshot via a pre-signed URL or Access Control Lists.
            operationId: CreateSnapshot
            requestBody:
                $ref: '#/components/requestBodies/CreateSnapshotRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateSnapshotResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Snapshot
    /compute/spaces/{spaceId}/snapshots/{id}:
        delete:
            description: |-
                Deletes a specified snapshot.<br />
                You cannot delete a snapshot that is currently in used by a NumSpot machine image (NMI). To delete such a snapshot, you must first delete the corresponding NMI. For more information, see the [DeleteImage](#deleteimage) method.
            operationId: DeleteSnapshot
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the snapshot you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Snapshot
        get:
            description: Retrieves information about the Snapshot whose id is given as a parameter.
            operationId: ReadSnapshotsById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadSnapshots
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadSnapshotsByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Snapshot
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/subnets:
        get:
            description: |-
                Lists one or more of your Subnets.<br />
                If you do not specify any Subnet ID, this action describes all of your Subnets.
            operationId: ReadSubnets
            parameters:
                - description: The number of available IPs.
                  in: query
                  name: availableIpsCounts
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The IP ranges in the Subnets, in CIDR notation (for example, `10.0.0.0/16`).
                  in: query
                  name: ipRanges
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of the Subnets (`pending` \| `available` \| `deleted`).
                  in: query
                  name: states
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the Subnets.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the Subnets.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the Subnets, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpcs in which the Subnets are.
                  in: query
                  name: vpcIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Subnets.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the Subregions in which the Subnets are located.
                  in: query
                  name: availabilityZoneNames
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadSubnetsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Subnet
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a Subnet in an existing Vpc.<br />
                To create a Subnet in a Vpc, you have to provide the ID of the Vpc and the IP range for the Subnet (its network range). Once the Subnet is created, you cannot modify its IP range.<br /><br />
            operationId: CreateSubnet
            requestBody:
                $ref: '#/components/requestBodies/CreateSubnetRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateSubnetResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 409 response (Conflict).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Subnet
    /compute/spaces/{spaceId}/subnets/{id}:
        delete:
            description: "Deletes a specified Subnet.<br />\nBefore deleting the Subnet, you need to delete all resources associated with the Subnet:<br /><br />\n \n* Virtual machines (VMs)<br />\n* Network Interface Cards (NICs)<br />\n * NAT Gateways<br />\n* Load balancers"
            operationId: DeleteSubnet
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the Subnet you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Subnet
        get:
            description: Retrieves information about the Subnet whose id is given as a parameter.
            operationId: ReadSubnetsById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadSubnets
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadSubnetsByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Subnet
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: Modifies the specified attribute of a Subnet.
            operationId: UpdateSubnet
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the Subnet.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateSubnetRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateSubnetResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Subnet
    /compute/spaces/{spaceId}/tags:
        get:
            description: Lists one or more tags for your resources.
            operationId: ReadTags
            parameters:
                - description: The keys of the tags that are assigned to the resources. You can use this filter alongside the `Values` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.
                  in: query
                  name: keys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the resources with which the tags are associated.
                  in: query
                  name: resourceIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The resource type (`vm` \| `image` \| `volume` \| `snapshot` \| `public-ip` \| `security-group` \| `route-table` \| `nic` \| `vpc` \| `subnet` \| `vpc-peering` \| `vpc-access-point` \| `nat-gateway` \| `internet-gateway` \| `client-gateway` \| `virtual-gateway` \| `vpn-connection` \| `dhcp-options` \| `task`).
                  in: query
                  name: resourceTypes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags that are assigned to the resources. You can use this filter alongside the `TagKeys` filter. In that case, you filter the resources corresponding to each tag, regardless of the other filter.
                  in: query
                  name: values
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadTagsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Tag
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/virtualGateways:
        get:
            description: Lists one or more virtual gateways.
            operationId: ReadVirtualGateways
            parameters:
                - description: The types of the virtual gateways (only `ipsec.1` is supported).
                  in: query
                  name: connectionTypes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The current states of the attachments between the virtual gateways and the Vpcs (`attaching` \| `attached` \| `detaching` \| `detached`).
                  in: query
                  name: linkStates
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of the virtual gateways (`pending` \| `available` \| `deleting` \| `deleted`).
                  in: query
                  name: states
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the virtual gateways.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the virtual gateways.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the virtual gateways, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpcs the virtual gateways are attached to.
                  in: query
                  name: linkVpcIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the virtual gateways.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadVirtualGatewaysResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VirtualGateway
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a virtual gateway.<br />
                A virtual gateway is the access point on the Vpc side of a VPN connection.<br /><br />
            operationId: CreateVirtualGateway
            requestBody:
                $ref: '#/components/requestBodies/CreateVirtualGatewayRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateVirtualGatewayResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VirtualGateway
    /compute/spaces/{spaceId}/virtualGateways/{id}:
        delete:
            description: |-
                Deletes a specified virtual gateway.<br />
                Before deleting a virtual gateway, we recommend to detach it from the Vpc and delete the VPN connection.
            operationId: DeleteVirtualGateway
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the virtual gateway you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VirtualGateway
        get:
            description: Retrieves information about the VirtualGateway whose id is given as a parameter.
            operationId: ReadVirtualGatewaysById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadVirtualGateways
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadVirtualGatewaysByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VirtualGateway
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/virtualGateways/{id}/vpcs/link:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Attaches a virtual gateway to a Vpc.

                **[IMPORTANT]**<br />
                 This action can be done only if the virtual gateway is in the `available` state.
            operationId: LinkVirtualGatewayToVpc
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the virtual gateway.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/LinkVirtualGatewayToVpcRequest'
            responses:
                "200":
                    $ref: '#/components/responses/LinkVirtualGatewayToVpcResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VirtualGateway
    /compute/spaces/{spaceId}/virtualGateways/{id}/vpcs/unlink:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Detaches a virtual gateway from a Vpc.<br />
                You must wait until the virtual gateway is in the detached state before you can attach another Vpc to it or delete the Vpc it was previously attached to.
            operationId: UnlinkVirtualGatewayToVpc
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the virtual gateway.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UnlinkVirtualGatewayToVpcRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VirtualGateway
    /compute/spaces/{spaceId}/vms:
        get:
            description: "Lists one or more of your virtual machines (VMs).<br />\nIf you provide one or more VM IDs, this action returns descriptions for those specific VMs. If no VM IDs are provided, descriptions for all VMs belonging to you are returned. Providing an invalid VM ID results in an error. If you provide the ID of a VM that does not belong to you, its description is not included in the response.<br /> \nPlease note that the refresh interval for data returned by this action is one hour, so a terminated VM may still appear in the response."
            operationId: ReadVms
            parameters:
                - description: The architectures of the VMs (`i386` \| `x86_64`).
                  in: query
                  name: architectures
                  schema:
                    items:
                        type: string
                    type: array
                - description: Whether the BSU volumes are deleted when terminating the VMs.
                  in: query
                  name: blockDeviceMappingDeleteOnVmDeletion
                  schema:
                    type: boolean
                - description: The device names for the BSU volumes (in the format `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX`).
                  in: query
                  name: blockDeviceMappingDeviceNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The link dates for the BSU volumes mapped to the VMs (for example, `2016-01-23T18:45:30.000Z`).
                  in: query
                  name: blockDeviceMappingLinkDates
                  schema:
                    items:
                        oneOf:
                            - format: date
                              type: string
                            - format: date-time
                              type: string
                    type: array
                - description: The states for the BSU volumes (`attaching` \| `attached` \| `detaching` \| `detached`).
                  in: query
                  name: blockDeviceMappingStates
                  schema:
                    items:
                        type: string
                    type: array
                - description: The volume IDs of the BSU volumes.
                  in: query
                  name: blockDeviceMappingVolumeIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The idempotency tokens provided when launching the VMs.
                  in: query
                  name: clientTokens
                  schema:
                    items:
                        type: string
                    type: array
                - description: The dates when the VMs were launched.
                  in: query
                  name: creationDates
                  schema:
                    items:
                        oneOf:
                            - format: date
                              type: string
                            - format: date-time
                              type: string
                    type: array
                - description: The IDs of the OMIs used to launch the VMs.
                  in: query
                  name: imageIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: Whether the source/destination checking is enabled (true) or disabled (false).
                  in: query
                  name: isSourceDestChecked
                  schema:
                    type: boolean
                - description: The names of the keypairs used when launching the VMs.
                  in: query
                  name: keypairNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The numbers for the VMs when launching a group of several VMs (for example, `0`, `1`, `2`, and so on).
                  in: query
                  name: launchNumbers
                  schema:
                    items:
                        type: integer
                    type: array
                - description: Whether the VMs are Spot Instances (spot).
                  in: query
                  name: lifecycles
                  schema:
                    items:
                        type: string
                    type: array
                - description: The descriptions of the NICs.
                  in: query
                  name: nicDescriptions
                  schema:
                    items:
                        type: string
                    type: array
                - description: Whether the source/destination checking is enabled (true) or disabled (false).
                  in: query
                  name: nicIsSourceDestChecked
                  schema:
                    type: boolean
                - description: Whether the NICs are deleted when the VMs they are attached to are deleted.
                  in: query
                  name: nicLinkNicDeleteOnVmDeletion
                  schema:
                    type: boolean
                - description: The device numbers the NICs are attached to.
                  in: query
                  name: nicLinkNicDeviceNumbers
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The dates and time when the NICs were attached to the VMs.
                  in: query
                  name: nicLinkNicLinkNicDates
                  schema:
                    items:
                        oneOf:
                            - format: date
                              type: string
                            - format: date-time
                              type: string
                    type: array
                - description: The IDs of the NIC attachments.
                  in: query
                  name: nicLinkNicLinkNicIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of the attachments.
                  in: query
                  name: nicLinkNicStates
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the VMs the NICs are attached to.
                  in: query
                  name: nicLinkNicVmIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The association IDs returned when the public IPs were associated with the NICs.
                  in: query
                  name: nicLinkPublicIpLinkPublicIpIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The allocation IDs returned when the public IPs were allocated to their accounts.
                  in: query
                  name: nicLinkPublicIpPublicIpIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The public IPs associated with the NICs.
                  in: query
                  name: nicLinkPublicIpPublicIps
                  schema:
                    items:
                        type: string
                    type: array
                - description: The Media Access Control (MAC) addresses of the NICs.
                  in: query
                  name: nicMacAddresses
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the NICs.
                  in: query
                  name: nicNicIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The public IPs associated with the private IPs.
                  in: query
                  name: nicPrivateIpsLinkPublicIpIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: Whether the private IPs are the primary IPs associated with the NICs.
                  in: query
                  name: nicPrivateIpsPrimaryIp
                  schema:
                    type: boolean
                - description: The private IPs of the NICs.
                  in: query
                  name: nicPrivateIpsPrivateIps
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the security groups associated with the NICs.
                  in: query
                  name: nicSecurityGroupIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the security groups associated with the NICs.
                  in: query
                  name: nicSecurityGroupNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of the NICs (`available` \| `in-use`).
                  in: query
                  name: nicStates
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Subnets for the NICs.
                  in: query
                  name: nicSubnetIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The platforms. Use windows if you have Windows VMs. Otherwise, leave this filter blank.
                  in: query
                  name: platforms
                  schema:
                    items:
                        type: string
                    type: array
                - description: The private IPs of the VMs.
                  in: query
                  name: privateIps
                  schema:
                    items:
                        type: string
                    type: array
                - description: The product codes associated with the OMI used to create the VMs.
                  in: query
                  name: productCodes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The public IPs of the VMs.
                  in: query
                  name: publicIps
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the reservation of the VMs, created every time you launch VMs. These reservation IDs can be associated with several VMs when you lauch a group of VMs using the same launch request.
                  in: query
                  name: reservationIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the root devices for the VMs (for example, `/dev/sda1`)
                  in: query
                  name: rootDeviceNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The root devices types used by the VMs (always `ebs`)
                  in: query
                  name: rootDeviceTypes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the security groups for the VMs (only in the public Cloud).
                  in: query
                  name: securityGroupIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the security groups for the VMs (only in the public Cloud).
                  in: query
                  name: securityGroupNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The reason codes for the state changes.
                  in: query
                  name: stateReasonCodes
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The messages describing the state changes.
                  in: query
                  name: stateReasonMessages
                  schema:
                    items:
                        type: string
                    type: array
                - description: The reasons explaining the current states of the VMs. This filter is like the `StateReasonCodes` one.
                  in: query
                  name: stateReasons
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Subnets for the VMs.
                  in: query
                  name: subnetIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the VMs.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the VMs.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the VMs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The tenancies of the VMs (`dedicated` \| `default` \| `host`).
                  in: query
                  name: tenancies
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the security groups for the VMs.
                  in: query
                  name: vmSecurityGroupIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the security group for the VMs.
                  in: query
                  name: vmSecurityGroupNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The state codes of the VMs: `-1` (quarantine), `0` (pending), `16` (running), `32` (shutting-down), `48` (terminated), `64` (stopping), and `80` (stopped).'
                  in: query
                  name: vmStateCodes
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The state names of the VMs (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
                  in: query
                  name: vmStateNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The NumSpot VM types.
                  in: query
                  name: types
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpcs in which the VMs are running.
                  in: query
                  name: vpcIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpcs where the NICs are located.
                  in: query
                  name: nicVpcIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The Subregions where the NICs are located.
                  in: query
                  name: nicAvailabilityZoneNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the Subregions of the VMs.
                  in: query
                  name: availabilityZoneNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: One or more IDs of VMs.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadVmsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vm
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates virtual machines (VMs), and then launches them.<br />
                 This action enables you to create a specified number of VMs using an NumSpot machine image (NMI) that you are allowed to use, and then to automatically launch them.<br />
                The VMs remain in the `pending` state until they are created and ready to be used. Once automatically launched, they are in the `running` state.<br />
                To check the state of your VMs, call the [ReadVms](#readvms) method.<br />
                If not specified, the security group used by the service is the default one.<br />
                The metadata server enables you to get the public key provided when the VM is launched. Official NMIs contain a script to get this public key and put it inside the VM to provide secure access without password.<br /><br />
            operationId: CreateVms
            requestBody:
                $ref: '#/components/requestBodies/CreateVmsRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateVmsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vm
    /compute/spaces/{spaceId}/vms/{id}:
        delete:
            description: |-
                Terminates virtual machine (VM).<br />
                This operation is idempotent, that means that all calls succeed if you terminate a VM more than once.
            operationId: DeleteVms
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: Id of the VM
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vm
        get:
            description: Retrieves information about the Virtual Machine (VM) whose id is given as a parameter.
            operationId: ReadVmsById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadVms
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadVmsByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vm
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Modifies the specified attributes of a virtual machine (VM).<br />
                You must stop the VM before modifying the following attributes:<br />
                 * `NestedVirtualization`<br />
                * `Performance`<br />
                * `UserData`<br />
                 * `type`
            operationId: UpdateVm
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the VM.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateVmRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateVmResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vm
    /compute/spaces/{spaceId}/vms/{id}/adminPasswords:
        get:
            description: |-
                Gets the administrator password for a Windows running virtual machine (VM).<br />
                The administrator password is encrypted using the keypair you specified when launching the VM.<br /><br />

                **[IMPORTANT]**<br />
                 * Only RSA keypairs can decrypt the password of a Windows VM.<br />
                * The administrator password is generated only on the first boot of the Windows VM. It is not returned after the first boot.
            operationId: ReadAdminPassword
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the VM.
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadAdminPasswordResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vm
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/vms/{id}/consoleOutputs:
        get:
            description: |-
                Gets the console output for a virtual machine (VM). This console provides the most recent 64 KiB output.<br /><br />

                **[IMPORTANT]**<br />
                On Windows VMs, the console is handled only on the first boot. It returns no output after the first boot.
            operationId: ReadConsoleOutput
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the VM.
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadConsoleOutputResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vm
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/vms/{id}/reboot:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Reboots virtual machine (VM).<br />
                This operation sends a reboot request to specified VM. This is an asynchronous action that queues this reboot request. This action only reboots VM that are valid and that belong to you.
            operationId: RebootVm
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: Id of the VM
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vm
    /compute/spaces/{spaceId}/vms/{id}/start:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Start virtual machine (VM).<br />
                You can start only VM that is valid and that belong to you.
            operationId: StartVm
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: Id of the VM
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/StartVmResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vm
    /compute/spaces/{spaceId}/vms/{id}/stop:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Stops running virtual machine (VM).<br />
                You can stop only VM that is valid and that belong to you. Data stored in the VM RAM is lost.
            operationId: StopVm
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: Id of the VM
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/StopVmRequest'
            responses:
                "200":
                    $ref: '#/components/responses/StopVmResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vm
    /compute/spaces/{spaceId}/vms/states:
        get:
            description: Lists the status of virtual machine (VM).
            operationId: ReadVmsState
            parameters:
                - description: The code for the scheduled event (`system-reboot` \| `system-maintenance`).
                  in: query
                  name: maintenanceEventCodes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The description of the scheduled event.
                  in: query
                  name: maintenanceEventDescriptions
                  schema:
                    items:
                        type: string
                    type: array
                - description: The latest time the event can end.
                  in: query
                  name: maintenanceEventsNotAfter
                  schema:
                    items:
                        format: date
                        type: string
                    type: array
                - description: The earliest time the event can start.
                  in: query
                  name: maintenanceEventsNotBefore
                  schema:
                    items:
                        format: date
                        type: string
                    type: array
                - description: The states of the VMs (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
                  in: query
                  name: vmStates
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the Subregions of the VMs.
                  in: query
                  name: availabilityZoneNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: One or more IDs of VMs.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadVmsStateResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vm
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/volumes:
        get:
            description: Lists one or more specified Block Storage Unit (BSU) volumes.
            operationId: ReadVolumes
            parameters:
                - description: The dates and times of creation of the volumes, in ISO 8601 date-time format (for example, `2020-06-30T00:00:00.000Z`).
                  in: query
                  name: creationDates
                  schema:
                    items:
                        format: date-time
                        type: string
                    type: array
                - description: Whether the volumes are deleted or not when terminating the VMs.
                  in: query
                  name: linkVolumeDeleteOnVmDeletion
                  schema:
                    type: boolean
                - description: The VM device names.
                  in: query
                  name: linkVolumeDeviceNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The dates and times of creation of the volumes, in ISO 8601 date-time format (for example, `2020-06-30T00:00:00.000Z`).
                  in: query
                  name: linkVolumeLinkDates
                  schema:
                    items:
                        format: date-time
                        type: string
                    type: array
                - description: The attachment states of the volumes (`attaching` \| `detaching` \| `attached` \| `detached`).
                  in: query
                  name: linkVolumeLinkStates
                  schema:
                    items:
                        type: string
                    type: array
                - description: One or more IDs of VMs.
                  in: query
                  name: linkVolumeVmIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The snapshots from which the volumes were created.
                  in: query
                  name: snapshotIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the volumes.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the volumes.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the volumes, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The sizes of the volumes, in gibibytes (GiB).
                  in: query
                  name: volumeSizes
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The states of the volumes (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
                  in: query
                  name: volumeStates
                  schema:
                    items:
                        type: string
                    type: array
                - description: The types of the volumes (`standard` \| `gp2` \| `io1`).
                  in: query
                  name: volumeTypes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The names of the Subregions in which the volumes were created.
                  in: query
                  name: availabilityZoneNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the volumes.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadVolumesResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Volume
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a Block Storage Unit (BSU) volume in a specified Region.<br />
                BSU volumes can be attached to a virtual machine (VM) in the same Availability Zone. You can create an empty volume or restore a volume from an existing snapshot.<br />
                The available volume types are: Enterprise (`io1`) for provisioned IOPS SSD volumes, Performance (`gp2`) for general purpose SSD volumes, or Magnetic (`standard`) volumes.<br /><br />
            operationId: CreateVolume
            requestBody:
                $ref: '#/components/requestBodies/CreateVolumeRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateVolumeResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Volume
    /compute/spaces/{spaceId}/volumes/{id}:
        delete:
            description: |-
                Deletes a specified Block Storage Unit (BSU) volume.<br />
                You can delete available volumes only, that is, volumes that are not attached to a virtual machine (VM).
            operationId: DeleteVolume
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the volume you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Volume
        get:
            description: Retrieves information about the specified Block Storage Unit (BSU) Volume whose id is given as a parameter.
            operationId: ReadVolumesById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadVolumes
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadVolumesByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Volume
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Modifies the specified attributes of a volume.<br />
                Cold volumes are those attached to VMs that are stopped or stopping, or that are detached. Hot volumes are those attached to running VMs.<br /><br />

                 **[NOTE]**<br />
                When the modification is not instantaneous, the response displays the previous value. You can use the [ReadVolumes](#readvolumes) method to see the new value.
            operationId: UpdateVolume
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the volume you want to update.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateVolumeRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateVolumeResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Volume
    /compute/spaces/{spaceId}/volumes/{id}/vms/link:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Attaches a Block Storage Unit (BSU) volume to a virtual machine (VM).<br />
                The volume and the VM must be in the same AvailabilityZone. The VM can be running or stopped. The volume is attached to the specified VM device.
            operationId: LinkVolume
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the volume you want to attach.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/LinkVolumeRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Volume
    /compute/spaces/{spaceId}/volumes/{id}/vms/unlink:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Detaches a Block Storage Unit (BSU) volume from a virtual machine (VM).<br />
                To detach the root device of a VM, this VM must be stopped.
            operationId: UnlinkVolume
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the volume you want to detach.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UnlinkVolumeRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Volume
    /compute/spaces/{spaceId}/vpcPeerings:
        get:
            description: Lists one or more peering connections between two Vpcs.
            operationId: ReadVpcPeerings
            parameters:
                - description: The dates and times at which the Vpc peerings expire, in ISO 8601 date-time format (for example, `2020-06-14T00:00:00.000Z`).
                  in: query
                  name: expirationDates
                  schema:
                    items:
                        format: date-time
                        type: string
                    type: array
                - description: Additional information about the states of the Vpc peerings.
                  in: query
                  name: stateMessages
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of the Vpc peerings (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
                  in: query
                  name: stateNames
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the Vpc peerings.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the Vpc peerings.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the Vpc peerings, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IP ranges of the peer Vpcs, in CIDR notation (for example, `10.0.0.0/24`).
                  in: query
                  name: accepterVpcIpRanges
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the peer Vpcs
                  in: query
                  name: accepterVpcVpcIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpc peerings.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IP ranges of the peer Vpcs
                  in: query
                  name: sourceVpcIpRanges
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the peer Vpcs
                  in: query
                  name: sourceVpcVpcIds
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadVpcPeeringsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpcPeering
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Requests a Vpc peering between a Vpc you own and a peer Vpc that belongs to you or another account.<br />
                This action creates a Vpc peering that remains in the `pending-acceptance` state until it is accepted by the owner of the peer Vpc. If the owner of the peer Vpc does not accept the request within 7 days, the state of the Vpc peering becomes `expired`. For more information, see [AcceptVpcPeering](#acceptnetpeering).<br /><br />

                **[IMPORTANT]**<br />
                * Peered Vpcs must contain at least one virtual machine (VM) each before the creation of the Vpc peering.<br />
                * The two Vpcs must not have overlapping IP ranges. Otherwise, the Vpc peering is in the `failed` state.<br />
                * A peering connection between two Vpcs works both ways. Therefore, you do not need to create a B-to-A connection if an A-to-B connection is created and accepted.
            operationId: CreateVpcPeering
            requestBody:
                $ref: '#/components/requestBodies/CreateVpcPeeringRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateVpcPeeringResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpcPeering
    /compute/spaces/{spaceId}/vpcPeerings/{id}:
        delete:
            description: |-
                Deletes a Vpc peering.<br />
                If the Vpc peering is in the `active` state, it can be deleted either by the owner of the requester Vpc or the owner of the peer Vpc.<br />
                If it is in the `pending-acceptance` state, it can be deleted only by the owner of the requester Vpc.<br />
                If it is in the `rejected`, `failed`, or `expired` states, it cannot be deleted.
            operationId: DeleteVpcPeering
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the Vpc peering you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 409 response (Conflict).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpcPeering
        get:
            description: Retrieves information about the Peering Connection between two Vpcs whose id is given as a parameter.
            operationId: ReadVpcPeeringsById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadVpcPeerings
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadVpcPeeringsByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpcPeering
        parameters:
            - $ref: '#/components/parameters/SpaceId'
    /compute/spaces/{spaceId}/vpcPeerings/{id}/accept:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Accepts a Vpc peering request.<br />
                To accept this request, you must be the owner of the peer Vpc. If you do not accept the request within 7 days, the state of the Vpc peering becomes `expired`.<br /><br />

                **[NOTE]**<br />
                A peering connection between two Vpcs works both ways. Therefore, when an A-to-B peering connection is accepted, any pending B-to-A peering connection is automatically rejected as redundant.
            operationId: AcceptVpcPeering
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the Vpc peering you want to accept.
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/AcceptVpcPeeringResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 409 response (Conflict).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpcPeering
    /compute/spaces/{spaceId}/vpcPeerings/{id}/reject:
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: |-
                Rejects a Vpc peering request.<br />
                The Vpc peering must be in the `pending-acceptance` state to be rejected. The rejected Vpc peering is then in the `rejected` state.
            operationId: RejectVpcPeering
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the Vpc peering you want to reject.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 409 response (Conflict).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpcPeering
    /compute/spaces/{spaceId}/vpcs:
        get:
            description: Lists one or more Vpcs.
            operationId: ReadVpcs
            parameters:
                - description: The IDs of the DHCP options sets.
                  in: query
                  name: dhcpOptionsSetIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IP ranges for the Vpcs, in CIDR notation (for example, `10.0.0.0/16`).
                  in: query
                  name: ipRanges
                  schema:
                    items:
                        type: string
                    type: array
                - description: If true, the Vpc used is the default one.
                  in: query
                  name: isDefault
                  schema:
                    type: boolean
                - description: The states of the Vpcs (`pending` \| `available` \| `deleting`).
                  in: query
                  name: states
                  schema:
                    items:
                        type: string
                    type: array
                - description: The keys of the tags associated with the Vpcs.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the Vpcs.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the Vpcs, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the Vpcs.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadVpcsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vpc
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a Vpc with a specified IP range.<br />
                The IP range (network range) of your Vpc must be between a /28 netmask (16 IPs) and a /16 netmask (65536 IPs).<br /><br />
            operationId: CreateVpc
            requestBody:
                $ref: '#/components/requestBodies/CreateVpcRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateVpcResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 409 response (Conflict).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vpc
    /compute/spaces/{spaceId}/vpcs/{id}:
        delete:
            description: "Deletes a specified Vpc.<br />\nBefore deleting the Vpc, you need to delete or detach all the resources associated with the Vpc:<br /><br />\n \n* Virtual machines (VMs)<br />\n* Vpc peerings<br />\n* Custom route tables<br />\n* Public IPs allocated to resources in the Vpc<br />\n* Network Interface Cards (NICs) created in the Subnets<br />\n* Virtual gateways, Internet Gateways and NAT Gateways<br />\n* Load balancers<br />\n* Security groups<br />\n * Subnets"
            operationId: DeleteVpc
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the Vpc you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vpc
        get:
            description: Retrieves information about the Vpc whose id is given as a parameter.
            operationId: ReadVpcsById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadVpcs
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadVpcsByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vpc
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: Associates a DHCP options set with a specified Vpc.
            operationId: UpdateVpc
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the Vpc.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateVpcRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateVpcResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Vpc
    /compute/spaces/{spaceId}/vpnConnections:
        get:
            description: Lists one or more VPN connections.
            operationId: ReadVpnConnections
            parameters:
                - description: The Border Gateway Protocol (BGP) Autonomous System Numbers (ASNs) of the connections.
                  in: query
                  name: bgpAsns
                  schema:
                    items:
                        type: integer
                    type: array
                - description: The IDs of the client gateways.
                  in: query
                  name: clientGatewayIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The types of the VPN connections (only `ipsec.1` is supported).
                  in: query
                  name: connectionTypes
                  schema:
                    items:
                        type: string
                    type: array
                - description: The destination IP ranges.
                  in: query
                  name: routeDestinationIpRanges
                  schema:
                    items:
                        type: string
                    type: array
                - description: The states of the VPN connections (`pending` \| `available` \| `deleting` \| `deleted`).
                  in: query
                  name: states
                  schema:
                    items:
                        type: string
                    type: array
                - description: If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).
                  in: query
                  name: staticRoutesOnly
                  schema:
                    type: boolean
                - description: The keys of the tags associated with the VPN connections.
                  in: query
                  name: tagKeys
                  schema:
                    items:
                        type: string
                    type: array
                - description: The values of the tags associated with the VPN connections.
                  in: query
                  name: tagValues
                  schema:
                    items:
                        type: string
                    type: array
                - description: 'The key/value combination of the tags associated with the VPN connections, in the following format: &quot;Filters&quot;:{&quot;Tags&quot;:[&quot;TAGKEY=TAGVALUE&quot;]}.'
                  in: query
                  name: tags
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the virtual gateways.
                  in: query
                  name: virtualGatewayIds
                  schema:
                    items:
                        type: string
                    type: array
                - description: The IDs of the VPN connections.
                  in: query
                  name: ids
                  schema:
                    items:
                        type: string
                    type: array
            responses:
                "200":
                    $ref: '#/components/responses/ReadVpnConnectionsResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpnConnection
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a VPN connection between a specified virtual gateway and a specified client gateway.<br />
                You can create only one VPN connection between a virtual gateway and a client gateway.<br /><br />

                **[IMPORTANT]**<br />
                This action can be done only if the virtual gateway is in the `available` state.<br /><br />
            operationId: CreateVpnConnection
            requestBody:
                $ref: '#/components/requestBodies/CreateVpnConnectionRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateVpnConnectionResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpnConnection
    /compute/spaces/{spaceId}/vpnConnections/{id}:
        delete:
            description: |-
                Deletes a specified VPN connection.<br />
                If you want to delete a Vpc and all its dependencies, we recommend to detach the virtual gateway from the Vpc and delete the Vpc before deleting the VPN connection. This enables you to delete the Vpc without waiting for the VPN connection to be deleted.
            operationId: DeleteVpnConnection
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the VPN connection you want to delete.
                    type: string
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpnConnection
        get:
            description: Retrieves information about the VpnConnection whose id is given as a parameter.
            operationId: ReadVpnConnectionsById
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: ID for ReadVpnConnections
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ReadVpnConnectionsByIdResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpnConnection
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        put:
            description: Modifies the specified attributes of a VPN connection.
            operationId: UpdateVpnConnection
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the VPN connection you want to modify.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/UpdateVpnConnectionRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateVpnConnectionResponse'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpnConnection
    /compute/spaces/{spaceId}/vpnConnections/{id}/routes:
        delete:
            description: Deletes a static route to a VPN connection previously created using the CreateVpnConnectionRoute method.
            operationId: DeleteVpnConnectionRoute
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the target VPN connection of the static route to delete.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/DeleteVpnConnectionRouteRequest'
            responses:
                "204":
                    description: No content.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpnConnection
        parameters:
            - $ref: '#/components/parameters/SpaceId'
        post:
            description: |-
                Creates a static route to a VPN connection.<br />
                This enables you to select the network flows sent by the virtual gateway to the target VPN connection.<br /><br />
            operationId: CreateVpnConnectionRoute
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    description: The ID of the target VPN connection of the static route.
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/CreateVpnConnectionRouteRequest'
            responses:
                "200":
                    description: Ok.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 400 response (Bad Request).
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 401 response (Unauthorized).
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 403 response (Forbidden).
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 404 response (Not Found).
                "414":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 414 response (URI Too Long).
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: The HTTP 500 response (Internal Server Error).
            security:
                - BearerAuth:
                    - compute.all
            servers:
                - url: https://cloud-compute-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - VpnConnection
    /iam/.well-known/jwks.json:
        get:
            description: This endpoint returns JSON Web Keys required to verifying OpenID Connect ID Tokens.
            operationId: JsonWebKeys
            responses:
                "200":
                    $ref: '#/components/responses/JsonWebKeysResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Unauthorized
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Jwk
    /iam/.well-known/openid-configuration:
        get:
            description: A mechanism for an OpenID Connect Relying Party to discover the End-User's OpenID Provider and obtain information needed to interact with it, including its OAuth 2.0 endpoint locations.
            operationId: DiscoverOidcConfiguration
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OidcConfiguration'
                    description: oidcConfiguration
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: ErrorOauth2
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Oidc
    /iam/.well-known/webauthn.js:
        get:
            description: This endpoint provides JavaScript which is needed in order to perform WebAuthn login and registration.
            operationId: GetWebAuthnJavaScript
            responses:
                "200":
                    $ref: '#/components/responses/WebAuthnJavaScriptResponse'
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Frontend
    /iam/admin/organisations/{organisationId}/spaces/{spaceId}/serviceAccounts:
        post:
            description: Create a new administrator service account.
            operationId: CreateAdminServiceAccountSpace
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/SpaceId'
            requestBody:
                $ref: '#/components/requestBodies/CreateServiceAccountRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateServiceAccount201Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Conflict. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occurred during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
    /iam/authorize:
        get:
            description: The endpoint is used to process user authorization requests.
            operationId: Authorize
            parameters:
                - $ref: '#/components/parameters/ClientId'
                - $ref: '#/components/parameters/RedirectUri'
                - $ref: '#/components/parameters/ResponseType'
                - $ref: '#/components/parameters/Scope'
                - $ref: '#/components/parameters/State'
            responses:
                "302":
                    description: Redirection to the redirect URI with the authorization code.
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Malformed request.
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Unauthorized client
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Forbidden
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Internal Server error
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Oidc
            x-numspot-redirect-passthrough: true
    /iam/consent:
        get:
            description: The endpoint is used to process consent for authentication flow.
            operationId: Consent
            parameters:
                - $ref: '#/components/parameters/ConsentChallenge'
            responses:
                "302":
                    description: Redirection to the redirect URI with the consent_verifier.
                "500":
                    description: Internal server error
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Consent
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/errors:
        get:
            description: This endpoint returns the error associated with a user-facing self service errors.
            operationId: GetFlowError
            parameters:
                - description: Error is the error's ID
                  in: query
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/FlowError'
                    description: flowError
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get User-Flow Errors
            tags:
                - Frontend
    /iam/frontend/self-service/login:
        post:
            description: |-
                Use this endpoint to complete a login flow. This endpoint
                behaves differently for API and browser flows.

                API flows expect `application/json` to be sent in the body and responds with
                HTTP 200 and a application/json body with the session token on success;
                HTTP 410 if the original flow expired with the appropriate error messages set and optionally a `use_flow_id` parameter in the body;
                HTTP 400 on form validation errors.

                Browser flows expect a Content-Type of `application/x-www-form-urlencoded` or `application/json` to be sent in the body and respond with
                a HTTP 303 redirect to the post/after login URL or the `return_to` value if it was set and if the login succeeded;
                a HTTP 303 redirect to the login UI URL with the flow ID containing the validation errors otherwise.

                Browser flows with an accept header of `application/json` will not redirect but instead respond with
                HTTP 200 and a application/json body with the signed in identity and a `Set-Cookie` header on success;
                HTTP 303 redirect to a fresh login flow if the original flow expired with the appropriate error messages set;
                HTTP 400 on form validation errors.

                If this endpoint is called with `Accept: application/json` in the header, the response contains the flow without a redirect. In the
                case of an error, the `error.id` of the JSON response body can be one of:

                `session_already_available`: The user is already signed in.
                `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
                `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!
                `browser_location_change_required`: Usually sent when an AJAX request indicates that the browser needs to open a specific URL.
                Most likely used in Social Sign In flows.
            operationId: UpdateLoginFlow
            parameters:
                - description: |-
                    The Login Flow ID
                    The value for this parameter comes from `flow` URL Query parameter sent to your application (`/login?flow=abcde`).
                  in: query
                  name: flow
                  required: true
                  schema:
                    type: string
                - description: The Session Token of the Identity performing the settings flow.
                  in: header
                  name: X-Session-Token
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies
                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateLoginFlowBody'
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateLoginFlowBody'
                required: true
                x-originalParamName: Body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SuccessfulNativeLogin'
                    description: successfulNativeLogin
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginFlow'
                    description: LoginFlow
                "410":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "422":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorBrowserLocationChangeRequired'
                    description: errorBrowserLocationChangeRequired
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Submit a Login Flow
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/login/api:
        get:
            description: |-
                This endpoint initiates a login flow for native apps that do not use a browser, such as mobile devices, smart TVs, and so on.
                If a valid provided session cookie or session token is provided, a 400 Bad Request error
                will be returned unless the URL query parameter `?refresh=true` is set.
                To fetch an existing login flow call `/self-service/login/flows?flow=<flow_id>`.
                You MUST NOT use this endpoint in client-side (Single Page Apps, ReactJS, AngularJS) nor server-side (Java Server
                Pages, NodeJS, PHP, Golang, ...) browser applications. Using this endpoint in these applications will make
                you vulnerable to a variety of CSRF attacks, including CSRF login attacks.
                In the case of an error, the `error.id` of the JSON response body can be one of:
                `session_already_available`: The user is already signed in.
                `session_aal1_required`: Multi-factor auth (e.g. 2fa) was requested but the user has no session yet.
                `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
                This endpoint MUST ONLY be used in scenarios such as native mobile apps (React Native, Objective C, Swift, Java, ...).
            operationId: CreateNativeLoginFlow
            parameters:
                - description: |-
                    Refresh a login session

                    If set to true, this will refresh an existing login session by
                    asking the user to sign in again. This will reset the
                    authenticated_at time of the session.
                  in: query
                  name: refresh
                  schema:
                    type: boolean
                - description: |-
                    Request a Specific AuthenticationMethod Assurance Level
                    Use this parameter to upgrade an existing session's authenticator assurance level (AAL). This
                    allows you to ask for multi-factor authentication. When an identity sign in using e.g. username+password,
                    the AAL is 1. If you wish to "upgrade" the session's security by asking the user to perform TOTP / WebAuth, you would set this to "aal2".
                  in: query
                  name: aal
                  schema:
                    type: string
                - description: The Session Token of the Identity performing the settings flow.
                  in: header
                  name: X-Session-Token
                  schema:
                    type: string
                - description: |-
                    EnableSessionTokenExchangeCode requests the login flow to include a code that can be used to retrieve the session token
                    after the login flow has been completed.
                  in: query
                  name: return_session_token_exchange_code
                  schema:
                    type: boolean
                - description: The URL to return the browser to after the flow was completed.
                  in: query
                  name: return_to
                  schema:
                    type: string
                - description: Via should contain the identity's credential the code should be sent to. Only relevant in aal2 flows.
                  in: query
                  name: via
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginFlow'
                    description: LoginFlow
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create Login Flow for Native Apps
            tags:
                - Frontend
    /iam/frontend/self-service/login/browser:
        get:
            description: |-
                This endpoint initializes a browser-based user login flow. This endpoint will set the appropriate
                cookies and anti-CSRF measures required for browser-based flows.
                If this endpoint is opened as a link in the browser, it will be redirected to
                `selfservice.flows.login.ui_url` with the flow ID set as the query parameter `?flow=`. If a valid user session
                exists already, the browser will be redirected to `urls.default_redirect_url` unless the query parameter
                `?refresh=true` was set.
                If this endpoint is called via an AJAX request, the response contains the flow without a redirect. In the
                case of an error, the `error.id` of the JSON response body can be one of:
                `session_already_available`: The user is already signed in.
                `session_aal1_required`: Multi-factor auth (e.g. 2fa) was requested but the user has no session yet.
                `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
                `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!
                This endpoint is NOT INTENDED for clients that do not have a browser (Chrome, Firefox, ...) as cookies are needed.
            operationId: CreateBrowserLoginFlow
            parameters:
                - description: |-
                    Refresh a login session

                    If set to true, this will refresh an existing login session by
                    asking the user to sign in again. This will reset the
                    authenticated_at time of the session.
                  in: query
                  name: refresh
                  schema:
                    type: boolean
                - description: |-
                    Request a Specific AuthenticationMethod Assurance Level

                    Use this parameter to upgrade an existing session's authenticator assurance level (AAL). This
                    allows you to ask for multi-factor authentication. When an identity sign in using e.g. username+password,
                    the AAL is 1. If you wish to "upgrade" the session's security by asking the user to perform TOTP / WebAuth/ ...
                    you would set this to "aal2".
                  in: query
                  name: aal
                  schema:
                    type: string
                - description: The URL to return the browser to after the flow was completed.
                  in: query
                  name: return_to
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies

                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
                - description: The value for this parameter comes from `login_challenge` URL Query parameter sent to your application.
                  in: query
                  name: login_challenge
                  schema:
                    type: string
                - description: |-
                    An optional organization ID that should be used for logging this user in.
                    This parameter is only effective in the  Network.
                  in: query
                  name: organization
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginFlow'
                    description: LoginFlow
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create Login Flow for Browsers
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/login/flows:
        get:
            description: |-
                This endpoint returns a login flow's context with, for example, error details and other information.
                Browser flows expect the anti-CSRF cookie to be included in the request's HTTP Cookie Header.
                For AJAX requests you must ensure that cookies are included in the request or requests will fail.
                If you use the browser-flow for server-side apps, the services need to run on a common top-level-domain
                and you need to forward the incoming HTTP Cookie header to this endpoint:

                ```js
                pseudo-code example
                router.get('/login', async function (req, res) {
                const flow = await client.getLoginFlow(req.header('cookie'), req.query['flow'])

                res.render('login', flow)
                })
                ```

                This request may fail due to several reasons. The `error.id` can be one of:

                `session_already_available`: The user is already signed in.
                `self_service_flow_expired`: The flow is expired and you should request a new one.
            operationId: GetLoginFlow
            parameters:
                - description: |-
                    The Login Flow ID

                    The value for this parameter comes from `flow` URL Query parameter sent to your
                    application (e.g. `/login?flow=abcde`).
                  in: query
                  name: id
                  required: true
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies
                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginFlow'
                    description: LoginFlow
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "410":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get Login Flow
            tags:
                - Frontend
    /iam/frontend/self-service/logout:
        get:
            description: |-
                This endpoint logs out an identity in a self-service manner.

                If the `Accept` HTTP header is not set to `application/json`, the browser will be redirected (HTTP 303 See Other)
                to the `return_to` parameter of the initial request or fall back to `urls.default_return_to`.

                If the `Accept` HTTP header is set to `application/json`, a 204 No Content response
                will be sent on successful logout instead.

                This endpoint is NOT INTENDED for API clients and only works
                with browsers (Chrome, Firefox, ...). For API clients you can
                call the `/self-service/logout/api` URL directly with the  Session Token.
            operationId: UpdateLogoutFlow
            parameters:
                - description: |-
                    A Valid Logout Token
                    If you do not have a logout token because you only have a session cookie,
                    call `/self-service/logout/browser` to generate a URL for this endpoint.
                  in: query
                  name: token
                  schema:
                    type: string
                - description: The URL to return to after the logout was completed.
                  in: query
                  name: return_to
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies

                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            responses:
                "204":
                    $ref: '#/components/responses/EmptyResponse'
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Update Logout Flow
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/logout/api:
        delete:
            description: |-
                Use this endpoint to log out an identity using an  Session Token. If the  Session Token was successfully
                revoked, the server returns a 204 No Content response. A 204 No Content response is also sent when
                the  Session Token has been revoked already before.
                If the  Session Token is malformed or does not exist a 403 Forbidden response will be returned.
                This endpoint does not remove any HTTP
                Cookies - use the Browser-Based Self-Service Logout Flow instead.
            operationId: PerformNativeLogout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PerformNativeLogoutBody'
                required: true
                x-originalParamName: Body
            responses:
                "204":
                    $ref: '#/components/responses/EmptyResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Perform Logout for Native Apps
            tags:
                - Frontend
    /iam/frontend/self-service/logout/browser:
        get:
            description: |-
                This endpoint initializes a browser-based user logout flow and a URL which can be used to log out the user.
                This endpoint is NOT INTENDED for API clients and only works
                with browsers (Chrome, Firefox, ...). For API clients you can
                call the `/self-service/logout/api` URL directly with the  Session Token.
                The URL is only valid for the currently signed in user. If no user is signed in, this endpoint returns
                a 401 error.
                When calling this endpoint from a backend, please ensure to properly forward the HTTP cookies.
            operationId: CreateBrowserLogoutFlow
            parameters:
                - description: |-
                    HTTP Cookies

                    If you call this endpoint from a backend, please include the
                    original Cookie header in the request.
                  in: header
                  name: cookie
                  schema:
                    type: string
                - description: |-
                    Return to URL

                    The URL to which the browser should be redirected to after the logout
                    has been performed.
                  in: query
                  name: return_to
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutFlow'
                    description: LogoutFlow
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create a Logout URL for Browsers
            tags:
                - Frontend
    /iam/frontend/self-service/recovery:
        get:
            description: Init recovery flow
            operationId: InitRecoveryFlow
            parameters:
                - description: recovery flowId
                  in: query
                  name: flow
                  required: true
                  schema:
                    type: string
                - description: |-
                    Recovery Token
                    The recovery token which completes the recovery request. If the token
                    is invalid (e.g. expired) an error will be shown to the end-user.
                    This parameter is usually set in a link and not used by any direct API call.
                  in: query
                  name: token
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies
                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RecoveryFlow'
                    description: RecoveryFlow
                "302":
                    $ref: '#/components/responses/EmptyResponse'
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RecoveryFlow'
                    description: RecoveryFlow
                "410":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "422":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorBrowserLocationChangeRequired'
                    description: errorBrowserLocationChangeRequired
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Update Recovery Flow
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
        post:
            description: |-
                Use this endpoint to update a recovery flow. This endpoint
                behaves differently for API and browser flows and has several states:
                `choose_method` expects `flow` (in the URL query) and `email` (in the body) to be sent
                and works with API- and Browser-initiated flows.
                For API clients and Browser clients with HTTP Header `Accept: application/json` it either returns a HTTP 200 OK when the form is valid and HTTP 400 OK when the form is invalid.
                and a HTTP 303 See Other redirect with a fresh recovery flow if the flow was otherwise invalid (e.g. expired).
                For Browser clients without HTTP Header `Accept` or with `Accept: text/*` it returns a HTTP 303 See Other redirect to the Recovery UI URL with the Recovery Flow ID appended.
                `sent_email` is the success state after `choose_method` for the `link` method and allows the user to request another recovery email. It
                works for both API and Browser-initiated flows and returns the same responses as the flow in `choose_method` state.
                `passed_challenge` expects a `token` to be sent in the URL query and given the nature of the flow ("sending a recovery link")
                does not have any API capabilities. The server responds with a HTTP 303 See Other redirect either to the Settings UI URL
                (if the link was valid) and instructs the user to update their password, or a redirect to the Recover UI URL with
                a new Recovery Flow ID which contains an error message that the recovery link was invalid.
            operationId: UpdateRecoveryFlow
            parameters:
                - description: |-
                    The Recovery Flow ID

                    The value for this parameter comes from `flow` URL Query parameter sent to your
                    application (e.g. `/recovery?flow=abcde`).
                  in: query
                  name: flow
                  required: true
                  schema:
                    type: string
                - description: |-
                    Recovery Token
                    The recovery token which completes the recovery request. If the token
                    is invalid (e.g. expired) an error will be shown to the end-user.
                    This parameter is usually set in a link and not used by any direct API call.
                  in: query
                  name: token
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies
                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRecoveryFlowBody'
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateRecoveryFlowBody'
                required: true
                x-originalParamName: Body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RecoveryFlow'
                    description: RecoveryFlow
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RecoveryFlow'
                    description: RecoveryFlow
                "410":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "422":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorBrowserLocationChangeRequired'
                    description: errorBrowserLocationChangeRequired
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Update Recovery Flow
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/recovery/api:
        get:
            description: |-
                This endpoint initiates a recovery flow for API clients such as mobile devices, smart TVs, and so on.
                If a valid provided session cookie or session token is provided, a 400 Bad Request error.
                On an existing recovery flow, use the `getRecoveryFlow` API endpoint.
                You MUST NOT use this endpoint in client-side (Single Page Apps, ReactJS, AngularJS) nor server-side (Java Server
                Pages, NodeJS, PHP, Golang, ...) browser applications. Using this endpoint in these applications will make
                you vulnerable to a variety of CSRF attacks.
                This endpoint MUST ONLY be used in scenarios such as native mobile apps (React Native, Objective C, Swift, Java, ...).
            operationId: CreateNativeRecoveryFlow
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RecoveryFlow'
                    description: RecoveryFlow
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create Recovery Flow for Native Apps
            tags:
                - Frontend
    /iam/frontend/self-service/recovery/browser:
        get:
            description: |-
                This endpoint initializes a browser-based account recovery flow. Once initialized, the browser will be redirected to
                `selfservice.flows.recovery.ui_url` with the flow ID set as the query parameter `?flow=`. If a valid user session
                exists, the browser is returned to the configured return URL.
                If this endpoint is called via an AJAX request, the response contains the recovery flow without any redirects
                or a 400 bad request error if the user is already authenticated.
                This endpoint is NOT INTENDED for clients that do not have a browser (Chrome, Firefox, ...) as cookies are needed.
            operationId: CreateBrowserRecoveryFlow
            parameters:
                - description: The URL to return the browser to after the flow was completed.
                  in: query
                  name: return_to
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RecoveryFlow'
                    description: RecoveryFlow
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create Recovery Flow for Browsers
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/recovery/flows:
        get:
            description: |-
                This endpoint returns a recovery flow's context with, for example, error details and other information.
                Browser flows expect the anti-CSRF cookie to be included in the request's HTTP Cookie Header.
                For AJAX requests you must ensure that cookies are included in the request or requests will fail.
                If you use the browser-flow for server-side apps, the services need to run on a common top-level-domain
                and you need to forward the incoming HTTP Cookie header to this endpoint:
                ```js
                pseudo-code example
                router.get('/recovery', async function (req, res) {
                const flow = await client.getRecoveryFlow(req.header('Cookie'), req.query['flow'])

                res.render('recovery', flow)
                })
                ```
            operationId: GetRecoveryFlow
            parameters:
                - description: |-
                    The Flow ID
                    The value for this parameter comes from `request` URL Query parameter sent to your application (`/recovery?flow=abcde`).
                  in: query
                  name: id
                  required: true
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies

                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RecoveryFlow'
                    description: RecoveryFlow
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "410":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get Recovery Flow
            tags:
                - Frontend
    /iam/frontend/self-service/registration:
        post:
            description: |-
                Use this endpoint to complete a registration flow by sending an identity's traits and password. This endpoint
                behaves differently for API and browser flows.
                API flows expect `application/json` to be sent in the body and respond with
                HTTP 200 and a application/json body with the created identity success - if the session hook is configured the
                `session` and `session_token` will also be included;
                HTTP 410 if the original flow expired with the appropriate error messages set and optionally a `use_flow_id` parameter in the body;
                HTTP 400 on form validation errors.

                Browser flows expect a Content-Type of `application/x-www-form-urlencoded` or `application/json` to be sent in the body and respond with
                a HTTP 303 redirect to the post/after registration URL or the `return_to` value if it was set and if the registration succeeded;
                a HTTP 303 redirect to the registration UI URL with the flow ID containing the validation errors otherwise.

                Browser flows with an accept header of `application/json` will not redirect but instead respond with
                HTTP 200 and a application/json body with the signed in identity and a `Set-Cookie` header on success;
                HTTP 303 redirect to a fresh login flow if the original flow expired with the appropriate error messages set;
                HTTP 400 on form validation errors.

                If this endpoint is called with `Accept: application/json` in the header, the response contains the flow without a redirect. In the
                case of an error, the `error.id` of the JSON response body can be one of:

                `session_already_available`: The user is already signed in.
                `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
                `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!
                `browser_location_change_required`: Usually sent when an AJAX request indicates that the browser needs to open a specific URL.
                Most likely used in Social Sign In flows.
            operationId: UpdateRegistrationFlow
            parameters:
                - description: |-
                    The Registration Flow ID
                    The value for this parameter comes from `flow` URL Query parameter sent to your application.
                  in: query
                  name: flow
                  required: true
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies

                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateRegistrationFlowBody'
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateRegistrationFlowBody'
                required: true
                x-originalParamName: Body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SuccessfulNativeRegistration'
                    description: successfulNativeRegistration
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegistrationFlow'
                    description: registrationFlow
                "410":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "422":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorBrowserLocationChangeRequired'
                    description: errorBrowserLocationChangeRequired
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Update Registration Flow
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/registration/api:
        get:
            description: |-
                This endpoint initiates a registration flow for API clients such as mobile devices, smart TVs, and so on.
                If a valid provided session cookie or session token is provided, a 400 Bad Request error
                will be returned unless the URL query parameter `?refresh=true` is set.
                To fetch an existing registration flow call `/self-service/registration/flows?flow=<flow_id>`.
                You MUST NOT use this endpoint in client-side (Single Page Apps, ReactJS, AngularJS) nor server-side (Java Server
                Pages, NodeJS, PHP, Golang, ...) browser applications. Using this endpoint in these applications will make
                you vulnerable to a variety of CSRF attacks.
                In the case of an error, the `error.id` of the JSON response body can be one of:
                `session_already_available`: The user is already signed in.
                `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
                This endpoint MUST ONLY be used in scenarios such as native mobile apps (React Native, Objective C, Swift, Java, ...).
            operationId: CreateNativeRegistrationFlow
            parameters:
                - description: EnableSessionTokenExchangeCode requests the login flow to include a code that can be used to retrieve the session token the login flow has been completed.
                  in: query
                  name: return_session_token_exchange_code
                  schema:
                    type: boolean
                - description: The URL to return the browser to after the flow was completed.
                  in: query
                  name: return_to
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegistrationFlow'
                    description: registrationFlow
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create Registration Flow for Native Apps
            tags:
                - Frontend
    /iam/frontend/self-service/registration/browser:
        get:
            description: |-
                This endpoint initializes a browser-based user registration flow. This endpoint will set the appropriate
                cookies and anti-CSRF measures required for browser-based flows.

                If this endpoint is opened as a link in the browser, it will be redirected to
                `selfservice.flows.registration.ui_url` with the flow ID set as the query parameter `?flow=`. If a valid user session
                exists already, the browser will be redirected to `urls.default_redirect_url`.

                If this endpoint is called via an AJAX request, the response contains the flow without a redirect. In the
                case of an error, the `error.id` of the JSON response body can be one of:

                `session_already_available`: The user is already signed in.
                `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
                `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!

                If this endpoint is called via an AJAX request, the response contains the registration flow without a redirect.

                This endpoint is NOT INTENDED for clients that do not have a browser (Chrome, Firefox, ...) as cookies are needed.
            operationId: CreateBrowserRegistrationFlow
            parameters:
                - in: query
                  name: return_to
                  schema:
                    type: string
                - in: query
                  name: login_challenge
                  schema:
                    type: string
                - in: query
                  name: after_verification_return_to
                  schema:
                    type: string
                - in: query
                  name: organization
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegistrationFlow'
                    description: registrationFlow
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create Registration Flow for Browsers
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/registration/flows:
        get:
            description: |-
                This endpoint returns a registration flow's context with, for example, error details and other information.

                Browser flows expect the anti-CSRF cookie to be included in the request's HTTP Cookie Header.
                For AJAX requests you must ensure that cookies are included in the request or requests will fail.

                If you use the browser-flow for server-side apps, the services need to run on a common top-level-domain
                and you need to forward the incoming HTTP Cookie header to this endpoint:

                ```js
                pseudo-code example
                router.get('/registration', async function (req, res) {
                const flow = await client.getRegistrationFlow(req.header('cookie'), req.query['flow'])

                res.render('registration', flow)
                })
                ```

                This request may fail due to several reasons. The `error.id` can be one of:

                `session_already_available`: The user is already signed in.
                `self_service_flow_expired`: The flow is expired and you should request a new one.
            operationId: GetRegistrationFlow
            parameters:
                - description: |-
                    The Registration Flow ID

                    The value for this parameter comes from `flow` URL Query parameter sent to your
                    application (e.g. `/registration?flow=abcde`).
                  in: query
                  name: id
                  required: true
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies

                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegistrationFlow'
                    description: registrationFlow
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "410":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get Registration Flow
            tags:
                - Frontend
    /iam/frontend/self-service/settings:
        post:
            description: |-
                Use this endpoint to complete a settings flow by sending an identity's updated password.This endpoint behaves differently for API and browser flows.
                API-initiated flows expect `application/json` to be sent in the body and respond with
                HTTP 200 and an application/json body with the session token on success;
                HTTP 303 redirect to a fresh settings flow if the original flow expired with the appropriate error messages set;
                HTTP 400 on form validation errors.
                HTTP 401 when the endpoint is called without a valid session token.
                HTTP 403 when `selfservice.flows.settings.privileged_session_max_age` was reached or the session's AAL is too low.
                Implies that the user needs to re-authenticate.
                Browser flows without HTTP Header `Accept` or with `Accept: text/*` respond with
                a HTTP 303 redirect to the post/after settings URL or the `return_to` value if it was set and if the flow succeeded;
                a HTTP 303 redirect to the Settings UI URL with the flow ID containing the validation errors otherwise.
                a HTTP 303 redirect to the login endpoint when `selfservice.flows.settings.privileged_session_max_age` was reached or the session's AAL is too low.
                Browser flows with HTTP Header `Accept: application/json` respond with
                HTTP 200 and a application/json body with the signed in identity and a `Set-Cookie` header on success;
                HTTP 303 redirect to a fresh login flow if the original flow expired with the appropriate error messages set;
                HTTP 401 when the endpoint is called without a valid session cookie.
                HTTP 403 when the page is accessed without a session cookie or the session's AAL is too low.
                HTTP 400 on form validation errors.
                Depending on your configuration this endpoint might return a 403 error if the session has a lower Authenticator
                Assurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn
                credentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user
                to sign in with the second factor (happens automatically for server-side browser flows) or change the configuration.
                If this endpoint is called with a `Accept: application/json` HTTP header, the response contains the flow without a redirect. In the
                case of an error, the `error.id` of the JSON response body can be one of:
                `session_refresh_required`: The identity requested to change something that needs a privileged session. Redirect
                the identity to the login init endpoint with query parameters `?refresh=true&return_to=<the-current-browser-url>`,
                or initiate a refresh login flow otherwise.
                `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
                `session_inactive`: No  Session was found - sign in a user first.
                `security_identity_mismatch`: The flow was interrupted with `session_refresh_required` but apparently some other
                identity logged in instead.
                `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!
                `browser_location_change_required`: Usually sent when an AJAX request indicates that the browser needs to open a specific URL.
                Most likely used in Social Sign In flows.
            operationId: UpdateSettingsFlo
            parameters:
                - description: |-
                    The Settings Flow ID
                    The value for this parameter comes from `flow` URL Query parameter sent to your application (e.g. `/settings?flow=abcde`).
                  in: query
                  name: flow
                  required: true
                  schema:
                    type: string
                - description: The Session Token of the Identity performing the settings flow.
                  in: header
                  name: X-Session-Token
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies

                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateSettingsFlowBody'
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateSettingsFlowBody'
                required: true
                x-originalParamName: Body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SettingsFlow'
                    description: settingsFlow
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SettingsFlow'
                    description: settingsFlow
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "410":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "422":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorBrowserLocationChangeRequired'
                    description: errorBrowserLocationChangeRequired
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            security: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Complete Settings Flow
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/settings/api:
        get:
            description: |-
                This endpoint initiates a settings flow for API clients such as mobile devices, smart TVs, and so on.
                You must provide a valid Session Token for this endpoint to respond with HTTP 200 OK.
                To fetch an existing settings flow call `/self-service/settings/flows?flow=<flow_id>`.
                You MUST NOT use this endpoint in client-side (Single Page Apps, ReactJS, AngularJS) nor server-side (Java Server
                Pages, NodeJS, PHP, Golang, ...) browser applications. Using this endpoint in these applications will make
                you vulnerable to a variety of CSRF attacks.

                Depending on your configuration this endpoint might return a 403 error if the session has a lower Authenticator
                Assurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn
                credentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user
                to sign in with the second factor or change the configuration.

                In the case of an error, the `error.id` of the JSON response body can be one of:

                `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
                `session_inactive`: No  Session was found - sign in a user first.

                This endpoint MUST ONLY be used in scenarios such as native mobile apps (React Native, Objective C, Swift, Java, ...).
            operationId: CreateNativeSettingsFlow
            parameters:
                - description: The Session Token of the Identity performing the settings flow.
                  in: header
                  name: X-Session-Token
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SettingsFlow'
                    description: settingsFlow
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create Settings Flow for Native Apps
            tags:
                - Frontend
    /iam/frontend/self-service/settings/browser:
        get:
            description: |-
                This endpoint initializes a browser-based user settings flow. Once initialized, the browser will be redirected to
                `selfservice.flows.settings.ui_url` with the flow ID set as the query parameter `?flow=`. If no valid
                Session Cookie is included in the request, a login flow will be initialized.
                If this endpoint is opened as a link in the browser, it will be redirected to
                `selfservice.flows.settings.ui_url` with the flow ID set as the query parameter `?flow=`. If no valid user session was set, the browser will be redirected to the login endpoint.
                If this endpoint is called via an AJAX request, the response contains the settings flow without any redirects or a 401 forbidden error if no valid session was set.
                Depending on your configuration this endpoint might return a 403 error if the session has a lower Authenticator
                Assurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn
                credentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user
                to sign in with the second factor (happens automatically for server-side browser flows) or change the configuration.

                If this endpoint is called via an AJAX request, the response contains the flow without a redirect. In the
                case of an error, the `error.id` of the JSON response body can be one of:
                `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
                `session_inactive`: No  Session was found - sign in a user first.
                `security_identity_mismatch`: The requested `?return_to` address is not allowed to be used. Adjust this in the configuration!
                This endpoint is NOT INTENDED for clients that do not have a browser (Chrome, Firefox, ...) as cookies are needed.
            operationId: CreateBrowserSettingsFlow
            parameters:
                - description: The URL to return the browser to after the flow was completed.
                  in: query
                  name: return_to
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies
                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SettingsFlow'
                    description: settingsFlow
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create Settings Flow for Browsers
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/settings/flows:
        get:
            description: |-
                When accessing this endpoint, you must ensure that either the Session Cookie or the Session Token are set.
                Depending on your configuration this endpoint might return a 403 error if the session has a lower Authenticator
                Assurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn
                credentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user
                to sign in with the second factor or change the configuration.
                If this endpoint is called via an AJAX request, the response contains the flow without a redirect. In the case of an error, the `error.id` of the JSON response body can be one of:
                `security_csrf_violation`: Unable to fetch the flow because a CSRF violation occurred.
                `session_inactive`: No  Session was found - sign in a user first.
                `security_identity_mismatch`: The flow was interrupted with `session_refresh_required` but apparently some other identity logged in instead.
            operationId: GetSettingsFlow
            parameters:
                - description: |-
                    ID is the Settings Flow ID

                    The value for this parameter comes from `flow` URL Query parameter sent to your
                    application (e.g. `/settings?flow=abcde`).
                  in: query
                  name: id
                  required: true
                  schema:
                    type: string
                - description: |-
                    The Session Token

                    When using the SDK in an app without a browser, please include the
                    session token here.
                  in: header
                  name: X-Session-Token
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies

                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SettingsFlow'
                    description: settingsFlow
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "410":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get Settings Flow
            tags:
                - Frontend
    /iam/frontend/self-service/verification:
        post:
            description: |-
                Use this endpoint to complete a verification flow. This endpoint
                behaves differently for API and browser flows and has several states:

                `choose_method` expects `flow` (in the URL query) and `email` (in the body) to be sent
                and works with API- and Browser-initiated flows.
                For API clients and Browser clients with HTTP Header `Accept: application/json` it either returns a HTTP 200 OK when the form is valid and HTTP 400 OK when the form is invalid
                and a HTTP 303 See Other redirect with a fresh verification flow if the flow was otherwise invalid (e.g. expired).
                For Browser clients without HTTP Header `Accept` or with `Accept: text/*` it returns a HTTP 303 See Other redirect to the Verification UI URL with the Verification Flow ID appended.
                `sent_email` is the success state after `choose_method` when using the `link` method and allows the user to request another verification email. It
                works for both API and Browser-initiated flows and returns the same responses as the flow in `choose_method` state.
                `passed_challenge` expects a `token` to be sent in the URL query and given the nature of the flow ("sending a verification link")
                does not have any API capabilities. The server responds with a HTTP 303 See Other redirect either to the Settings UI URL
                (if the link was valid) and instructs the user to update their password, or a redirect to the Verification UI URL with a new Verification Flow ID which contains an error message that the verification link was invalid.
            operationId: UpdateVerificationFlow
            parameters:
                - description: |-
                    The Verification Flow ID

                    The value for this parameter comes from `flow` URL Query parameter sent to your
                    application (e.g. `/verification?flow=abcde`).
                  in: query
                  name: flow
                  required: true
                  schema:
                    type: string
                - description: |-
                    Verification Token

                    The verification token which completes the verification request. If the token
                    is invalid (e.g. expired) an error will be shown to the end-user.

                    This parameter is usually set in a link and not used by any direct API call.
                  in: query
                  name: token
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies

                    When using the SDK in a browser app, on the server side you must include the HTTP Cookie Header
                    sent by the client to your server here. This ensures that CSRF and session cookies are respected.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateVerificationFlowBody'
                    application/x-www-form-urlencoded:
                        schema:
                            $ref: '#/components/schemas/UpdateVerificationFlowBody'
                required: true
                x-originalParamName: Body
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerificationFlow'
                    description: verificationFlow
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerificationFlow'
                    description: verificationFlow
                "410":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Complete Verification Flow
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/verification/api:
        get:
            description: |-
                This endpoint initiates a verification flow for API clients such as mobile devices, smart TVs, and so on.

                To fetch an existing verification flow call `/self-service/verification/flows?flow=<flow_id>`.

                You MUST NOT use this endpoint in client-side (Single Page Apps, ReactJS, AngularJS) nor server-side (Java Server
                Pages, NodeJS, PHP, Golang, ...) browser applications. Using this endpoint in these applications will make
                you vulnerable to a variety of CSRF attacks.

                This endpoint MUST ONLY be used in scenarios such as native mobile apps (React Native, Objective C, Swift, Java, ...).
            operationId: CreateNativeVerificationFlow
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerificationFlow'
                    description: verificationFlow
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create Verification Flow for Native Apps
            tags:
                - Frontend
    /iam/frontend/self-service/verification/browser:
        get:
            description: |-
                This endpoint initializes a browser-based account verification flow. Once initialized, the browser will be redirected to
                `selfservice.flows.verification.ui_url` with the flow ID set as the query parameter `?flow=`.

                If this endpoint is called via an AJAX request, the response contains the recovery flow without any redirects.

                This endpoint is NOT INTENDED for API clients and only works with browsers (Chrome, Firefox, ...).
            operationId: CreateBrowserVerificationFlow
            parameters:
                - description: The URL to return the browser to after the flow was completed.
                  in: query
                  name: return_to
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerificationFlow'
                    description: verificationFlow
                "303":
                    $ref: '#/components/responses/EmptyResponse'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create Verification Flow for Browser Clients
            tags:
                - Frontend
            x-numspot-redirect-passthrough: true
    /iam/frontend/self-service/verification/flows:
        get:
            description: |-
                This endpoint returns a verification flow's context with, for example, error details and other information.

                Browser flows expect the anti-CSRF cookie to be included in the request's HTTP Cookie Header.
                For AJAX requests you must ensure that cookies are included in the request or requests will fail.

                If you use the browser-flow for server-side apps, the services need to run on a common top-level-domain
                and you need to forward the incoming HTTP Cookie header to this endpoint:

                ```js
                pseudo-code example
                router.get('/recovery', async function (req, res) {
                const flow = await client.getVerificationFlow(req.header('cookie'), req.query['flow'])

                res.render('verification', flow)
                })
                ```
            operationId: GetVerificationFlow
            parameters:
                - description: |-
                    The Flow ID

                    The value for this parameter comes from `request` URL Query parameter sent to your
                    application (e.g. `/verification?flow=abcde`).
                  in: query
                  name: id
                  required: true
                  schema:
                    type: string
                - description: |-
                    HTTP Cookies

                    When using the SDK on the server side you must include the HTTP Cookie Header
                    originally sent to your HTTP handler here.
                  in: header
                  name: cookie
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerificationFlow'
                    description: verificationFlow
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get Verification Flow
            tags:
                - Frontend
    /iam/frontend/sessions:
        delete:
            description: |-
                Calling this endpoint invalidates all except the current session that belong to the logged-in user.
                Session data are not deleted.
            operationId: DisableMyOtherSessions
            parameters:
                - description: Set the Session Token when calling from non-browser clients. A session token has a format of `MP2YWEMeM8MxjkGKpH4dqOQ4Q4DlSPaj`.
                  in: header
                  name: X-Session-Token
                  schema:
                    type: string
                - description: |-
                    Set the Cookie Header. This is especially useful when calling this endpoint from a server-side application. In that
                    scenario you must include the HTTP Cookie Header which originally was included in the request to your server.
                    It is ok if more than one cookie are included here as all other cookies will be ignored.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMySessionsCount'
                    description: deleteMySessionsCount
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Disable my other sessions
            tags:
                - Frontend
        get:
            description: |-
                This endpoints returns all other active sessions that belong to the logged-in user.
                The current session can be retrieved by calling the `/sessions/whoami` endpoint.
            operationId: ListMySessions
            parameters:
                - description: |-
                    Deprecated Items per Page

                    DEPRECATED: Please use `page_token` instead. This parameter will be removed in the future.

                    This is the number of items per page.
                  in: query
                  name: per_page
                  schema:
                    default: 250
                    format: int64
                    maximum: 1000
                    minimum: 1
                    type: integer
                - description: |-
                    Deprecated Pagination Page

                    DEPRECATED: Please use `page_token` instead. This parameter will be removed in the future.

                    This value is currently an integer, but it is not sequential. The value is not the page number, but a
                    reference. The next page can be any number and some numbers might return an empty list.

                    For example, page 2 might not follow after page 1. And even if page 3 and 5 exist, but page 4 might not exist.
                    The first page can be retrieved by omitting this parameter. Following page pointers will be returned in the
                    `Link` header.
                  in: query
                  name: page
                  schema:
                    format: int64
                    type: integer
                - description: |-
                    Page Size
                    This is the number of items per page to return.
                  in: query
                  name: page_size
                  schema:
                    default: 250
                    format: int64
                    maximum: 500
                    minimum: 1
                    type: integer
                - description: Next Page Token
                  in: query
                  name: page_token
                  schema:
                    default: "1"
                    minimum: 1
                    type: string
                - description: Set the Session Token when calling from non-browser clients. A session token has a format of `MP2YWEMeM8MxjkGKpH4dqOQ4Q4DlSPaj`.
                  in: header
                  name: X-Session-Token
                  schema:
                    type: string
                - description: |-
                    Set the Cookie Header. This is especially useful when calling this endpoint from a server-side application. In that
                    scenario you must include the HTTP Cookie Header which originally was included in the request to your server.
                    It is ok if more than one cookie are included here as all other cookies will be ignored.
                  in: header
                  name: Cookie
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ListMySessionsResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get My Active Sessions
            tags:
                - Frontend
    /iam/frontend/sessions/token-exchange:
        get:
            description: Exchange Session Token.
            operationId: ExchangeSessionToken
            parameters:
                - description: The part of the code return when initializing the flow.
                  in: query
                  name: init_code
                  required: true
                  schema:
                    type: string
                - description: The part of the code returned by the return_to URL.
                  in: query
                  name: return_to_code
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SuccessfulNativeLogin'
                    description: successfulNativeLogin
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "404":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "410":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Exchange Session Token
            tags:
                - Frontend
    /iam/frontend/sessions/whoami:
        get:
            description: |-
                Uses the HTTP Headers in the GET request to determine (e.g. by using checking the cookies) who is authenticated.
                Returns a session object in the body or 401 if the credentials are invalid or no credentials were sent.
                If you call this endpoint from a server-side application, you must forward the HTTP Cookie Header to this endpoint:

                ```js
                pseudo-code example
                router.get('/protected-endpoint', async function (req, res) {
                const session = await client.toSession(undefined, req.header('cookie'))

                console.log(session)
                })
                ```

                When calling this endpoint from a non-browser application (e.g. mobile app) you must include the session token:

                ```js
                pseudo-code example
                ...
                const session = await client.toSession("the-session-token")

                console.log(session)
                ```

                When using a token template, the token is included in the `tokenized` field of the session.

                ```js
                pseudo-code example
                ...
                const session = await client.toSession("the-session-token", { tokenize_as: "example-jwt-template" })

                console.log(session.tokenized) // The JWT
                ```

                Depending on your configuration this endpoint might return a 403 status code if the session has a lower Authenticator
                Assurance Level (AAL) than is possible for the identity. This can happen if the identity has password + webauthn
                credentials (which would result in AAL2) but the session has only AAL1. If this error occurs, ask the user
                to sign in with the second factor or change the configuration.

                This endpoint is useful for:

                AJAX calls. Remember to send credentials and set up CORS correctly!
                Reverse proxies and API Gateways
                Server-side calls - use the `X-Session-Token` header!

                This endpoint authenticates users by checking:

                if the `Cookie` HTTP header was set containing a Session Cookie;
                if the `Authorization: bearer <session-token>` HTTP header was set with a valid Session Token;
                if the `X-Session-Token` HTTP header was set with a valid Session Token.

                If none of these headers are set or the cookie or token are invalid, the endpoint returns a HTTP 401 status code.

                As explained above, this request may fail due to several reasons. The `error.id` can be one of:

                `session_inactive`: No active session was found in the request (no
                 Session Cookie /  Session Token).

                `session_aal2_required`: An active session was found but it does not fulfil the Authenticator Assurance Level, implying that the session must authenticate the second factor.
            operationId: ToSession
            parameters:
                - description: Set the Session Token when calling from non-browser clients.
                  in: header
                  name: X-Session-Token
                  schema:
                    type: string
                - description: |-
                    Set the Cookie Header. This is especially useful when calling this endpoint from a server-side application. In that
                    scenario you must include the HTTP Cookie Header which originally was included in the request to your server.
                    It is ok if more than one cookie are included here as all other cookies will be ignored.
                  in: header
                  name: Cookie
                  schema:
                    type: string
                - description: Returns the session additionally as a token (such as a JWT). The value of this parameter has to be a valid, configured Session token template.
                  in: query
                  name: tokenize_as
                  schema:
                    type: string
            responses:
                "200":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Session'
                    description: session
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                "403":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorGeneric'
                    description: errorGeneric
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Check Who the Current HTTP Session Belongs To
            tags:
                - Frontend
    /iam/introspect:
        post:
            description: The introspection endpoint allows to check if a token (both refresh and access) is active or not. An active token is neither expired nor revoked.
            operationId: Introspect
            requestBody:
                $ref: '#/components/requestBodies/IntrospectRequest'
            responses:
                "200":
                    $ref: '#/components/responses/IntrospectResponse'
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Internal Server error
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Oauth2
    /iam/organisations:
        get:
            description: Get a list of organisations assigned to an identity.
            operationId: ListOrganisationsIdentity
            parameters:
                - $ref: '#/components/parameters/ListUserOrganisations'
            responses:
                "200":
                    $ref: '#/components/responses/ListUserOrganisations200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: UUID in parameters are malformed. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: User or organisation not found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Identity
    /iam/organisations/{organisationId}/iamgranularPolicy/{subjectType}/{subjectId}/{objectType}:
        get:
            deprecated: true
            description: Retrieve the granular policy assigned to a specific subject for a specific object type.
            operationId: GetIAMGranularPolicyOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/SubjectTypeParam'
                - $ref: '#/components/parameters/SubjectId'
                - $ref: '#/components/parameters/ObjectType'
            responses:
                "200":
                    $ref: '#/components/responses/GetIAMGranularPolicy200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - IAMPolicy
        patch:
            deprecated: true
            description: Modify the IAM policy by adding or removing granular permissions for a specific object type. If the policy does not exist, it will be implicitly created
            operationId: SetIAMGranularPolicyOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/SubjectTypeParam'
                - $ref: '#/components/parameters/SubjectId'
                - $ref: '#/components/parameters/ObjectType'
            requestBody:
                $ref: '#/components/requestBodies/SetIAMGranularPolicyRequest'
            responses:
                "204":
                    description: policy set
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. Invalid input provided.
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Subject not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - IAMPolicy
    /iam/organisations/{organisationId}/iampolicy/{subjectType}/{subjectId}:
        get:
            description: Retrieve the policy assigned to a specific subject
            operationId: GetIAMPolicyOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/SubjectTypeParam'
                - $ref: '#/components/parameters/SubjectId'
            responses:
                "200":
                    $ref: '#/components/responses/GetIAMPolicy200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - IAMPolicy
        patch:
            description: Modify the IAM policy by adding or removing roles and permissions. If the policy does not exist, it will be implicitly created
            operationId: SetIAMPolicyOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/SubjectTypeParam'
                - $ref: '#/components/parameters/SubjectId'
            requestBody:
                $ref: '#/components/requestBodies/SetIAMPolicyRequest'
            responses:
                "204":
                    description: policy set
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. Invalid input provided.
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Subject not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - IAMPolicy
    /iam/organisations/{organisationId}/permissions:
        get:
            description: List permissions
            operationId: ListPermissionsOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/Service'
                - $ref: '#/components/parameters/Resource'
                - $ref: '#/components/parameters/SubResource'
                - $ref: '#/components/parameters/Action'
                - $ref: '#/components/parameters/ListPermissionsPage'
            responses:
                "200":
                    $ref: '#/components/responses/ListPermissions200Response'
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Permissions
    /iam/organisations/{organisationId}/permissions/{permissionUuid}:
        get:
            description: Get permission
            operationId: GetPermissionOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/PermissionUuid'
            responses:
                "200":
                    $ref: '#/components/responses/GetPermission200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Permission not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Permissions
    /iam/organisations/{organisationId}/roles:
        get:
            description: List roles
            operationId: ListRolesOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/RoleName'
                - $ref: '#/components/parameters/ListRolesPage'
            responses:
                "200":
                    $ref: '#/components/responses/ListRoles200Response'
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No such role
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
        post:
            description: Create role
            operationId: CreateRoleOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
            requestBody:
                $ref: '#/components/requestBodies/CreateRoleRequest'
            responses:
                "200":
                    $ref: '#/components/responses/CreateRole200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
    /iam/organisations/{organisationId}/roles/{roleUuid}:
        delete:
            description: Delete role
            operationId: DeleteRoleOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/RoleUuid'
            responses:
                "204":
                    description: Role deleted
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
        get:
            description: Get role
            operationId: GetRoleOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/RoleUuid'
            responses:
                "200":
                    $ref: '#/components/responses/GetRole200Response'
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
        patch:
            description: Update role
            operationId: UpdateRoleOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/RoleUuid'
            requestBody:
                $ref: '#/components/requestBodies/UpdateRoleRequest'
            responses:
                "204":
                    description: Role updated
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
    /iam/organisations/{organisationId}/roles/{roleUuid}/permissions:
        delete:
            description: Remove permissions from a role
            operationId: RemoveRolePermissionsOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/RoleUuid'
            requestBody:
                $ref: '#/components/requestBodies/RemoveRolePermissionsRequest'
            responses:
                "204":
                    description: Permission removed
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
        get:
            description: Get a role's permissions
            operationId: GetRolePermissionsOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/RoleUuid'
            responses:
                "200":
                    $ref: '#/components/responses/GetRolePermissions200Response'
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
        patch:
            description: Add permissions to a role
            operationId: AddRolePermissionsOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/RoleUuid'
            requestBody:
                $ref: '#/components/requestBodies/AddRolePermissionsRequest'
            responses:
                "204":
                    description: Permission added
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role(s) and/or permission(s)
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
    /iam/organisations/{organisationId}/serviceAccounts:
        get:
            description: List an existing service account.
            operationId: ListServiceAccountOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/ListServiceAccounts'
            requestBody:
                $ref: '#/components/requestBodies/ListIdentitiesByAccessRequest'
            responses:
                "200":
                    $ref: '#/components/responses/ListServiceAccount200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occurred during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
        post:
            description: Create a new service account.
            operationId: CreateServiceAccountOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
            requestBody:
                $ref: '#/components/requestBodies/CreateServiceAccountRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateServiceAccount201Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Conflict. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occurred during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
    /iam/organisations/{organisationId}/serviceAccounts/{serviceAccountId}:
        delete:
            description: Delete an existing service account
            operationId: DeleteServiceAccountOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/ServiceAccountId'
            responses:
                "204":
                    description: Service account deleted
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
        get:
            description: Retrieve an existing service account.
            operationId: GetServiceAccountOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/ServiceAccountId'
            responses:
                "200":
                    $ref: '#/components/responses/GetServiceAccount200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
        put:
            description: Update an existing service account.
            operationId: UpdateServiceAccountOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/ServiceAccountId'
            requestBody:
                $ref: '#/components/requestBodies/UpdateServiceAccountRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateServiceAccount200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Conflict. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
    /iam/organisations/{organisationId}/serviceAccounts/{serviceAccountId}/acl:
        get:
            description: Retrieve the ACLs assigned to a specific subject for a specific object type.
            operationId: GetACLServiceAccountOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/ServiceAccountId'
                - $ref: '#/components/parameters/ListPolicyPage'
                - in: query
                  name: service
                  required: true
                  schema:
                    type: string
                - in: query
                  name: resource
                  required: true
                  schema:
                    type: string
                - in: query
                  name: subresource
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/GetACL200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
    /iam/organisations/{organisationId}/serviceAccounts/{serviceAccountId}/bulk/acl:
        delete:
            description: delete an ACLs between a subject and a resource.
            operationId: DeleteACLServiceAccountOrganisationBulk
            requestBody:
                $ref: '#/components/requestBodies/DeleteACLRequest'
            responses:
                "204":
                    description: acl deleted.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
        parameters:
            - $ref: '#/components/parameters/OrganisationId'
            - $ref: '#/components/parameters/ServiceAccountId'
        post:
            description: Create an ACLs between a subject and a resource.
            operationId: CreateACLServiceAccountOrganisationBulk
            requestBody:
                $ref: '#/components/requestBodies/SetACLRequest'
            responses:
                "201":
                    description: acl created.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
    /iam/organisations/{organisationId}/serviceAccounts/{serviceAccountId}/spaces:
        get:
            description: Get a list of spaces assigned to a service account within an organisation.
            operationId: ListSpacesOfServiceAccount
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/ServiceAccountId'
                - $ref: '#/components/parameters/ListSpacesOfServiceAccount'
            responses:
                "200":
                    $ref: '#/components/responses/ListSpacesServiceAccount200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: UUID in parameters are malformed. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: User or organisation not found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
    /iam/organisations/{organisationId}/spaces:
        get:
            description: Get a list of spaces assigned to an identity within an organisation.
            operationId: ListSpacesIdentity
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/ListSpacesIdentity'
            responses:
                "200":
                    $ref: '#/components/responses/ListSpacesIdentity200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: UUID in parameters are malformed. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: User or organisation not found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Identity
    /iam/organisations/{organisationId}/users:
        get:
            description: List users or get an existing user by email.
            operationId: ListUserOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/UserEmail'
                - $ref: '#/components/parameters/ListUser'
            requestBody:
                $ref: '#/components/requestBodies/ListIdentitiesByAccessRequest'
            responses:
                "200":
                    $ref: '#/components/responses/ListUser200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occurred during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
        post:
            description: Create a new user.
            operationId: CreateUserOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
            requestBody:
                $ref: '#/components/requestBodies/CreateUserRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateUser201Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Conflict. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
    /iam/organisations/{organisationId}/users/{userId}:
        delete:
            description: Delete an existing user
            operationId: DeleteUserOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/UserId'
            responses:
                "204":
                    description: User deleted
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
        get:
            description: Retrieve an existing user
            operationId: GetUserOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/UserId'
            responses:
                "200":
                    $ref: '#/components/responses/GetUser200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
        patch:
            description: Patch user state within an space.
            operationId: PatchUserStateOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/UserId'
            requestBody:
                $ref: '#/components/requestBodies/PatchUserStateRequest'
            responses:
                "200":
                    $ref: '#/components/responses/PatchUserState200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Conflict. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occurred during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
        put:
            description: Update an existing user
            operationId: UpdateUserOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/UserId'
            requestBody:
                $ref: '#/components/requestBodies/UpdateUserRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateUser200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Conflict. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
    /iam/organisations/{organisationId}/users/{userId}/acl:
        get:
            description: Retrieve the ACLs assigned to a specific user for a specific object type.
            operationId: GetACLUserOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/UserId'
                - $ref: '#/components/parameters/ListPolicyPage'
                - in: query
                  name: service
                  required: true
                  schema:
                    type: string
                - in: query
                  name: resource
                  required: true
                  schema:
                    type: string
                - in: query
                  name: subresource
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/GetACL200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
    /iam/organisations/{organisationId}/users/{userId}/bulk/acl:
        delete:
            description: delete an ACLs between a subject and a resource.
            operationId: DeleteACLUserOrganisationBulk
            requestBody:
                $ref: '#/components/requestBodies/DeleteACLRequest'
            responses:
                "204":
                    description: acl deleted.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
        parameters:
            - $ref: '#/components/parameters/OrganisationId'
            - $ref: '#/components/parameters/UserId'
        post:
            description: Create an ACLs between a subject and a resource.
            operationId: CreateACLUserOrganisationBulk
            requestBody:
                $ref: '#/components/requestBodies/SetACLRequest'
            responses:
                "201":
                    description: acl created.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
    /iam/organisations/{organisationId}/users/{userId}/recover:
        post:
            description: Generate a recovery link to let the user set his password / totp
            operationId: RecoverUserOrganisation
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/UserId'
            responses:
                "200":
                    $ref: '#/components/responses/RecoverUser200Response'
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
    /iam/organisations/{organisationId}/users/{userId}/spaces:
        get:
            description: Get a list of spaces assigned to a user within an organisation.
            operationId: ListSpacesOfUser
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/UserId'
                - $ref: '#/components/parameters/ListSpacesOfUser'
            responses:
                "200":
                    $ref: '#/components/responses/ListSpacesUser200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: UUID in parameters are malformed. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: User or organisation not found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
    /iam/revoke:
        post:
            description: Revoking an access token means that the tokens will be invalid. A revoked access token can n longer be used to make access requests.
            operationId: Revoke
            parameters:
                - $ref: '#/components/parameters/Authorization'
            requestBody:
                $ref: '#/components/requestBodies/RevokeRequest'
            responses:
                "200":
                    description: Token revoked successfully
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Unauthorized
            security:
                - BasicAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Oauth2
    /iam/spaces/{spaceId}/iamgranularPolicy/{subjectType}/{subjectId}/{objectType}:
        get:
            deprecated: true
            description: Retrieve the granular policy assigned to a specific subject for a specific object type.
            operationId: GetIAMGranularPolicySpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/SubjectTypeParam'
                - $ref: '#/components/parameters/SubjectId'
                - $ref: '#/components/parameters/ObjectType'
            responses:
                "200":
                    $ref: '#/components/responses/GetIAMGranularPolicy200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - IAMPolicy
        patch:
            deprecated: true
            description: Modify the IAM policy by adding or removing granular permissions for a specific object type. If the policy does not exist, it will be implicitly created
            operationId: SetIAMGranularPolicySpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/SubjectTypeParam'
                - $ref: '#/components/parameters/SubjectId'
                - $ref: '#/components/parameters/ObjectType'
            requestBody:
                $ref: '#/components/requestBodies/SetIAMGranularPolicyRequest'
            responses:
                "204":
                    description: policy set
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. Invalid input provided.
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Subject not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - IAMPolicy
    /iam/spaces/{spaceId}/iampolicy/{subjectType}/{subjectId}:
        get:
            description: Retrieve the policy assigned to a specific subject
            operationId: GetIAMPolicySpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/SubjectTypeParam'
                - $ref: '#/components/parameters/SubjectId'
            responses:
                "200":
                    $ref: '#/components/responses/GetIAMPolicy200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - IAMPolicy
        patch:
            description: Modify the IAM policy by adding or removing roles and permissions. If the policy does not exist, it will be implicitly created
            operationId: SetIAMPolicySpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/SubjectTypeParam'
                - $ref: '#/components/parameters/SubjectId'
            requestBody:
                $ref: '#/components/requestBodies/SetIAMPolicyRequest'
            responses:
                "204":
                    description: policy set
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. Invalid input provided.
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Subject not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - IAMPolicy
    /iam/spaces/{spaceId}/permissions:
        get:
            description: List permissions
            operationId: ListPermissionsSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/Service'
                - $ref: '#/components/parameters/Resource'
                - $ref: '#/components/parameters/SubResource'
                - $ref: '#/components/parameters/Action'
                - $ref: '#/components/parameters/ListPermissionsPage'
            responses:
                "200":
                    $ref: '#/components/responses/ListPermissions200Response'
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Permissions
    /iam/spaces/{spaceId}/permissions/{permissionUuid}:
        get:
            description: Get permission
            operationId: GetPermissionSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/PermissionUuid'
            responses:
                "200":
                    $ref: '#/components/responses/GetPermission200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Permission not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Permissions
    /iam/spaces/{spaceId}/roles:
        get:
            description: List roles
            operationId: ListRolesSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/RoleName'
                - $ref: '#/components/parameters/ListRolesPage'
            responses:
                "200":
                    $ref: '#/components/responses/ListRoles200Response'
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No such role
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
        post:
            description: Create role
            operationId: CreateRoleSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
            requestBody:
                $ref: '#/components/requestBodies/CreateRoleRequest'
            responses:
                "200":
                    $ref: '#/components/responses/CreateRole200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
    /iam/spaces/{spaceId}/roles/{roleUuid}:
        delete:
            description: Delete role
            operationId: DeleteRoleSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/RoleUuid'
            responses:
                "204":
                    description: Role deleted
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
        get:
            description: Get role
            operationId: GetRoleSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/RoleUuid'
            responses:
                "200":
                    $ref: '#/components/responses/GetRole200Response'
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
        patch:
            description: Update role
            operationId: UpdateRoleSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/RoleUuid'
            requestBody:
                $ref: '#/components/requestBodies/UpdateRoleRequest'
            responses:
                "204":
                    description: Role updated
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
    /iam/spaces/{spaceId}/roles/{roleUuid}/permissions:
        delete:
            description: Remove permissions from a role
            operationId: RemoveRolePermissionsSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/RoleUuid'
            requestBody:
                $ref: '#/components/requestBodies/RemoveRolePermissionsRequest'
            responses:
                "204":
                    description: Permission removed
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
        get:
            description: Get a role's permissions
            operationId: GetRolePermissionsSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/RoleUuid'
            responses:
                "200":
                    $ref: '#/components/responses/GetRolePermissions200Response'
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
        patch:
            description: Add permissions to a role
            operationId: AddRolePermissionsSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/RoleUuid'
            requestBody:
                $ref: '#/components/requestBodies/AddRolePermissionsRequest'
            responses:
                "204":
                    description: Permission added
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role(s) and/or permission(s)
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Role not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Roles
    /iam/spaces/{spaceId}/serviceAccounts:
        get:
            description: List an existing service account.
            operationId: ListServiceAccountSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ListServiceAccounts'
            requestBody:
                $ref: '#/components/requestBodies/ListIdentitiesByAccessRequest'
            responses:
                "200":
                    $ref: '#/components/responses/ListServiceAccount200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occurred during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
        post:
            description: Create a new service account.
            operationId: CreateServiceAccountSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
            requestBody:
                $ref: '#/components/requestBodies/CreateServiceAccountRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateServiceAccount201Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Conflict. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occurred during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
    /iam/spaces/{spaceId}/serviceAccounts/{serviceAccountId}:
        delete:
            description: Delete an existing service account
            operationId: DeleteServiceAccountSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ServiceAccountId'
            responses:
                "204":
                    description: Service account deleted
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
        get:
            description: Retrieve an existing service account.
            operationId: GetServiceAccountSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ServiceAccountId'
            responses:
                "200":
                    $ref: '#/components/responses/GetServiceAccount200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
        post:
            description: Assign a service account to a space within an organisation.
            operationId: AssignServiceAccountToSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ServiceAccountId'
            responses:
                "200":
                    description: Successfully assigned service account to space
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occurred during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
        put:
            description: Update an existing service account.
            operationId: UpdateServiceAccountSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ServiceAccountId'
            requestBody:
                $ref: '#/components/requestBodies/UpdateServiceAccountRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateServiceAccount200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Conflict. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Service Accounts
    /iam/spaces/{spaceId}/serviceAccounts/{serviceAccountId}/acl:
        get:
            description: Retrieve the ACLs assigned to a specific subject for a specific object type.
            operationId: GetACLServiceAccountSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ServiceAccountId'
                - $ref: '#/components/parameters/ListPolicyPage'
                - in: query
                  name: service
                  required: true
                  schema:
                    type: string
                - in: query
                  name: resource
                  required: true
                  schema:
                    type: string
                - in: query
                  name: subresource
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/GetACL200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
    /iam/spaces/{spaceId}/serviceAccounts/{serviceAccountId}/bulk/acl:
        delete:
            description: delete an ACLs between a subject and a resource.
            operationId: DeleteACLServiceAccountSpaceBulk
            requestBody:
                $ref: '#/components/requestBodies/DeleteACLRequest'
            responses:
                "204":
                    description: acl deleted.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
        parameters:
            - $ref: '#/components/parameters/SpaceId'
            - $ref: '#/components/parameters/ServiceAccountId'
        post:
            description: Create an ACLs between a subject and a resource.
            operationId: CreateACLServiceAccountSpaceBulk
            requestBody:
                $ref: '#/components/requestBodies/SetACLRequest'
            responses:
                "201":
                    description: acl created.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
    /iam/spaces/{spaceId}/users:
        get:
            description: List users or get an existing user by email.
            operationId: ListUserSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/UserEmail'
                - $ref: '#/components/parameters/ListUser'
            requestBody:
                $ref: '#/components/requestBodies/ListIdentitiesByAccessRequest'
            responses:
                "200":
                    $ref: '#/components/responses/ListUser200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occurred during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
        post:
            description: Create a new user.
            operationId: CreateUserSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
            requestBody:
                $ref: '#/components/requestBodies/CreateUserRequest'
            responses:
                "201":
                    $ref: '#/components/responses/CreateUser201Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Conflict. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
    /iam/spaces/{spaceId}/users/{userId}:
        delete:
            description: Unassign an existing user
            operationId: UnassignUserSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/UserId'
            responses:
                "204":
                    description: User unassigned
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
        get:
            description: Retrieve an existing user
            operationId: GetUserSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/UserId'
            responses:
                "200":
                    $ref: '#/components/responses/GetUser200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
        patch:
            description: Patch user state within space.
            operationId: PatchUserStateSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/UserId'
            requestBody:
                $ref: '#/components/requestBodies/PatchUserStateRequest'
            responses:
                "200":
                    $ref: '#/components/responses/PatchUserState200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Conflict. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occurred during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
        post:
            description: Assign a user to a space within an organisation.
            operationId: AssignUserToSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/UserId'
            responses:
                "200":
                    description: Successfully assigned user to space
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
        put:
            description: Update an existing user
            operationId: UpdateUserSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/UserId'
            requestBody:
                $ref: '#/components/requestBodies/UpdateUserRequest'
            responses:
                "200":
                    $ref: '#/components/responses/UpdateUser200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request. See details in the error response
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "409":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Conflict. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
    /iam/spaces/{spaceId}/users/{userId}/acl:
        get:
            description: Retrieve the ACLs assigned to a specific subject for a specific object type.
            operationId: GetACLUserSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/UserId'
                - $ref: '#/components/parameters/ListPolicyPage'
                - in: query
                  name: service
                  required: true
                  schema:
                    type: string
                - in: query
                  name: resource
                  required: true
                  schema:
                    type: string
                - in: query
                  name: subresource
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/GetACL200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
    /iam/spaces/{spaceId}/users/{userId}/bulk/acl:
        delete:
            description: delete an ACLs between a subject and a resource.
            operationId: DeleteACLUserSpaceBulk
            requestBody:
                $ref: '#/components/requestBodies/DeleteACLRequest'
            responses:
                "204":
                    description: acl deleted.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
        parameters:
            - $ref: '#/components/parameters/SpaceId'
            - $ref: '#/components/parameters/UserId'
        post:
            description: Create an ACLs between a subject and a resource.
            operationId: CreateACLUserSpaceBulk
            requestBody:
                $ref: '#/components/requestBodies/SetACLRequest'
            responses:
                "201":
                    description: acl created.
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid role
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No IAM policy found for the given subject.
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - ACL
    /iam/spaces/{spaceId}/users/{userId}/recover:
        post:
            description: Generate a recovery link to let the user set his password / totp
            operationId: RecoverUserSpace
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/UserId'
            responses:
                "200":
                    $ref: '#/components/responses/RecoverUser200Response'
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized. See details in the error response
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Forbidden. See details in the error response
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Not Found. See details in the error response
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal Server Error. An error occured during the operation execution. See details in the error response
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Users
    /iam/token:
        post:
            description: Generate an access token
            operationId: Token
            parameters:
                - $ref: '#/components/parameters/Authorization'
            requestBody:
                $ref: '#/components/requestBodies/TokenRequest'
            responses:
                "200":
                    $ref: '#/components/responses/TokenResponse'
                "400":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Bad Request
                "401":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Unauthorized
                "500":
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: Internal Server error
            security: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Oauth2
    /iam/userinfo:
        get:
            description: get user info
            operationId: GetUserInfo
            parameters:
                - $ref: '#/components/parameters/Authorization'
            responses:
                "200":
                    $ref: '#/components/responses/GetUserInfo200Response'
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorOauth2'
                    description: default oidc error response
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Oidc
    /kubernetes/healthcheck:
        get:
            description: Verify if the API is running
            operationId: Healthcheck
            responses:
                "200":
                    description: cluster healthcheck
            security: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Verify if the API is running
            tags:
                - external
                - monitor
    /kubernetes/spaces/{spaceId}/clusters:
        get:
            description: retrieve the list of clusters accessible by the current user
            operationId: ListKubernetesClusters
            parameters:
                - $ref: '#/components/parameters/SpaceId'
            responses:
                "200":
                    $ref: '#/components/responses/ClusterList200Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: List clusters
            tags:
                - external
                - kubernetesClusters
        post:
            description: ordered the creation of a cluster with given configuration
            operationId: CreateKubernetesCluster
            parameters:
                - $ref: '#/components/parameters/SpaceId'
            requestBody:
                $ref: '#/components/requestBodies/ClusterConfigurationRequest'
            responses:
                "202":
                    $ref: '#/components/responses/Operation202Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "409":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create cluster
            tags:
                - external
                - kubernetesClusters
    /kubernetes/spaces/{spaceId}/clusters/{clusterId}:
        delete:
            description: ordered the deletion of a cluster by using his name with them dependancies
            operationId: DeleteKubernetesClusterById
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/KubernetesClusterId'
            responses:
                "202":
                    $ref: '#/components/responses/Operation202Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "404":
                    $ref: '#/components/responses/ErrorResponse'
                "409":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Delete cluster
            tags:
                - external
                - kubernetesClusters
        get:
            description: retrieve cluster information by it's ID
            operationId: GetKubernetesClusterById
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/KubernetesClusterId'
            responses:
                "200":
                    $ref: '#/components/responses/Cluster200Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get cluster details
            tags:
                - external
                - kubernetesClusters
    /kubernetes/spaces/{spaceId}/clusters/{clusterId}/kubeconfig:
        get:
            description: retrieve cluster credentials on hex encoded format
            operationId: GetKubeConfig
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/KubernetesClusterId'
            responses:
                "200":
                    $ref: '#/components/responses/FileContent200Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get KubeConfig
            tags:
                - external
                - credentials
    /kubernetes/spaces/{spaceId}/clusters/{clusterId}/masters/upgrade:
        post:
            description: Upgrade kubernetes version of master nodes
            operationId: UpgradeMasters
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/KubernetesClusterId'
            requestBody:
                $ref: '#/components/requestBodies/NodeUpgradeRequest'
            responses:
                "202":
                    $ref: '#/components/responses/Operation202Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "409":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Upgrade Masters kubernetes version
            tags:
                - external
                - nodes
    /kubernetes/spaces/{spaceId}/clusters/{clusterId}/nodes/add:
        post:
            description: Instanciate workers and add it in a spacified cluster
            operationId: AddNodes
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/KubernetesClusterId'
            requestBody:
                $ref: '#/components/requestBodies/NodeOrderRequest'
            responses:
                "202":
                    $ref: '#/components/responses/Operation202Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "409":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Add workers
            tags:
                - external
                - nodes
    /kubernetes/spaces/{spaceId}/clusters/{clusterId}/nodes/remove:
        post:
            description: Remove and destroy hasard workers in a spacified cluster
            operationId: RemoveNodes
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/KubernetesClusterId'
            requestBody:
                $ref: '#/components/requestBodies/NodeRemoveRequest'
            responses:
                "202":
                    $ref: '#/components/responses/Operation202Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "409":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Remove workers
            tags:
                - external
                - nodes
    /kubernetes/spaces/{spaceId}/clusters/{clusterId}/nodes/upgrade:
        post:
            description: Upgrade kubernetes version of workers using masters kubernetes version
            operationId: UpgradeNodes
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/KubernetesClusterId'
            requestBody:
                $ref: '#/components/requestBodies/NodeUpgradeRequest'
            responses:
                "202":
                    $ref: '#/components/responses/Operation202Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "409":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Upgrade workers kubernetes version
            tags:
                - external
                - nodes
    /kubernetes/spaces/{spaceId}/clusters/{clusterId}/operations:
        get:
            description: List all operation existing
            operationId: ListOperation
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/KubernetesClusterId'
            responses:
                "200":
                    $ref: '#/components/responses/OperationList200Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: List operations
            tags:
                - external
                - kubernetesOperations
    /kubernetes/spaces/{spaceId}/clusters/{clusterId}/privateKey:
        get:
            description: retrieve cluster private key on hex encoded format
            operationId: GetPrivateKey
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/KubernetesClusterId'
            responses:
                "200":
                    $ref: '#/components/responses/FileContent200Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get private key
            tags:
                - external
                - credentials
    /kubernetes/spaces/{spaceId}/clusters/{clusterId}/status:
        get:
            description: retrieve cluster status by it's id
            operationId: GetClusterStatus
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/KubernetesClusterId'
            responses:
                "200":
                    $ref: '#/components/responses/ClusterStatusResponse'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get cluster status
            tags:
                - external
                - clusters
    /kubernetes/spaces/{spaceId}/clusters/{clusterId}/update:
        post:
            description: Instanciate workers and add it in a spacified cluster
            operationId: UpdateNodes
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/KubernetesClusterId'
            responses:
                "202":
                    $ref: '#/components/responses/Operation202Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "409":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Update Nodes OS
            tags:
                - external
                - nodes
    /kubernetes/spaces/{spaceId}/operations/{operationId}:
        get:
            description: retrieve operation using it ID
            operationId: GetOperationById
            parameters:
                - $ref: '#/components/parameters/OperationId'
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/TokenJwt'
            responses:
                "200":
                    $ref: '#/components/responses/Operation200Response'
                "400":
                    $ref: '#/components/responses/ErrorResponse'
                "500":
                    $ref: '#/components/responses/ErrorResponse'
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-kubernetes-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get operation
            tags:
                - external
                - kubernetesOperations
    /objectStorage/spaces/{spaceId}/:
        get:
            description: Returns a list of all buckets owned by the authenticated sender of the request.
            operationId: ListBuckets
            parameters:
                - description: Space ID
                  in: path
                  name: spaceId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ListBucketsResponse'
            security: []
            servers:
                - url: https://cloud-objectstorage-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Bucket
            x-numspot-routing-passthrough: true
    /objectStorage/spaces/{spaceId}/{bucket}:
        delete:
            description: Deletes a bucket.
            operationId: DeleteBucket
            parameters:
                - in: path
                  name: bucket
                  required: true
                  schema:
                    type: string
                - description: Space ID
                  in: path
                  name: spaceId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    description: Success
            security: []
            servers:
                - url: https://cloud-objectstorage-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Bucket
            x-numspot-routing-passthrough: true
        get:
            description: Returns some or all (up to 1,000) of the objects in a bucket with each request.
            operationId: ListObjects
            parameters:
                - in: path
                  name: bucket
                  required: true
                  schema:
                    type: string
                - description: Space ID
                  in: path
                  name: spaceId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/ListObjectsResponse'
                "480":
                    content:
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/NoSuchBucket'
                    description: NoSuchBucket
            security: []
            servers:
                - url: https://cloud-objectstorage-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Object
            x-numspot-routing-passthrough: true
        put:
            description: Creates a new bucket.
            operationId: CreateBucket
            parameters:
                - in: path
                  name: bucket
                  required: true
                  schema:
                    type: string
                - description: Space ID
                  in: path
                  name: spaceId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/CreateBucketResponse'
                "480":
                    content:
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/BucketAlreadyExists'
                    description: BucketAlreadyExists
                "481":
                    content:
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/BucketAlreadyOwnedByYou'
                    description: BucketAlreadyOwnedByYou
            security: []
            servers:
                - url: https://cloud-objectstorage-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Bucket
            x-numspot-routing-passthrough: true
    /objectStorage/spaces/{spaceId}/{bucket}/{key}:
        delete:
            description: Removes an object from a bucket.
            operationId: DeleteObject
            parameters:
                - in: path
                  name: bucket
                  required: true
                  schema:
                    type: string
                - in: path
                  name: key
                  required: true
                  schema:
                    minLength: 1
                    type: string
                - description: Space ID
                  in: path
                  name: spaceId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    $ref: '#/components/responses/DeleteObjectResponse'
            security: []
            servers:
                - url: https://cloud-objectstorage-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Object
            x-numspot-routing-passthrough: true
        get:
            description: Retrieves an object or corresponding presigned URL
            operationId: GetObject
            parameters:
                - in: path
                  name: bucket
                  required: true
                  schema:
                    type: string
                - in: path
                  name: key
                  required: true
                  schema:
                    minLength: 1
                    type: string
                - description: Space ID
                  in: path
                  name: spaceId
                  required: true
                  schema:
                    type: string
                - description: Optional parameter to generate a presigned URL
                  in: query
                  name: expires
                  required: false
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/GetObjectResponse'
                "480":
                    content:
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/NoSuchKey'
                    description: NoSuchKey
                "481":
                    content:
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/InvalidObjectState'
                    description: InvalidObjectState
            security: []
            servers:
                - url: https://cloud-objectstorage-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Object
            x-numspot-routing-passthrough: true
        put:
            description: Adds an object to a bucket.
            operationId: PutObject
            parameters:
                - in: path
                  name: bucket
                  required: true
                  schema:
                    type: string
                - in: path
                  name: key
                  required: true
                  schema:
                    minLength: 1
                    type: string
                - description: Space ID
                  in: path
                  name: spaceId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    text/xml:
                        schema:
                            properties:
                                Body:
                                    type: string
                            type: object
                required: true
            responses:
                "200":
                    $ref: '#/components/responses/PutObjectResponse'
            security: []
            servers:
                - url: https://cloud-objectstorage-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Object
            x-numspot-routing-passthrough: true
    /objectStorage/spaces/{spaceId}/{bucket}/{key}#partNumber&uploadId:
        put:
            description: Uploads a part in a multipart upload.
            operationId: UploadPart
            parameters:
                - in: path
                  name: bucket
                  required: true
                  schema:
                    type: string
                - in: path
                  name: key
                  required: true
                  schema:
                    minLength: 1
                    type: string
                - in: query
                  name: partNumber
                  required: true
                  schema:
                    type: integer
                - in: query
                  name: uploadId
                  required: true
                  schema:
                    type: string
                - description: Space ID
                  in: path
                  name: spaceId
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    text/xml:
                        schema:
                            properties:
                                Body:
                                    type: string
                            type: object
                required: true
            responses:
                "200":
                    $ref: '#/components/responses/UploadPartResponse'
            security: []
            servers:
                - url: https://cloud-objectstorage-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Multipart
            x-numspot-routing-passthrough: true
    /objectStorage/spaces/{spaceId}/{bucket}/{key}#uploadId:
        delete:
            description: This operation aborts a multipart upload.
            operationId: AbortMultipartUpload
            parameters:
                - in: path
                  name: bucket
                  required: true
                  schema:
                    type: string
                - in: path
                  name: key
                  required: true
                  schema:
                    minLength: 1
                    type: string
                - in: query
                  name: uploadId
                  required: true
                  schema:
                    type: string
                - description: Space ID
                  in: path
                  name: spaceId
                  required: true
                  schema:
                    type: string
            responses:
                "204":
                    $ref: '#/components/responses/AbortMultipartUploadResponse'
                "480":
                    content:
                        text/xml:
                            schema:
                                $ref: '#/components/schemas/NoSuchUpload'
                    description: NoSuchUpload
            security: []
            servers:
                - url: https://cloud-objectstorage-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Multipart
            x-numspot-routing-passthrough: true
        post:
            description: Completes a multipart upload by assembling previously uploaded parts.
            operationId: CompleteMultipartUpload
            parameters:
                - in: path
                  name: bucket
                  required: true
                  schema:
                    type: string
                - in: path
                  name: key
                  required: true
                  schema:
                    minLength: 1
                    type: string
                - in: query
                  name: uploadId
                  required: true
                  schema:
                    type: string
                - description: Space ID
                  in: path
                  name: spaceId
                  required: true
                  schema:
                    type: string
            requestBody:
                $ref: '#/components/requestBodies/CompleteMultipartUploadRequest'
            responses:
                "200":
                    $ref: '#/components/responses/CompleteMultipartUploadResponse'
            security: []
            servers:
                - url: https://cloud-objectstorage-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Multipart
            x-numspot-routing-passthrough: true
    /objectStorage/spaces/{spaceId}/{bucket}/{key}#uploads:
        post:
            description: This action initiates a multipart upload and returns an upload ID.
            operationId: CreateMultipartUpload
            parameters:
                - in: path
                  name: bucket
                  required: true
                  schema:
                    type: string
                - in: path
                  name: key
                  required: true
                  schema:
                    minLength: 1
                    type: string
                - allowEmptyValue: true
                  in: query
                  name: uploads
                  required: true
                  schema:
                    enum:
                        - true
                    type: boolean
                - description: Space ID
                  in: path
                  name: spaceId
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    $ref: '#/components/responses/CreateMultipartUploadResponse'
            security: []
            servers:
                - url: https://cloud-objectstorage-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Multipart
            x-numspot-routing-passthrough: true
    /openshift/spaces/{spaceId}/clusters:
        get:
            description: List all OpenShift clusters
            operationId: ListClusters
            parameters:
                - $ref: '#/components/parameters/SpaceId'
            responses:
                "200":
                    $ref: '#/components/responses/ClustersResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: List clusters
            tags:
                - clusters
        post:
            description: Create an OpenShift cluster
            operationId: CreateCluster
            parameters:
                - $ref: '#/components/parameters/SpaceId'
            requestBody:
                $ref: '#/components/requestBodies/CreateClusterRequest'
            responses:
                "201":
                    $ref: '#/components/responses/ClusterCreateResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create a cluster
            tags:
                - clusters
    /openshift/spaces/{spaceId}/clusters/{clusterId}:
        delete:
            description: Delete an cluster
            operationId: DeleteCluster
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ClusterId'
            responses:
                "202":
                    $ref: '#/components/responses/ClusterDeleteResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "404":
                    $ref: '#/components/responses/Error404'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Delete a cluster
            tags:
                - clusters
        get:
            description: Retrieve a cluster's information by ID
            operationId: GetCluster
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ClusterId'
            responses:
                "200":
                    $ref: '#/components/responses/ClusterGetResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "404":
                    $ref: '#/components/responses/Error404'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Retrieve a cluster by id
            tags:
                - clusters
        post:
            description: Update an OpenShift cluster
            operationId: UpdateCluster
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ClusterId'
            requestBody:
                $ref: '#/components/requestBodies/UpdateClusterRequest'
            responses:
                "200":
                    $ref: '#/components/responses/ClusterGetResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "404":
                    $ref: '#/components/responses/Error404'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Update a cluster
            tags:
                - clusters
    /openshift/spaces/{spaceId}/clusters/{clusterId}/nodepools:
        get:
            description: List node pools of a cluster
            operationId: ListNodepools
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ClusterId'
            responses:
                "200":
                    $ref: '#/components/responses/NodepoolsResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Retrieve cluster's node pools
            tags:
                - node pools
        post:
            description: Create node pool
            operationId: CreateNodePool
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ClusterId'
            requestBody:
                $ref: '#/components/requestBodies/CreateNodepoolRequest'
            responses:
                "201":
                    $ref: '#/components/responses/NodepoolCreateResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Create a node pool
            tags:
                - node pools
    /openshift/spaces/{spaceId}/clusters/{clusterId}/nodepools/{nodePoolName}:
        delete:
            description: Delete a node pool
            operationId: DeleteNodePool
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ClusterId'
                - $ref: '#/components/parameters/NodepoolName'
            responses:
                "202":
                    $ref: '#/components/responses/NodepoolDeleteResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "404":
                    $ref: '#/components/responses/Error404'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Delete a node pool
            tags:
                - node pools
        post:
            description: Update a nodepool's workers
            operationId: UpdateNodepool
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/ClusterId'
                - $ref: '#/components/parameters/NodepoolName'
            requestBody:
                $ref: '#/components/requestBodies/UpdateNodepoolRequest'
            responses:
                "202":
                    $ref: '#/components/responses/UpdateNodeCountResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "404":
                    $ref: '#/components/responses/Error404'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Update a node count for a node pool
            tags:
                - workers
    /openshift/spaces/{spaceId}/operations:
        get:
            description: List all operations
            operationId: ListOperations
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/OperationStatuses'
                - $ref: '#/components/parameters/QueryClusterId'
            responses:
                "200":
                    $ref: '#/components/responses/OperationsResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: List operations
            tags:
                - operations
    /openshift/spaces/{spaceId}/operations/{id}:
        get:
            description: Method to get an operation
            operationId: GetOperation
            parameters:
                - $ref: '#/components/parameters/SpaceId'
                - $ref: '#/components/parameters/IdUuid'
            responses:
                "200":
                    $ref: '#/components/responses/OperationResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "404":
                    $ref: '#/components/responses/Error404'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: Get an operation by id
            tags:
                - operations
    /openshift/spaces/{spaceId}/versions:
        get:
            description: List all OpenShift versions
            operationId: ListVersions
            parameters:
                - $ref: '#/components/parameters/SpaceId'
            responses:
                "200":
                    $ref: '#/components/responses/VersionsResponse'
                "400":
                    $ref: '#/components/responses/Error400'
                "500":
                    $ref: '#/components/responses/Error500'
            security:
                - BearerAuth: []
            servers:
                - url: https://openshift-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: eu-west-2
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            summary: List Openshift versions
            tags:
                - versions
    /organisations/{organisationId}/spaces:
        get:
            description: List spaces
            operationId: ListSpaces
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/ListSpacesPage'
            requestBody:
                $ref: '#/components/requestBodies/ListSpaceIdsRequest'
            responses:
                "200":
                    $ref: '#/components/responses/ListSpaces200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Bad request
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: No such Space
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Spaces
        post:
            description: Create Space
            operationId: CreateSpace
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
            requestBody:
                $ref: '#/components/requestBodies/CreateSpaceRequest'
            responses:
                "200":
                    $ref: '#/components/responses/CreateSpace200Response'
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid Space
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Spaces
    /organisations/{organisationId}/spaces/{spaceId}:
        delete:
            description: Delete Space
            operationId: DeleteSpace
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/SpaceId'
            responses:
                "204":
                    description: Space deleted
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Space not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Spaces
        get:
            description: Get Space
            operationId: GetSpaceById
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/SpaceId'
            responses:
                "200":
                    $ref: '#/components/responses/GetSpaceById200Response'
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Space not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Spaces
        patch:
            description: Partially update a space
            operationId: UpdateSpace
            parameters:
                - $ref: '#/components/parameters/OrganisationId'
                - $ref: '#/components/parameters/SpaceId'
            requestBody:
                $ref: '#/components/requestBodies/UpdateSpaceRequest'
            responses:
                "204":
                    description: Space updated
                "400":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/BadRequestError'
                    description: Invalid Space
                "401":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthenticated
                "403":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Unauthorized
                "404":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Space not found
                "500":
                    content:
                        application/problem+json:
                            schema:
                                $ref: '#/components/schemas/Error'
                    description: Internal error
            security:
                - BearerAuth: []
            servers:
                - url: https://cloud-iam-gateway.{env}.{region}.numspot.internal
                  variables:
                    env:
                        default: zex-dev
                        description: Environment
                        enum:
                            - zex-dev
                            - zex-integ
                            - zex-preprod
                            - zex-prod
                    region:
                        default: cloudgouv-eu-west-1
                        description: Region
                        enum:
                            - eu-west-2
                            - cloudgouv-eu-west-1
            tags:
                - Spaces
components:
    parameters:
        Action:
            description: action the permission allows to perform
            in: query
            name: action
            required: false
            schema:
                example: get
                type: string
        Authorization:
            description: The client identifier.
            in: header
            name: Authorization
            required: false
            schema:
                type: string
        ClientId:
            description: The client identifier.
            in: query
            name: client_id
            required: false
            schema:
                format: uuid
                type: string
        ClusterId:
            in: path
            name: clusterId
            required: true
            schema:
                type: string
        ConsentChallenge:
            description: token consent challenge
            in: query
            name: consent_challenge
            required: true
            schema:
                type: string
        IdUuid:
            in: path
            name: id
            required: true
            schema:
                format: uuid
                type: string
        KubernetesClusterId:
            description: ID of the cluster indicated by user at cluster creation
            in: path
            name: clusterId
            required: true
            schema:
                format: uuid
                type: string
        ListPermissionsPage:
            description: Paginated request
            in: query
            name: page
            required: false
            schema:
                properties:
                    nextToken:
                        description: A page token received from a previous call. Provide this to retrieve the subsequent page.
                        nullable: true
                        type: string
                    size:
                        default: 15
                        description: The maximum number of items to return. The service may return fewer than this value.
                        format: int32
                        maximum: 50
                        minimum: 0
                        nullable: true
                        type: integer
                type: object
            style: deepObject
        ListPolicyPage:
            description: Paginated request
            in: query
            name: page
            required: false
            schema:
                properties:
                    nextToken:
                        description: A page token received from a previous call. Provide this to retrieve the subsequent page.
                        type: string
                    size:
                        default: 50
                        description: The maximum number of items to return. The service may return fewer than this value.
                        format: int32
                        maximum: 100
                        minimum: 0
                        type: integer
                type: object
            style: deepObject
        ListRolesPage:
            description: Paginated request
            in: query
            name: page
            required: false
            schema:
                properties:
                    nextToken:
                        description: A page token received from a previous call. Provide this to retrieve the subsequent page.
                        nullable: true
                        type: string
                    size:
                        default: 15
                        description: The maximum number of items to return. The service may return fewer than this value.
                        format: int32
                        maximum: 50
                        minimum: 0
                        nullable: true
                        type: integer
                type: object
            style: deepObject
        ListServiceAccounts:
            description: Paginated request
            in: query
            name: page
            required: false
            schema:
                properties:
                    nextToken:
                        description: A page token received from a previous call. Provide this to retrieve the subsequent page.
                        type: string
                    size:
                        default: 20
                        description: The maximum number of items to return. The service may return fewer than this value.
                        format: int32
                        maximum: 50
                        minimum: 1
                        type: integer
                type: object
            style: deepObject
        ListSpacesIdentity:
            description: Paginated request
            in: query
            name: page
            required: false
            schema:
                properties:
                    nextToken:
                        description: A page token received from a previous call. Provide this to retrieve the subsequent page.
                        type: string
                    size:
                        default: 20
                        description: The maximum number of items to return. The service may return fewer than this value.
                        format: int32
                        maximum: 50
                        minimum: 1
                        type: integer
                type: object
            style: deepObject
        ListSpacesOfServiceAccount:
            description: Paginated request
            in: query
            name: page
            required: false
            schema:
                properties:
                    nextToken:
                        description: A page token received from a previous call. Provide this to retrieve the subsequent page.
                        type: string
                    size:
                        default: 20
                        description: The maximum number of items to return. The service may return fewer than this value.
                        format: int32
                        maximum: 50
                        minimum: 1
                        type: integer
                type: object
            style: deepObject
        ListSpacesOfUser:
            description: Paginated request
            in: query
            name: page
            required: false
            schema:
                properties:
                    nextToken:
                        description: A page token received from a previous call. Provide this to retrieve the subsequent page.
                        type: string
                    size:
                        default: 20
                        description: The maximum number of items to return. The service may return fewer than this value.
                        format: int32
                        maximum: 50
                        minimum: 1
                        type: integer
                type: object
            style: deepObject
        ListSpacesPage:
            description: list spaces paginated request
            in: query
            name: page
            required: false
            schema:
                properties:
                    nextToken:
                        description: A page token received from a previous call. Provide this to retrieve the subsequent page.
                        type: string
                    size:
                        default: 30
                        description: The maximum number of items to return. The service may return fewer than this value.
                        format: int32
                        maximum: 50
                        minimum: 1
                        type: integer
                type: object
            style: deepObject
        ListUser:
            description: Paginated request
            in: query
            name: page
            required: false
            schema:
                properties:
                    nextToken:
                        description: A page token received from a previous call. Provide this to retrieve the subsequent page.
                        type: string
                    size:
                        default: 20
                        description: The maximum number of items to return. The service may return fewer than this value.
                        format: int32
                        maximum: 50
                        minimum: 1
                        type: integer
                type: object
            style: deepObject
        ListUserOrganisations:
            description: Paginated request
            in: query
            name: page
            required: false
            schema:
                properties:
                    nextToken:
                        description: A page token received from a previous call. Provide this to retrieve the subsequent page.
                        type: string
                    size:
                        default: 20
                        description: The maximum number of items to return. The service may return fewer than this value.
                        format: int32
                        maximum: 50
                        minimum: 1
                        type: integer
                type: object
            style: deepObject
        NodepoolName:
            in: path
            name: nodePoolName
            required: true
            schema:
                type: string
        ObjectType:
            description: Object Type
            in: path
            name: objectType
            required: true
            schema:
                type: string
        OperationId:
            description: Identifier of the Operation
            in: path
            name: operationId
            required: true
            schema:
                format: uuid
                type: string
        OperationStatuses:
            in: query
            name: status
            required: false
            schema:
                items:
                    $ref: '#/components/schemas/OperationStatus'
                type: array
        OrganisationId:
            description: Identifier of the Organisation
            in: path
            name: organisationId
            required: true
            schema:
                format: uuid
                type: string
        PermissionUuid:
            description: Permission ID
            in: path
            name: permissionUuid
            required: true
            schema:
                format: uuid
                type: string
        QueryClusterId:
            in: query
            name: clusterId
            required: false
            schema:
                type: string
        RedirectUri:
            description: The client's redirect URI.
            in: query
            name: redirect_uri
            required: false
            schema:
                type: string
        Resource:
            description: resource the permission is related to
            in: query
            name: resource
            required: false
            schema:
                example: bucket
                type: string
        ResponseType:
            description: The expected response type.
            in: query
            name: response_type
            required: true
            schema:
                type: string
        RoleName:
            description: Role name
            in: query
            name: name
            schema:
                format: string
                type: string
        RoleUuid:
            description: Role ID
            in: path
            name: roleUuid
            required: true
            schema:
                format: uuid
                type: string
        Scope:
            description: The requested scopes.
            in: query
            name: scope
            required: false
            schema:
                type: string
        Service:
            description: service the permission is related to
            in: query
            name: service
            required: false
            schema:
                example: storageblock
                type: string
        ServiceAccountId:
            description: Service account ID
            in: path
            name: serviceAccountId
            required: true
            schema:
                format: uuid
                type: string
        SpaceId:
            description: Identifier of the Space
            in: path
            name: spaceId
            required: true
            schema:
                format: uuid
                type: string
        State:
            description: An opaque value passed to the application after authentication.
            in: query
            name: state
            required: false
            schema:
                type: string
        SubResource:
            description: subresource the permission is related to
            in: query
            name: subresource
            required: false
            schema:
                example: object
                type: string
        SubjectId:
            description: Identifier of the subject of the operation.
            in: path
            name: subjectId
            required: true
            schema:
                format: uuid
                type: string
        SubjectTypeParam:
            description: The Type of the Object holding or destined to hold an IAMPolicy
            in: path
            name: subjectType
            required: true
            schema:
                $ref: '#/components/schemas/SubjectType'
        TokenJwt:
            description: the jwt token of the current user
            in: header
            name: Authorization
            required: true
            schema:
                type: string
        UserEmail:
            description: User email
            in: query
            name: email
            schema:
                format: email
                type: string
        UserId:
            description: User account ID
            in: path
            name: userId
            required: true
            schema:
                format: uuid
                type: string
    requestBodies:
        AddRolePermissionsRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RolePermission'
            description: add role permission request
            required: true
        ClusterConfigurationRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/KubernetesClusterConfiguration'
            description: Cluster configuration you want to have at the creation
        CompleteMultipartUploadRequest:
            content:
                text/xml:
                    schema:
                        $ref: '#/components/schemas/CompleteMultipartInput'
            description: Complete multipart upload request
            required: true
        CreateClientGatewayRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateClientGateway'
        CreateClusterRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateCluster'
            required: true
        CreateDhcpOptionsRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateDhcpOptions'
        CreateFlexibleGpuRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateFlexibleGpu'
        CreateImageRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateImage'
        CreateKeypairRequest:
            content:
                application/json:
                    schema:
                        additionalProperties: false
                        properties:
                            name:
                                description: A unique name for the keypair, with a maximum length of 255 [ASCII printable characters](https://en.wikipedia.org/wiki/ASCII#Printable_characters).
                                type: string
                            publicKey:
                                description: The public key to import in your account, if you are importing an existing keypair. This value must be Base64-encoded.
                                type: string
                        required:
                            - name
                        type: object
        CreateListenerRuleRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateListenerRule'
        CreateLoadBalancerListenersRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateLoadBalancerListeners'
        CreateLoadBalancerPolicyRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateLoadBalancerPolicy'
        CreateLoadBalancerRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateLoadBalancer'
        CreateLoadBalancerTagsRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateLoadBalancerTags'
        CreateNatGatewayRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateNatGateway'
        CreateNicRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateNic'
        CreateNodepoolRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateNodepool'
            required: true
        CreateRoleRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Role'
            description: Role
            required: true
        CreateRouteRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateRoute'
        CreateRouteTableRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateRouteTable'
        CreateSecurityGroupRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateSecurityGroup'
        CreateSecurityGroupRuleRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateSecurityGroupRule'
        CreateServerCertificateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateServerCertificate'
        CreateServiceAccountRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ServiceAccount'
            description: Create a new service account
            required: true
        CreateSnapshotRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateSnapshot'
        CreateSpaceRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateSpace'
            description: Space
            required: true
        CreateSubnetRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateSubnet'
        CreateTagsRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateTags'
        CreateUserRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/User'
            description: Create a user
            required: true
        CreateVirtualGatewayRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateVirtualGateway'
        CreateVmsRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateVms'
        CreateVolumeRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateVolume'
        CreateVpcPeeringRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateVpcPeering'
        CreateVpcRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateVpc'
        CreateVpnConnectionRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateVpnConnection'
        CreateVpnConnectionRouteRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateVpnConnectionRoute'
        DeleteACLRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ACLList'
            description: Contains ACLs to be removed.
            required: true
        DeleteLoadBalancerListenersRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DeleteLoadBalancerListeners'
        DeleteLoadBalancerPolicyRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DeleteLoadBalancerPolicy'
        DeleteLoadBalancerTagsRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DeleteLoadBalancerTags'
        DeleteRouteRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DeleteRoute'
        DeleteSecurityGroupRuleRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DeleteSecurityGroupRule'
        DeleteTagsRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DeleteTags'
        DeleteVpnConnectionRouteRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DeleteVpnConnectionRoute'
        IntrospectRequest:
            content:
                application/x-www-form-urlencoded:
                    schema:
                        $ref: '#/components/schemas/TokenBody'
            description: OAuth2 introspect request
        LinkFlexibleGpuRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LinkFlexibleGpu'
        LinkInternetGatewayRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LinkInternetGateway'
        LinkLoadBalancerBackendMachinesRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LinkLoadBalancerBackendMachines'
        LinkNicRequest:
            content:
                application/json:
                    schema:
                        additionalProperties: false
                        properties:
                            deviceNumber:
                                description: The index of the VM device for the NIC attachment (between `1` and `7`, both included).
                                type: integer
                            vmId:
                                description: The ID of the VM to which you want to attach the NIC.
                                type: string
                        required:
                            - deviceNumber
                            - vmId
                        type: object
        LinkPrivateIpsRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LinkPrivateIps'
        LinkPublicIpRequest:
            content:
                application/json:
                    schema:
                        additionalProperties: false
                        properties:
                            allowRelink:
                                description: If true, allows the public IP to be associated with the VM or NIC that you specify even if it is already associated with another VM or NIC. If false, prevents the public IP from being associated with the VM or NIC that you specify if it is already associated with another VM or NIC. (By default, true in the public Cloud, false in a Vpc.)
                                type: boolean
                            nicId:
                                description: (Vpc only) The ID of the NIC. This parameter is required if the VM has more than one NIC attached. Otherwise, you need to specify the `VmId` parameter instead. You cannot specify both parameters at the same time.
                                type: string
                            privateIp:
                                description: (Vpc only) The primary or secondary private IP of the specified NIC. By default, the primary private IP.
                                type: string
                            vmId:
                                description: |-
                                    The ID of the VM.<br />
                                    - In the public Cloud, this parameter is required.<br />
                                    - In a Vpc, this parameter is required if the VM has only one NIC. Otherwise, you need to specify the `NicId` parameter instead. You cannot specify both parameters at the same time.
                                type: string
                        type: object
        LinkRouteTableRequest:
            content:
                application/json:
                    schema:
                        additionalProperties: false
                        properties:
                            subnetId:
                                description: The ID of the Subnet.
                                type: string
                        required:
                            - subnetId
                        type: object
        LinkVirtualGatewayToVpcRequest:
            content:
                application/json:
                    schema:
                        additionalProperties: false
                        properties:
                            vpcId:
                                description: The ID of the Vpc to which you want to attach the virtual gateway.
                                type: string
                        required:
                            - vpcId
                        type: object
        LinkVolumeRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LinkVolume'
        ListIdentitiesByAccessRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/IdentitiesIdsList'
            description: A list of Identities Ids
        ListSpaceIdsRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SpaceIdsList'
            description: A list of Spaces Ids
        NodeOrderRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/KubernetesNodeOrder'
            description: Workers number and profil to order
        NodeRemoveRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/KubernetesNodeRemoval'
            description: Which workers profil wanted to remove
        NodeUpgradeRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/KubernetesNodeUpgrade'
            description: Workers number and profil to order
        PatchUserStateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserState'
            description: Patch user state
            required: true
        ReadLoadBalancerTagsRequest:
            content:
                application/json:
                    schema:
                        additionalProperties: false
                        properties:
                            names:
                                description: One or more load balancer names.
                                items:
                                    type: string
                                type: array
                        required:
                            - names
                        type: object
        ReadVmsHealthRequest:
            content:
                application/json:
                    schema:
                        additionalProperties: false
                        properties:
                            backendVmIds:
                                description: One or more IDs of back-end VMs.
                                items:
                                    type: string
                                type: array
                        type: object
        RemoveRolePermissionsRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RolePermission'
            description: remove role permission request
            required: true
        RevokeRequest:
            content:
                application/x-www-form-urlencoded:
                    schema:
                        $ref: '#/components/schemas/TokenBody'
            description: OAuth2 revoke request
        SetACLRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ACLList'
            description: Contains ACLs to be added.
            required: true
        SetIAMGranularPolicyRequest:
            content:
                application/json:
                    schema:
                        description: Defines the structure for modification instructions for roles and permissions
                        properties:
                            add:
                                $ref: '#/components/schemas/GranularPolicyList'
                            delete:
                                $ref: '#/components/schemas/GranularPolicyList'
                        type: object
            description: Contains details of roles and permissions to be added or deleted from the IAM policy
            required: true
        SetIAMPolicyRequest:
            content:
                application/json:
                    schema:
                        description: Defines the structure for modification instructions for roles and permissions
                        properties:
                            add:
                                $ref: '#/components/schemas/IAMPolicy'
                            delete:
                                $ref: '#/components/schemas/IAMPolicy'
                        type: object
            description: Contains details of roles and permissions to be added or deleted from the IAM policy
            required: true
        StopVmRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/StopVm'
        TokenRequest:
            content:
                application/x-www-form-urlencoded:
                    schema:
                        $ref: '#/components/schemas/TokenReq'
            description: OAuth2 token request
            required: false
        UnlinkInternetGatewayRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UnlinkInternetGateway'
        UnlinkLoadBalancerBackendMachinesRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UnlinkLoadBalancerBackendMachines'
        UnlinkNicRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UnlinkNic'
        UnlinkPrivateIpsRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UnlinkPrivateIps'
        UnlinkPublicIpRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UnlinkPublicIp'
        UnlinkRouteTableRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UnlinkRouteTable'
        UnlinkVirtualGatewayToVpcRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UnlinkVirtualGatewayToVpc'
        UnlinkVolumeRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UnlinkVolume'
        UpdateClusterRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateCluster'
            required: true
        UpdateFlexibleGpuRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateFlexibleGpu'
        UpdateImageRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateImage'
        UpdateListenerRuleRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateListenerRule'
        UpdateLoadBalancerRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateLoadBalancer'
        UpdateNicRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateNic'
        UpdateNodepoolRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReqUpdateNodepool'
            required: true
        UpdateRoleRequest:
            content:
                application/json:
                    schema:
                        properties:
                            description:
                                description: Human-readable description
                                example: Manage the resourcemanager.storage domain
                                type: string
                            name:
                                description: Human-readable name
                                example: Storage Object Admin
                                type: string
                        type: object
            description: patch role
            required: true
        UpdateRouteRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateRoute'
        UpdateRouteTableRoutePropagationRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateRouteTableRoutePropagation'
        UpdateServerCertificateRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateServerCertificate'
        UpdateServiceAccountRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ServiceAccount'
            description: Update a service account
            required: true
        UpdateSpaceRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/MutableSpace'
            description: Space
            required: true
        UpdateSubnetRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateSubnet'
        UpdateUserRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserUpdate'
            description: Update a user
            required: true
        UpdateVmRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateVm'
        UpdateVolumeRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateVolume'
        UpdateVpcRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateVpc'
        UpdateVpnConnectionRequest:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UpdateVpnConnection'
    responses:
        AbortMultipartUploadResponse:
            content:
                text/xml:
                    schema:
                        $ref: '#/components/schemas/AbortMultipartUploadOutput'
            description: Success
            x-go-name: AbortMultipartUploadResponseSchema
        AcceptVpcPeeringResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/AcceptVpcPeering'
            description: Response payload for AcceptVpcPeering
            x-go-name: AcceptVpcPeeringResponseSchema
        Cluster200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/KubernetesCluster'
            description: Cluster information with it operation have current operation execution
            x-go-name: Cluster200ResponseSchema
        ClusterCreateResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ResCreateCluster'
            description: Successfully created a new cluster
            x-go-name: ClusterCreateResponseSchema
        ClusterDeleteResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ResDeleteCluster'
            description: Successfully created a delete cluster operation
            x-go-name: ClusterDeleteResponseSchema
        ClusterGetResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OpenShiftCluster'
            description: Successfully get cluster
            x-go-name: ClusterGetResponseSchema
        ClusterList200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/KubernetesListClusters'
            description: List Clusters that the current user has access to
            x-go-name: ClusterList200ResponseSchema
        ClusterStatusResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/KubernetesStatus'
            description: Cluster with it's current status
            x-go-name: ClusterStatusResponseSchema
        ClustersResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ListClusters'
            description: Successfully list clusters
            x-go-name: ClustersResponseSchema
        CompleteMultipartUploadResponse:
            content:
                text/xml:
                    schema:
                        $ref: '#/components/schemas/CompleteMultipartUploadOutput'
            description: Success
            x-go-name: CompleteMultipartUploadResponseSchema
        CreateBucketResponse:
            content:
                text/xml:
                    schema:
                        $ref: '#/components/schemas/CreateBucketOutput'
            description: Success
            x-go-name: CreateBucketResponseSchema
        CreateClientGatewayResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ClientGateway'
            description: Response payload for CreateClientGateway
            x-go-name: CreateClientGatewayResponseSchema
        CreateDhcpOptionsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DhcpOptionsSet'
            description: Response payload for CreateDhcpOptions
            x-go-name: CreateDhcpOptionsResponseSchema
        CreateFlexibleGpuResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FlexibleGpu'
            description: Response payload for CreateFlexibleGpu
            x-go-name: CreateFlexibleGpuResponseSchema
        CreateImageResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Image'
            description: Response payload for CreateImage
            x-go-name: CreateImageResponseSchema
        CreateInternetGatewayResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/InternetGateway'
            description: Response payload for CreateInternetGateway
            x-go-name: CreateInternetGatewayResponseSchema
        CreateKeypairResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreateKeypair'
            description: Response payload for CreateKeypair
            x-go-name: CreateKeypairResponseSchema
        CreateListenerRuleResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ListenerRule'
            description: Response payload for CreateListenerRule
            x-go-name: CreateListenerRuleResponseSchema
        CreateLoadBalancerListenersResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LoadBalancer'
            description: Response payload for CreateLoadBalancerListeners
            x-go-name: CreateLoadBalancerListenersResponseSchema
        CreateLoadBalancerPolicyResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LoadBalancer'
            description: Response payload for CreateLoadBalancerPolicy
            x-go-name: CreateLoadBalancerPolicyResponseSchema
        CreateLoadBalancerResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LoadBalancer'
            description: Response payload for CreateLoadBalancer
            x-go-name: CreateLoadBalancerResponseSchema
        CreateMultipartUploadResponse:
            content:
                text/xml:
                    schema:
                        $ref: '#/components/schemas/CreateMultipartUploadOutput'
            description: Success
            x-go-name: CreateMultipartUploadResponseSchema
        CreateNatGatewayResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/NatGateway'
            description: Response payload for CreateNatGateway
            x-go-name: CreateNatGatewayResponseSchema
        CreateNicResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Nic'
            description: Response payload for CreateNic
            x-go-name: CreateNicResponseSchema
        CreatePublicIpResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/PublicIp'
            description: Response payload for CreatePublicIp
            x-go-name: CreatePublicIpResponseSchema
        CreateRole200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RegisteredRole'
            description: A role
            links:
                DeleteRole:
                    description: The returned uuid field can be reused to do further operations on the role
                    operationId: DeleteRole
                    parameters:
                        uuid: $response.body#/uuid
                GetRole:
                    description: The returned uuid field can be reused to do further operations on the role
                    operationId: GetRole
                    parameters:
                        uuid: $response.body#/uuid
                UpdateRole:
                    description: The returned uuid field can be reused to do further operations on the role
                    operationId: UpdateRole
                    parameters:
                        uuid: $response.body#/uuid
            x-go-name: CreateRole200ResponseSchema
        CreateRouteResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RouteTable'
            description: Response payload for CreateRoute
            x-go-name: CreateRouteResponseSchema
        CreateRouteTableResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RouteTable'
            description: Response payload for CreateRouteTable
            x-go-name: CreateRouteTableResponseSchema
        CreateSecurityGroupResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SecurityGroup'
            description: Response payload for CreateSecurityGroup
            x-go-name: CreateSecurityGroupResponseSchema
        CreateSecurityGroupRuleResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SecurityGroup'
            description: Response payload for CreateSecurityGroupRule
            x-go-name: CreateSecurityGroupRuleResponseSchema
        CreateServerCertificateResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ServerCertificate'
            description: Response payload for CreateServerCertificate
            x-go-name: CreateServerCertificateResponseSchema
        CreateServiceAccount201Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/CreatedServiceAccount'
            description: Create a new service account.
            x-go-name: CreateServiceAccount201ResponseSchema
        CreateSnapshotResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Snapshot'
            description: Response payload for CreateSnapshot
            x-go-name: CreateSnapshotResponseSchema
        CreateSpace200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Space'
            description: a Space
            x-go-name: CreateSpace200ResponseSchema
        CreateSubnetResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Subnet'
            description: Response payload for CreateSubnet
            x-go-name: CreateSubnetResponseSchema
        CreateUser201Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserCreated'
            description: New user creation.
            x-go-name: CreateUser201ResponseSchema
        CreateVirtualGatewayResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/VirtualGateway'
            description: Response payload for CreateVirtualGateway
            x-go-name: CreateVirtualGatewayResponseSchema
        CreateVmsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Vm'
            description: Response payload for CreateVms
            x-go-name: CreateVmsResponseSchema
        CreateVolumeResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Volume'
            description: Response payload for CreateVolume
            x-go-name: CreateVolumeResponseSchema
        CreateVpcPeeringResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/VpcPeering'
            description: Response payload for CreateVpcPeering
            x-go-name: CreateVpcPeeringResponseSchema
        CreateVpcResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Vpc'
            description: Response payload for CreateVpc
            x-go-name: CreateVpcResponseSchema
        CreateVpnConnectionResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/VpnConnection'
            description: Response payload for CreateVpnConnection
            x-go-name: CreateVpnConnectionResponseSchema
        DeleteObjectResponse:
            content:
                text/xml:
                    schema:
                        $ref: '#/components/schemas/DeleteObjectOutput'
            description: Success
            x-go-name: DeleteObjectResponseSchema
        EmptyResponse:
            description: Empty responses are sent when, for example, resources are deleted.
            x-go-name: EmptyResponseSchema
        Error400:
            content:
                application/problem+json:
                    schema:
                        $ref: '#/components/schemas/BadRequestError'
            description: Bad Request
            x-go-name: Error400Schema
        Error404:
            content:
                application/problem+json:
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Not Found
            x-go-name: Error404Schema
        Error500:
            content:
                application/problem+json:
                    schema:
                        $ref: '#/components/schemas/Error'
            description: Internal Server Error
            x-go-name: Error500Schema
        ErrorResponse:
            content:
                application/problem+json:
                    schema:
                        $ref: '#/components/schemas/Error'
            description: When an error occured
            x-go-name: ErrorResponseSchema
        FileContent200Response:
            content:
                application/octet-stream:
                    schema:
                        $ref: '#/components/schemas/KubernetesBinaryContent'
            description: Retrieve Kubernetes configuration on hex encode binaries
            x-go-name: FileContent200ResponseSchema
        GetACL200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ACLPaginatedList'
            description: a list of acl.
            x-go-name: GetACL200ResponseSchema
        GetIAMGranularPolicy200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/IAMGranularPolicyList'
            description: The IAMPolicy currently associated with the object
            x-go-name: GetIAMGranularPolicy200ResponseSchema
        GetIAMPolicy200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/IAMPolicy'
            description: The IAMPolicy currently associated with the object
            x-go-name: GetIAMPolicy200ResponseSchema
        GetObjectResponse:
            content:
                text/xml:
                    schema:
                        $ref: '#/components/schemas/GetObjectOutput'
            description: Success
            x-go-name: GetObjectResponseSchema
        GetPermission200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RegisteredPermission'
            description: A permission
            links:
                DeletePermission:
                    description: The returned uuid field can be reused to do further operations on the permission
                    operationId: DeletePermission
                    parameters:
                        uuid: $response.body#/uuid
                GetPermission:
                    description: The returned uuid field can be reused to do further operations on the permission
                    operationId: GetPermission
                    parameters:
                        uuid: $response.body#/uuid
                UpdatePermission:
                    description: The returned uuid field can be reused to do further operations on the permission
                    operationId: UpdatePermission
                    parameters:
                        uuid: $response.body#/uuid
            x-go-name: GetPermission200ResponseSchema
        GetRole200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RegisteredRole'
            description: A role
            x-go-name: GetRole200ResponseSchema
        GetRolePermissions200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/PermissionsPaginatedList'
            description: A list of permissions assigned to a role
            x-go-name: GetRolePermissions200ResponseSchema
        GetServiceAccount200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ServiceAccountEdited'
            description: Get a service account.
            x-go-name: GetServiceAccount200ResponseSchema
        GetSpaceById200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Space'
            description: a Space
            x-go-name: GetSpaceById200ResponseSchema
        GetUser200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserModified'
            description: Retrieve a user.
            x-go-name: GetUser200ResponseSchema
        GetUserInfo200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserInfo'
            description: get user info 200 response
            x-go-name: GetUserInfo200ResponseSchema
        IntrospectResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/IntrospectResp'
            description: OAuth2 introspect response
            x-go-name: IntrospectResponseSchema
        JsonWebKeysResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/JsonWebKeySet'
            description: JsonWebKeySet
            x-go-name: JsonWebKeysResponseSchema
        LinkNicResponse:
            content:
                application/json:
                    schema:
                        additionalProperties: false
                        properties:
                            linkNicId:
                                description: The ID of the NIC attachment.
                                type: string
                        type: object
            description: Response payload for LinkNic
            x-go-name: LinkNicResponseSchema
        LinkPublicIpResponse:
            content:
                application/json:
                    schema:
                        additionalProperties: false
                        properties:
                            linkPublicIpId:
                                description: (Vpc only) The ID representing the association of the public IP with the VM or the NIC.
                                type: string
                        type: object
            description: Response payload for LinkPublicIp
            x-go-name: LinkPublicIpResponseSchema
        LinkRouteTableResponse:
            content:
                application/json:
                    schema:
                        additionalProperties: false
                        properties:
                            linkRouteTableId:
                                description: The ID of the association between the route table and the Subnet.
                                type: string
                        type: object
            description: Response payload for LinkRouteTable
            x-go-name: LinkRouteTableResponseSchema
        LinkVirtualGatewayToVpcResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LinkVirtualGatewayToVpc'
            description: Response payload for LinkVirtualGatewayToVpc
            x-go-name: LinkVirtualGatewayToVpcResponseSchema
        ListBucketsResponse:
            content:
                text/xml:
                    schema:
                        $ref: '#/components/schemas/ListBucketsOutput'
            description: Success
            x-go-name: ListBucketsResponseSchema
        ListMySessionsResponse:
            content:
                application/json:
                    schema:
                        items:
                            $ref: '#/components/schemas/Session'
                        type: array
            description: List My Session Response
            x-go-name: ListMySessionsResponseSchema
        ListObjectsResponse:
            content:
                text/xml:
                    schema:
                        $ref: '#/components/schemas/ListObjectsOutput'
            description: Success
            x-go-name: ListObjectsResponseSchema
        ListPermissions200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/PermissionsPaginatedList'
            description: A list of permissions
            x-go-name: ListPermissions200ResponseSchema
        ListRoles200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RolesPaginatedList'
            description: A list of roles
            x-go-name: ListRoles200ResponseSchema
        ListServiceAccount200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ServiceAccountPaginatedList'
            description: A list of services accounts.
            x-go-name: ListServiceAccount200ResponseSchema
        ListSpaces200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SpacePaginatedList'
            description: A list of Spaces
            x-go-name: ListSpaces200ResponseSchema
        ListSpacesIdentity200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SpaceSimplePaginatedList'
            description: A list of spaces
            x-go-name: ListSpacesIdentity200ResponseSchema
        ListSpacesServiceAccount200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SpaceSimplePaginatedList'
            description: A list of spaces
            x-go-name: ListSpacesServiceAccount200ResponseSchema
        ListSpacesUser200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SpaceSimplePaginatedList'
            description: A list of spaces
            x-go-name: ListSpacesUser200ResponseSchema
        ListUser200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserPaginatedList'
            description: A list of users.
            x-go-name: ListUser200ResponseSchema
        ListUserOrganisations200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/OrganisationSimplePaginatedList'
            description: A list of organisation
            x-go-name: ListUserOrganisations200ResponseSchema
        NodepoolCreateResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ResCreateNodepool'
            description: Successfully created a new nodepool
            x-go-name: NodepoolCreateResponseSchema
        NodepoolDeleteResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ResDeleteCluster'
            description: Successfully created a delete nodepool operation
            x-go-name: NodepoolDeleteResponseSchema
        NodepoolsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ListNodepools'
            description: List of nodepools
            x-go-name: NodepoolsResponseSchema
        Operation200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/KubernetesOperation'
            description: Status information related to a specific operation apply on the targeted resource
            x-go-name: Operation200ResponseSchema
        Operation202Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/KubernetesOperation'
            description: Status information related to a specific operation apply on the targeted resource
            x-go-name: Operation202ResponseSchema
        OperationList200Response:
            content:
                application/json:
                    schema:
                        properties:
                            operations:
                                items:
                                    $ref: '#/components/schemas/KubernetesOperation'
                                type: array
            description: List all operation applied or in application
            x-go-name: OperationList200ResponseSchema
        OperationResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Operation'
            description: Successfully get operation
            x-go-name: OperationResponseSchema
        OperationsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Operations'
            description: Successfully list operations
            x-go-name: OperationsResponseSchema
        PatchUserState200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserEdited'
            description: Update user state
            x-go-name: PatchUserState200ResponseSchema
        PutObjectResponse:
            content:
                text/xml:
                    schema:
                        $ref: '#/components/schemas/PutObjectOutput'
            description: Success
            x-go-name: PutObjectResponseSchema
        ReadAdminPasswordResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadAdminPassword'
            description: Response payload for ReadAdminPassword
            x-go-name: ReadAdminPasswordResponseSchema
        ReadClientGatewaysByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ClientGateway'
            description: Response payload for ReadClientGatewaysById
            x-go-name: ReadClientGatewaysByIdResponseSchema
        ReadClientGatewaysResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadClientGateways'
            description: Response payload for ReadClientGateways
            x-go-name: ReadClientGatewaysResponseSchema
        ReadConsoleOutputResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadConsoleOutput'
            description: Response payload for ReadConsoleOutput
            x-go-name: ReadConsoleOutputResponseSchema
        ReadDhcpOptionsByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/DhcpOptionsSet'
            description: Response payload for ReadDhcpOptionsById
            x-go-name: ReadDhcpOptionsByIdResponseSchema
        ReadDhcpOptionsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadDhcpOptions'
            description: Response payload for ReadDhcpOptions
            x-go-name: ReadDhcpOptionsResponseSchema
        ReadFlexibleGpusByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FlexibleGpu'
            description: Response payload for ReadFlexibleGpusById
            x-go-name: ReadFlexibleGpusByIdResponseSchema
        ReadFlexibleGpusResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadFlexibleGpus'
            description: Response payload for ReadFlexibleGpus
            x-go-name: ReadFlexibleGpusResponseSchema
        ReadImagesByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Image'
            description: Response payload for ReadImagesById
            x-go-name: ReadImagesByIdResponseSchema
        ReadImagesResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadImages'
            description: Response payload for ReadImages
            x-go-name: ReadImagesResponseSchema
        ReadInternetGatewaysByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/InternetGateway'
            description: Response payload for ReadInternetGatewaysById
            x-go-name: ReadInternetGatewaysByIdResponseSchema
        ReadInternetGatewaysResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadInternetGateways'
            description: Response payload for ReadInternetGateways
            x-go-name: ReadInternetGatewaysResponseSchema
        ReadKeypairsByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadKeypairsById'
            description: Response payload for ReadKeypairsById
            x-go-name: ReadKeypairsByIdResponseSchema
        ReadKeypairsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadKeypairs'
            description: Response payload for ReadKeypairs
            x-go-name: ReadKeypairsResponseSchema
        ReadListenerRulesByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ListenerRule'
            description: Response payload for ReadListenerRulesById
            x-go-name: ReadListenerRulesByIdResponseSchema
        ReadListenerRulesResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadListenerRules'
            description: Response payload for ReadListenerRules
            x-go-name: ReadListenerRulesResponseSchema
        ReadLoadBalancerTagsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadLoadBalancerTags'
            description: Response payload for ReadLoadBalancerTags
            x-go-name: ReadLoadBalancerTagsResponseSchema
        ReadLoadBalancersByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LoadBalancer'
            description: Response payload for ReadLoadBalancersById
            x-go-name: ReadLoadBalancersByIdResponseSchema
        ReadLoadBalancersResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadLoadBalancers'
            description: Response payload for ReadLoadBalancers
            x-go-name: ReadLoadBalancersResponseSchema
        ReadNatGatewayByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/NatGateway'
            description: Response payload for ReadNatGatewayById
            x-go-name: ReadNatGatewayByIdResponseSchema
        ReadNatGatewayResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadNatGateway'
            description: Response payload for ReadNatGateway
            x-go-name: ReadNatGatewayResponseSchema
        ReadNicsByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Nic'
            description: Response payload for ReadNicsById
            x-go-name: ReadNicsByIdResponseSchema
        ReadNicsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadNics'
            description: Response payload for ReadNics
            x-go-name: ReadNicsResponseSchema
        ReadPublicIpRangesResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadPublicIpRanges'
            description: Response payload for ReadPublicIpRanges
            x-go-name: ReadPublicIpRangesResponseSchema
        ReadPublicIpsByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/PublicIp'
            description: Response payload for ReadPublicIpsById
            x-go-name: ReadPublicIpsByIdResponseSchema
        ReadPublicIpsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadPublicIps'
            description: Response payload for ReadPublicIps
            x-go-name: ReadPublicIpsResponseSchema
        ReadRouteTablesByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RouteTable'
            description: Response payload for ReadRouteTablesById
            x-go-name: ReadRouteTablesByIdResponseSchema
        ReadRouteTablesResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadRouteTables'
            description: Response payload for ReadRouteTables
            x-go-name: ReadRouteTablesResponseSchema
        ReadSecurityGroupsByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/SecurityGroup'
            description: Response payload for ReadSecurityGroupsById
            x-go-name: ReadSecurityGroupsByIdResponseSchema
        ReadSecurityGroupsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadSecurityGroups'
            description: Response payload for ReadSecurityGroups
            x-go-name: ReadSecurityGroupsResponseSchema
        ReadServerCertificatesResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadServerCertificates'
            description: Response payload for ReadServerCertificates
            x-go-name: ReadServerCertificatesResponseSchema
        ReadSnapshotsByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Snapshot'
            description: Response payload for ReadSnapshotsById
            x-go-name: ReadSnapshotsByIdResponseSchema
        ReadSnapshotsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadSnapshots'
            description: Response payload for ReadSnapshots
            x-go-name: ReadSnapshotsResponseSchema
        ReadSubnetsByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Subnet'
            description: Response payload for ReadSubnetsById
            x-go-name: ReadSubnetsByIdResponseSchema
        ReadSubnetsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadSubnets'
            description: Response payload for ReadSubnets
            x-go-name: ReadSubnetsResponseSchema
        ReadTagsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadTags'
            description: Response payload for ReadTags
            x-go-name: ReadTagsResponseSchema
        ReadVirtualGatewaysByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/VirtualGateway'
            description: Response payload for ReadVirtualGatewaysById
            x-go-name: ReadVirtualGatewaysByIdResponseSchema
        ReadVirtualGatewaysResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadVirtualGateways'
            description: Response payload for ReadVirtualGateways
            x-go-name: ReadVirtualGatewaysResponseSchema
        ReadVmsByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Vm'
            description: Response payload for ReadVmsById
            x-go-name: ReadVmsByIdResponseSchema
        ReadVmsHealthResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadVmsHealth'
            description: Response payload for ReadVmsHealth
            x-go-name: ReadVmsHealthResponseSchema
        ReadVmsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadVms'
            description: Response payload for ReadVms
            x-go-name: ReadVmsResponseSchema
        ReadVmsStateResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadVmsState'
            description: Response payload for ReadVmsState
            x-go-name: ReadVmsStateResponseSchema
        ReadVolumesByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Volume'
            description: Response payload for ReadVolumesById
            x-go-name: ReadVolumesByIdResponseSchema
        ReadVolumesResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadVolumes'
            description: Response payload for ReadVolumes
            x-go-name: ReadVolumesResponseSchema
        ReadVpcPeeringsByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/VpcPeering'
            description: Response payload for ReadVpcPeeringsById
            x-go-name: ReadVpcPeeringsByIdResponseSchema
        ReadVpcPeeringsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadVpcPeerings'
            description: Response payload for ReadVpcPeerings
            x-go-name: ReadVpcPeeringsResponseSchema
        ReadVpcsByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Vpc'
            description: Response payload for ReadVpcsById
            x-go-name: ReadVpcsByIdResponseSchema
        ReadVpcsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadVpcs'
            description: Response payload for ReadVpcs
            x-go-name: ReadVpcsResponseSchema
        ReadVpnConnectionsByIdResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/VpnConnection'
            description: Response payload for ReadVpnConnectionsById
            x-go-name: ReadVpnConnectionsByIdResponseSchema
        ReadVpnConnectionsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ReadVpnConnections'
            description: Response payload for ReadVpnConnections
            x-go-name: ReadVpnConnectionsResponseSchema
        RecoverUser200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RecoveryLink'
            description: Generate recovery link
            x-go-name: RecoverUser200ResponseSchema
        StartVmResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/VmState'
            description: Response payload for StartVm
            x-go-name: StartVmResponseSchema
        StopVmResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/VmState'
            description: Response payload for StopVm
            x-go-name: StopVmResponseSchema
        TokenResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/TokenResp'
            description: OAuth2 token response
            x-go-name: TokenResponseSchema
        UpdateFlexibleGpuResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/FlexibleGpu'
            description: Response payload for UpdateFlexibleGpu
            x-go-name: UpdateFlexibleGpuResponseSchema
        UpdateImageResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Image'
            description: Response payload for UpdateImage
            x-go-name: UpdateImageResponseSchema
        UpdateListenerRuleResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ListenerRule'
            description: Response payload for UpdateListenerRule
            x-go-name: UpdateListenerRuleResponseSchema
        UpdateLoadBalancerResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LoadBalancer'
            description: Response payload for UpdateLoadBalancer
            x-go-name: UpdateLoadBalancerResponseSchema
        UpdateNicResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Nic'
            description: Response payload for UpdateNic
            x-go-name: UpdateNicResponseSchema
        UpdateNodeCountResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RespUpdateNodepool'
            description: Nodepool update successful response
            x-go-name: UpdateNodeCountResponseSchema
        UpdateRouteResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RouteTable'
            description: Response payload for UpdateRoute
            x-go-name: UpdateRouteResponseSchema
        UpdateRouteTableRoutePropagationResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/RouteTable'
            description: Response payload for UpdateRouteTableRoutePropagation
            x-go-name: UpdateRouteTableRoutePropagationResponseSchema
        UpdateServerCertificateResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ServerCertificate'
            description: Response payload for UpdateServerCertificate
            x-go-name: UpdateServerCertificateResponseSchema
        UpdateServiceAccount200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ServiceAccountEdited'
            description: Update a service account.
            x-go-name: UpdateServiceAccount200ResponseSchema
        UpdateSubnetResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Subnet'
            description: Response payload for UpdateSubnet
            x-go-name: UpdateSubnetResponseSchema
        UpdateUser200Response:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/UserModified'
            description: Update a user.
            x-go-name: UpdateUser200ResponseSchema
        UpdateVmResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Vm'
            description: Response payload for UpdateVm
            x-go-name: UpdateVmResponseSchema
        UpdateVolumeResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Volume'
            description: Response payload for UpdateVolume
            x-go-name: UpdateVolumeResponseSchema
        UpdateVpcResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Vpc'
            description: Response payload for UpdateVpc
            x-go-name: UpdateVpcResponseSchema
        UpdateVpnConnectionResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/VpnConnection'
            description: Response payload for UpdateVpnConnection
            x-go-name: UpdateVpnConnectionResponseSchema
        UploadPartResponse:
            content:
                text/xml:
                    schema:
                        $ref: '#/components/schemas/UploadPartOutput'
            description: Success
            x-go-name: UploadPartResponseSchema
        VersionsResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/ListVersions'
            description: Successfully list versions
            x-go-name: VersionsResponseSchema
        WebAuthnJavaScriptResponse:
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/WebAuthnJavaScript'
            description: Web authn javascript
            x-go-name: WebAuthnJavaScriptResponseSchema
    schemas:
        ACL:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                permissionId:
                    description: id of the permission
                    format: uuid
                    type: string
                resource:
                    description: Type of the resource being accessed
                    type: string
                resourceId:
                    description: Unique identifier of a resource
                    type: string
                service:
                    description: Name of the service making the call
                    type: string
                subresource:
                    description: Specific type of the subresource within the main resource
                    type: string
            required:
                - permissionId
                - service
                - resource
                - resourceId
            title: ACLPaginatedList
            type: object
        ACLList:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: List of ACLs.
            properties:
                items:
                    items:
                        $ref: '#/components/schemas/ACL'
                    maxItems: 100
                    minItems: 1
                    type: array
            required:
                - items
            title: ACLList
            type: object
        ACLPaginatedList:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/PaginatedList'
                - properties:
                    items:
                        items:
                            $ref: '#/components/schemas/ACL'
                        type: array
                  required:
                    - items
                  type: object
            title: ACLPaginatedList
            type: object
        AbortMultipartUploadOutput:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: AbortMultipartUploadOutput
            type: object
        AcceptVpcPeering:
            additionalProperties: false
            properties:
                vpcPeering:
                    $ref: '#/components/schemas/VpcPeering'
            type: object
        AccepterVpc:
            additionalProperties: false
            description: Information about the accepter Vpc.
            properties:
                ipRange:
                    description: The IP range for the accepter Net, in CIDR notation (for example, `10.0.0.0/16`).
                    type: string
                vpcId:
                    description: The ID of the accepter Vpc.
                    type: string
            type: object
        Access:
            additionalProperties: false
            description: Permissions for the resource.
            properties:
                isPublic:
                    description: |-
                        A global permission for all accounts.<br />
                        (Request) Set this parameter to true to make the resource public (if the parent parameter is `Additions`) or to make the resource private (if the parent parameter is `Removals`).<br />
                        (Response) If true, the resource is public. If false, the resource is private.
                    type: boolean
            type: object
        AccessCreation:
            additionalProperties: false
            description: |-
                Information about the permissions for the resource.<br />
                Specify either the `Additions` or the `Removals` parameter.
            properties:
                additions:
                    $ref: '#/components/schemas/Access'
                removals:
                    $ref: '#/components/schemas/Access'
            type: object
        ApplicationStickyCookiePolicy:
            additionalProperties: false
            description: Information about the stickiness policy.
            properties:
                cookieName:
                    description: The name of the application cookie used for stickiness.
                    type: string
                policyName:
                    description: The mnemonic name for the policy being created. The name must be unique within a set of policies for this load balancer.
                    type: string
            type: object
        AuthenticatorAssuranceLevel:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: |-
                The authenticator assurance level can be one of "aal1", "aal2", or "aal3". A higher number means that it is harder
                for an attacker to compromise the account.
                Generally, "aal1" implies that one authentication factor was used while AAL2 implies that two factors (password + TOTP) have been used.
            enum:
                - aal0
                - aal1
                - aal2
                - aal3
            title: Authenticator Assurance Level (AAL)
            type: string
        BackendVmHealth:
            additionalProperties: false
            description: Information about the health of a back-end VM.
            properties:
                description:
                    description: The description of the state of the back-end VM.
                    type: string
                state:
                    description: The state of the back-end VM (`InService` \| `OutOfService` \| `Unknown`).
                    type: string
                stateReason:
                    description: |-
                        Information about the cause of `OutOfService` VMs.<br />
                         Specifically, whether the cause is Elastic Load Balancing or the VM (`ELB` \| `Instance` \| `N/A`).
                    type: string
                vmId:
                    description: The ID of the back-end VM.
                    type: string
            type: object
        BadRequestError:
            $schema: https://json-schema.org/draft/2020-12/schema
            additionalProperties: false
            allOf:
                - $ref: '#/components/schemas/Error'
                - properties:
                    violations:
                        description: Array of violations to provide a per-field detail.
                        items:
                            $ref: '#/components/schemas/Violation'
                        type: array
                  type: object
            description: For HTTP 400 bad request errors, we implement the https://datatracker.ietf.org/doc/html/rfc9457
            title: BadRequestError
            type: object
        BlockDeviceMappingCreated:
            additionalProperties: false
            description: Information about the created block device mapping.
            properties:
                bsu:
                    $ref: '#/components/schemas/BsuCreated'
                deviceName:
                    description: The name of the device.
                    type: string
            type: object
        BlockDeviceMappingImage:
            additionalProperties: false
            description: One or more parameters used to automatically set up volumes when the VM is created.
            properties:
                bsu:
                    $ref: '#/components/schemas/BsuToCreate'
                deviceName:
                    description: The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
                    type: string
                virtualDeviceName:
                    description: The name of the virtual device (`ephemeralN`).
                    type: string
            type: object
        BlockDeviceMappingVmCreation:
            additionalProperties: false
            description: Information about the block device mapping.
            properties:
                bsu:
                    $ref: '#/components/schemas/BsuToCreate'
                deviceName:
                    description: The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
                    type: string
                noDevice:
                    description: Removes the device which is included in the block device mapping of the OMI.
                    type: string
                virtualDeviceName:
                    description: The name of the virtual device (`ephemeralN`).
                    type: string
            type: object
        BlockDeviceMappingVmUpdate:
            additionalProperties: false
            description: Information about the block device mapping.
            properties:
                bsu:
                    $ref: '#/components/schemas/BsuToUpdateVm'
                deviceName:
                    description: The device name for the volume. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
                    type: string
                noDevice:
                    description: Removes the device which is included in the block device mapping of the OMI.
                    type: string
                virtualDeviceName:
                    description: The name of the virtual device (`ephemeralN`).
                    type: string
            type: object
        Body:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: Body
            type: string
        BsuCreated:
            additionalProperties: false
            description: Information about the created BSU volume.
            properties:
                deleteOnVmDeletion:
                    description: If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
                    type: boolean
                linkDate:
                    description: The date and time of attachment of the volume to the VM, in ISO 8601 date-time format.
                    format: date-time
                    type: string
                state:
                    description: The state of the volume.
                    type: string
                volumeId:
                    description: The ID of the volume.
                    type: string
            type: object
        BsuToCreate:
            additionalProperties: false
            description: Information about the BSU volume to create.
            properties:
                deleteOnVmDeletion:
                    default: true
                    description: By default or if set to true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
                    type: boolean
                iops:
                    description: The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
                    type: integer
                snapshotId:
                    description: The ID of the snapshot used to create the volume.
                    type: string
                volumeSize:
                    description: |-
                        The size of the volume, in gibibytes (GiB).<br />
                        If you specify a snapshot ID, the volume size must be at least equal to the snapshot size.<br />
                        If you specify a snapshot ID but no volume size, the volume is created with a size similar to the snapshot one.
                    type: integer
                volumeType:
                    description: The type of the volume (`standard` \| `io1` \| `gp2`). If not specified in the request, a `standard` volume is created.<br />
                    type: string
            type: object
        BsuToUpdateVm:
            additionalProperties: false
            description: Information about the BSU volume.
            properties:
                deleteOnVmDeletion:
                    description: If set to true, the volume is deleted when terminating the VM. If set to false, the volume is not deleted when terminating the VM.
                    type: boolean
                volumeId:
                    description: The ID of the volume.
                    type: string
            type: object
        Bucket:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                CreationDate:
                    allOf:
                        - $ref: '#/components/schemas/CreationDate'
                Name:
                    allOf:
                        - $ref: '#/components/schemas/BucketName'
            title: Bucket
            type: object
        BucketAlreadyExists:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: BucketAlreadyExists
        BucketAlreadyOwnedByYou:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: BucketAlreadyOwnedByYou
        BucketName:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: BucketName
            type: string
        Buckets:
            $schema: https://json-schema.org/draft/2020-12/schema
            items:
                allOf:
                    - $ref: '#/components/schemas/Bucket'
                    - xml:
                        name: Bucket
            title: Buckets
            type: array
        ChecksumAlgorithm:
            $schema: https://json-schema.org/draft/2020-12/schema
            enum:
                - CRC32
                - CRC32C
                - SHA1
                - SHA256
            title: ChecksumAlgorithm
            type: string
        ChecksumAlgorithmList:
            $schema: https://json-schema.org/draft/2020-12/schema
            items:
                $ref: '#/components/schemas/ChecksumAlgorithm'
            title: ChecksumAlgorithmList
            type: array
        ChecksumCRC32:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: ChecksumCRC32
            type: string
        ChecksumCRC32C:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: ChecksumCRC32C
            type: string
        ChecksumSHA1:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: ChecksumSHA1
            type: string
        ChecksumSHA256:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: ChecksumSHA256
            type: string
        ClientGateway:
            additionalProperties: false
            description: Information about the client gateway.
            properties:
                bgpAsn:
                    description: The Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet.
                    type: integer
                connectionType:
                    description: The type of communication tunnel used by the client gateway (only `ipsec.1` is supported).
                    type: string
                id:
                    description: The ID of the client gateway.
                    type: string
                publicIp:
                    description: The public IPv4 address of the client gateway (must be a fixed address into a NATed network).
                    type: string
                state:
                    description: The state of the client gateway (`pending` \| `available` \| `deleting` \| `deleted`).
                    type: string
                tags:
                    description: One or more tags associated with the client gateway.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
            type: object
        CommonPrefix:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                Prefix:
                    allOf:
                        - $ref: '#/components/schemas/Prefix'
            title: CommonPrefix
            type: object
        CommonPrefixList:
            $schema: https://json-schema.org/draft/2020-12/schema
            items:
                $ref: '#/components/schemas/CommonPrefix'
            title: CommonPrefixList
            type: array
        CompleteMultipartInput:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                CompleteMultipartUpload:
                    properties:
                        Parts:
                            allOf:
                                - $ref: '#/components/schemas/CompletedPartList'
                                - xml:
                                    name: Part
                    type: object
            title: CompleteMultipartInput
            type: object
        CompleteMultipartUploadOutput:
            $schema: https://json-schema.org/draft/2020-12/schema
            example:
                Bucket: acexamplebucket
                ETag: '"4d9031c7644d8081c2829f4ea23c55f7-2"'
                Key: bigobject
                Location: https://examplebucket.oos.<Region>.com/bigobject
            properties:
                Bucket:
                    allOf:
                        - $ref: '#/components/schemas/BucketName'
                ChecksumCRC32:
                    allOf:
                        - $ref: '#/components/schemas/ChecksumCRC32'
                ChecksumCRC32C:
                    allOf:
                        - $ref: '#/components/schemas/ChecksumCRC32C'
                ChecksumSHA1:
                    allOf:
                        - $ref: '#/components/schemas/ChecksumSHA1'
                ChecksumSHA256:
                    allOf:
                        - $ref: '#/components/schemas/ChecksumSHA256'
                ETag:
                    allOf:
                        - $ref: '#/components/schemas/ETag'
                Key:
                    allOf:
                        - $ref: '#/components/schemas/ObjectKey'
                Location:
                    allOf:
                        - $ref: '#/components/schemas/ObjectLocation'
            title: CompleteMultipartUploadOutput
            type: object
        CompletedPart:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                ChecksumCRC32:
                    allOf:
                        - $ref: '#/components/schemas/ChecksumCRC32'
                ChecksumCRC32C:
                    allOf:
                        - $ref: '#/components/schemas/ChecksumCRC32C'
                ChecksumSHA1:
                    allOf:
                        - $ref: '#/components/schemas/ChecksumSHA1'
                ChecksumSHA256:
                    allOf:
                        - $ref: '#/components/schemas/ChecksumSHA256'
                ETag:
                    allOf:
                        - $ref: '#/components/schemas/ETag'
                PartNumber:
                    allOf:
                        - $ref: '#/components/schemas/PartNumber'
            title: CompletedPart
            type: object
        CompletedPartList:
            $schema: https://json-schema.org/draft/2020-12/schema
            items:
                $ref: '#/components/schemas/CompletedPart'
            title: CompletedPartList
            type: array
        ContinueWith:
            $schema: https://json-schema.org/draft/2020-12/schema
            discriminator:
                mapping:
                    set_session_token: '#/components/schemas/ContinueWithSetSessionToken'
                    show_recovery_ui: '#/components/schemas/ContinueWithRecoveryUi'
                    show_settings_ui: '#/components/schemas/ContinueWithSettingsUi'
                    show_verification_ui: '#/components/schemas/ContinueWithVerificationUi'
                propertyName: action
            oneOf:
                - $ref: '#/components/schemas/ContinueWithVerificationUi'
                - $ref: '#/components/schemas/ContinueWithSetSessionToken'
                - $ref: '#/components/schemas/ContinueWithSettingsUi'
                - $ref: '#/components/schemas/ContinueWithRecoveryUi'
            title: Continue With
        ContinueWithRecoveryUi:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Indicates, that the UI flow could be continued by showing a recovery ui
            properties:
                action:
                    description: |-
                        Action will always be `show_recovery_ui`
                        show_recovery_ui ContinueWithActionShowRecoveryUIString
                    enum:
                        - show_recovery_ui
                    type: string
                    x-go-enum-desc: show_recovery_ui ContinueWithActionShowRecoveryUIString
                flow:
                    $ref: '#/components/schemas/ContinueWithRecoveryUiFlow'
            required:
                - action
                - flow
            title: Continue With Recovery Ui
            type: object
        ContinueWithRecoveryUiFlow:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                id:
                    description: The ID of the recovery flow
                    format: uuid
                    type: string
                url:
                    description: The URL of the recovery flow
                    type: string
            required:
                - id
            title: Continue With Recovery Ui Flow
            type: object
        ContinueWithSetSessionToken:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Indicates that a session was issued, and the application should use this token for authenticated requests
            properties:
                action:
                    description: |-
                        Action will always be `set_session_token`
                        set_session_token ContinueWithActionSetSessionTokenString
                    enum:
                        - set_session_token
                    type: string
                    x-go-enum-desc: set_session_token ContinueWithActionSetSessionTokenString
                session_token:
                    description: Token is the token of the session
                    type: string
            required:
                - action
                - session_token
            title: Continue With Set Session Token
            type: object
        ContinueWithSettingsUi:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Indicates, that the UI flow could be continued by showing a settings ui
            properties:
                action:
                    description: |-
                        Action will always be `show_settings_ui`
                        show_settings_ui ContinueWithActionShowSettingsUIString
                    enum:
                        - show_settings_ui
                    type: string
                    x-go-enum-desc: show_settings_ui ContinueWithActionShowSettingsUIString
                flow:
                    $ref: '#/components/schemas/ContinueWithSettingsUiFlow'
            required:
                - action
                - flow
            title: Continue With Settings Ui
            type: object
        ContinueWithSettingsUiFlow:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                id:
                    description: The ID of the settings flow
                    format: uuid
                    type: string
            required:
                - id
            title: Continue With Settings Ui Flow
            type: object
        ContinueWithVerificationUi:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Indicates, that the UI flow could be continued by showing a verification ui
            properties:
                action:
                    description: |-
                        Action will always be `show_verification_ui`
                        show_verification_ui ContinueWithActionShowVerificationUIString
                    enum:
                        - show_verification_ui
                    type: string
                    x-go-enum-desc: show_verification_ui ContinueWithActionShowVerificationUIString
                flow:
                    $ref: '#/components/schemas/ContinueWithVerificationUiFlow'
            required:
                - action
                - flow
            title: Continue With Verification Ui
            type: object
        ContinueWithVerificationUiFlow:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                id:
                    description: The ID of the verification flow
                    format: uuid
                    type: string
                url:
                    description: The URL of the verification flow
                    type: string
                verifiable_address:
                    description: The address that should be verified in this flow
                    type: string
            required:
                - id
                - verifiable_address
            title: Continue With Verification Ui Flow
            type: object
        CreateBucketOutput:
            $schema: https://json-schema.org/draft/2020-12/schema
            example:
                Location: /examplebucket
            title: CreateBucketOutput
            type: object
        CreateClientGateway:
            additionalProperties: false
            properties:
                bgpAsn:
                    description: |-
                        The Autonomous System Number (ASN) used by the Border Gateway Protocol (BGP) to find the path to your client gateway through the Internet. <br/>
                        This number must be between `1` and `4294967295`. If you do not have an ASN, you can choose one between 64512 and 65534, or between 4200000000 and 4294967294.
                    type: integer
                connectionType:
                    description: The communication protocol used to establish tunnel with your client gateway (only `ipsec.1` is supported).
                    type: string
                publicIp:
                    description: The public fixed IPv4 address of your client gateway.
                    type: string
            required:
                - bgpAsn
                - publicIp
                - connectionType
            type: object
        CreateCluster:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                cidr:
                    description: IP addresses in CIDR notation
                    example: 10.0.0.0/16
                    type: string
                description:
                    type: string
                name:
                    pattern: ^[a-zA-Z0-9-]{3,64}$
                    type: string
                nodePools:
                    items:
                        $ref: '#/components/schemas/OpenShiftNodepool'
                    type: array
                version:
                    type: string
            required:
                - name
                - version
                - nodePools
                - cidr
            title: Create Cluster Request Schema
            type: object
        CreateDhcpOptions:
            additionalProperties: false
            properties:
                domainName:
                    description: 'Specify a domain name (for example, `MyCompany.com`). You can specify only one domain name. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, `LogServers`, or `NtpServers`.'
                    type: string
                domainNameServers:
                    description: 'The IPs of domain name servers. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, `LogServers`, or `NtpServers`.'
                    items:
                        type: string
                    type: array
                logServers:
                    description: 'The IPs of the log servers. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, `LogServers`, or `NtpServers`.'
                    items:
                        type: string
                    type: array
                ntpServers:
                    description: 'The IPs of the Network Time Protocol (NTP) servers. You must specify at least one of the following parameters: `DomainName`, `DomainNameServers`, `LogServers`, or `NtpServers`.'
                    items:
                        type: string
                    type: array
            type: object
        CreateFlexibleGpu:
            additionalProperties: false
            properties:
                availabilityZoneName:
                    description: The Subregion in which you want to create the fGPU.
                    type: string
                deleteOnVmDeletion:
                    default: false
                    description: If true, the fGPU is deleted when the VM is terminated.
                    type: boolean
                generation:
                    description: The processor generation that the fGPU must be compatible with. If not specified, the oldest possible processor generation is selected (as provided by [ReadFlexibleGpuCatalog](#readflexiblegpucatalog) for the specified model of fGPU).
                    type: string
                modelName:
                    description: The model of fGPU you want to allocate.
                    type: string
            required:
                - modelName
                - availabilityZoneName
            type: object
        CreateImage:
            additionalProperties: false
            properties:
                architecture:
                    description: '**(when registering from a snapshot, or from a bucket without using a manifest file)** The architecture of the OMI (`i386` or `x84_64`).'
                    type: string
                blockDeviceMappings:
                    description: '**(when registering from a snapshot, or from a bucket without using a manifest file)** One or more block device mappings.'
                    items:
                        $ref: '#/components/schemas/BlockDeviceMappingImage'
                    type: array
                description:
                    description: A description for the new OMI.
                    type: string
                name:
                    description: |-
                        A unique name for the new OMI.<br />
                        Constraints: 3-128 alphanumeric characters, underscores (`_`), spaces (` `), parentheses (`()`), slashes (`/`), periods (`.`), or dashes (`-`).
                    type: string
                noReboot:
                    description: '**(when creating from a VM)** If false, the VM shuts down before creating the OMI and then reboots. If true, the VM does not.'
                    type: boolean
                productCodes:
                    description: The product codes associated with the OMI.
                    items:
                        type: string
                    type: array
                rootDeviceName:
                    description: '**(when registering from a snapshot, or from a bucket without using a manifest file)** The name of the root device for the new OMI.'
                    type: string
                sourceImageId:
                    description: '**(when copying an OMI)** The ID of the OMI you want to copy.'
                    type: string
                sourceRegionName:
                    description: '**(when copying an OMI)** The name of the source Region (always the same as the Region of your account).'
                    type: string
                vmId:
                    description: '**(when creating from a VM)** The ID of the VM from which you want to create the OMI.'
                    type: string
            type: object
        CreateKeypair:
            additionalProperties: false
            description: Information about the created keypair.
            properties:
                fingerprint:
                    description: The MD5 public key fingerprint, as specified in section 4 of RFC 4716.
                    type: string
                name:
                    description: The name of the keypair.
                    type: string
                privateKey:
                    description: The private key, returned only if you are creating a keypair (not if you are importing). When you save this private key in a .rsa file, make sure you replace the `\n` escape sequences with real line breaks.
                    type: string
                type:
                    description: The type of the keypair (`ssh-rsa`, `ssh-ed25519`, `ecdsa-sha2-nistp256`, `ecdsa-sha2-nistp384`, or `ecdsa-sha2-nistp521`).
                    type: string
            type: object
        CreateListenerRule:
            additionalProperties: false
            properties:
                listener:
                    $ref: '#/components/schemas/LoadBalancerLight'
                listenerRule:
                    $ref: '#/components/schemas/ListenerRuleForCreation'
                vmIds:
                    description: The IDs of the backend VMs.
                    items:
                        type: string
                    type: array
            required:
                - vmIds
                - listener
                - listenerRule
            type: object
        CreateLoadBalancer:
            additionalProperties: false
            properties:
                availabilityZoneNames:
                    description: (public Cloud only) The Subregion in which you want to create the load balancer. Regardless of this Subregion, the load balancer can distribute traffic to all Subregions. This parameter is required in the public Cloud.
                    items:
                        type: string
                    type: array
                listeners:
                    description: One or more listeners to create.
                    items:
                        $ref: '#/components/schemas/ListenerForCreation'
                    type: array
                name:
                    description: The unique name of the load balancer (32 alphanumeric or hyphen characters maximum, but cannot start or end with a hyphen).
                    type: string
                publicIp:
                    description: (internet-facing only) The public IP you want to associate with the load balancer. If not specified, a public IP owned by NumSpot is associated.
                    type: string
                securityGroups:
                    description: (Vpc only) One or more IDs of security groups you want to assign to the load balancer. If not specified, the default security group of the Vpc is assigned to the load balancer.
                    items:
                        type: string
                    type: array
                subnets:
                    description: (Vpc only) The ID of the Subnet in which you want to create the load balancer. Regardless of this Subnet, the load balancer can distribute traffic to all Subnets. This parameter is required in a Vpc.
                    items:
                        type: string
                    type: array
                tags:
                    description: One or more tags assigned to the load balancer.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                type:
                    description: 'The type of load balancer: `internet-facing` or `internal`. Use this parameter only for load balancers in a Vpc.'
                    type: string
            required:
                - listeners
                - name
                - subnets
            type: object
        CreateLoadBalancerListeners:
            additionalProperties: false
            properties:
                listeners:
                    description: One or more listeners for the load balancer.
                    items:
                        $ref: '#/components/schemas/ListenerForCreation'
                    type: array
            required:
                - listeners
            type: object
        CreateLoadBalancerPolicy:
            additionalProperties: false
            properties:
                cookieExpirationPeriod:
                    description: The lifetime of the cookie, in seconds. If not specified, the default value of this parameter is `1`, which means that the sticky session lasts for the duration of the browser session.
                    type: integer
                cookieName:
                    description: The name of the application cookie used for stickiness. This parameter is required if you create a stickiness policy based on an application-generated cookie.
                    type: string
                policyName:
                    description: The name of the policy. This name must be unique and consist of alphanumeric characters and dashes (-).
                    type: string
                policyType:
                    description: 'The type of stickiness policy you want to create: `app` or `load_balancer`.'
                    type: string
            required:
                - policyType
                - policyName
            type: object
        CreateLoadBalancerTags:
            additionalProperties: false
            properties:
                names:
                    description: One or more load balancer names.
                    items:
                        type: string
                    type: array
                tags:
                    description: One or more tags to add to the specified load balancers.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
            required:
                - tags
                - names
            type: object
        CreateMultipartUploadOutput:
            $schema: https://json-schema.org/draft/2020-12/schema
            example:
                Bucket: examplebucket
                Key: largeobject
                UploadId: ibZBv_75gd9r8lH_gqXatLdxMVpAlj6ZQjEs.OwyF3953YdwbcQnMA2BLGn8Lx12fQNICtMw5KyteFeHw.Sjng--
            properties:
                Bucket:
                    allOf:
                        - $ref: '#/components/schemas/BucketName'
                Key:
                    allOf:
                        - $ref: '#/components/schemas/ObjectKey'
                UploadId:
                    allOf:
                        - $ref: '#/components/schemas/MultipartUploadId'
            title: CreateMultipartUploadOutput
            type: object
        CreateNatGateway:
            additionalProperties: false
            properties:
                publicIpId:
                    description: |-
                        The allocation ID of the public IP to associate with the NAT gateway.<br />
                        If the public IP is already associated with another resource, you must first disassociate it.
                    type: string
                subnetId:
                    description: The ID of the Subnet in which you want to create the NAT gateway.
                    type: string
            required:
                - publicIpId
                - subnetId
            type: object
        CreateNic:
            additionalProperties: false
            properties:
                description:
                    description: A description for the NIC.
                    type: string
                privateIps:
                    description: |-
                        The primary private IP for the NIC.<br />
                        This IP must be within the IP range of the Subnet that you specify with the `SubnetId` attribute.<br />
                        If you do not specify this attribute, a random private IP is selected within the IP range of the Subnet.
                    items:
                        $ref: '#/components/schemas/PrivateIpLight'
                    type: array
                securityGroupIds:
                    description: One or more IDs of security groups for the NIC.
                    items:
                        type: string
                    type: array
                subnetId:
                    description: The ID of the Subnet in which you want to create the NIC.
                    type: string
            required:
                - subnetId
            type: object
        CreateNodepool:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                name:
                    type: string
                nodeCount:
                    type: integer
                nodeProfile:
                    $ref: '#/components/schemas/NodeProfile'
            required:
                - name
                - nodeProfile
                - nodeCount
            title: Create NodePool Request Schema
            type: object
        CreateRoute:
            additionalProperties: false
            properties:
                destinationIpRange:
                    description: The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
                    type: string
                gatewayId:
                    description: The ID of an Internet gateway or virtual gateway attached to your Vpc.
                    type: string
                natGatewayId:
                    description: The ID of a NAT gateway.
                    type: string
                nicId:
                    description: The ID of a NIC.
                    type: string
                vmId:
                    description: The ID of a NAT VM in your Vpc (attached to exactly one NIC).
                    type: string
                vpcPeeringId:
                    description: The ID of a Vpc peering.
                    type: string
            required:
                - destinationIpRange
            type: object
        CreateRouteTable:
            additionalProperties: false
            properties:
                vpcId:
                    description: The ID of the Vpc for which you want to create a route table.
                    type: string
            required:
                - vpcId
            type: object
        CreateSecurityGroup:
            additionalProperties: false
            properties:
                description:
                    description: |-
                        A description for the security group.<br />
                        This description can contain between 1 and 255 characters. Allowed characters are `a-z`, `A-Z`, `0-9`, accented letters, spaces, and `_.-:/()#,@[]+=&;{}!$*`.
                    type: string
                name:
                    description: |-
                        The name of the security group.<br />
                        This name must not start with `sg-`.<br />
                        This name must be unique and contain between 1 and 255 characters. Allowed characters are `a-z`, `A-Z`, `0-9`, spaces, and `_.-:/()#,@[]+=&;{}!$*`.
                    type: string
                vpcId:
                    description: The ID of the Vpc for the security group.
                    type: string
            required:
                - description
                - name
                - vpcId
            type: object
        CreateSecurityGroupRule:
            additionalProperties: false
            properties:
                flow:
                    description: 'The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Vpcs only.'
                    type: string
                fromPortRange:
                    description: The beginning of the port range for the TCP and UDP protocols, or an ICMP type number. If you specify this parameter, you cannot specify the `Rules` parameter and its subparameters.
                    type: integer
                ipProtocol:
                    description: The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Vpc, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). If you specify this parameter, you cannot specify the `Rules` parameter and its subparameters.
                    type: string
                ipRange:
                    description: The IP range for the security group rule, in CIDR notation (for example, 10.0.0.0/16). If you specify this parameter, you cannot specify the `Rules` parameter and its subparameters.
                    type: string
                rules:
                    description: 'Information about the security group rule to create. If you specify this parent parameter and its subparameters, you cannot specify the following parent parameters: `FromPortRange`, `IpProtocol`, `IpRange`, and `ToPortRange`.'
                    items:
                        $ref: '#/components/schemas/SecurityGroupRule'
                    type: array
                securityGroupNameToLink:
                    description: The ID of a source or destination security group that you want to link to the security group of the rule.
                    type: string
                toPortRange:
                    description: The end of the port range for the TCP and UDP protocols, or an ICMP code number. If you specify this parameter, you cannot specify the `Rules` parameter and its subparameters.
                    type: integer
            required:
                - flow
            type: object
        CreateServerCertificate:
            additionalProperties: false
            properties:
                body:
                    description: The PEM-encoded X509 certificate.
                    type: string
                chain:
                    description: The PEM-encoded intermediate certification authorities.
                    type: string
                name:
                    description: A unique name for the certificate.
                    type: string
                path:
                    description: The path to the server certificate, set to a slash (/) if not specified.
                    type: string
                privateKey:
                    description: The PEM-encoded private key matching the certificate.
                    type: string
            required:
                - body
                - name
                - privateKey
            type: object
        CreateSnapshot:
            additionalProperties: false
            properties:
                description:
                    description: A description for the snapshot.
                    type: string
                sourceRegionName:
                    description: '**(when copying a snapshot)** The name of the source Region, which must be the same as the Region of your account.'
                    type: string
                sourceSnapshotId:
                    description: '**(when copying a snapshot)** The ID of the snapshot you want to copy.'
                    type: string
                volumeId:
                    description: '**(when creating from a volume)** The ID of the volume you want to create a snapshot of.'
                    type: string
            type: object
        CreateSpace:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/MutableSpace'
                - required:
                    - name
                    - description
                  type: object
            title: CreateSpace
            type: object
        CreateSubnet:
            additionalProperties: false
            properties:
                availabilityZoneName:
                    description: The name of the Subregion in which you want to create the Subnet.
                    type: string
                ipRange:
                    description: |-
                        The IP range in the Subnet, in CIDR notation (for example, `10.0.0.0/16`).<br />
                        The IP range of the Subnet can be either the same as the Vpc one if you create only a single Subnet in this Net, or a subset of the Vpc one. In case of several Subnets in a Vpc, their IP ranges must not overlap. The smallest Subnet you can create uses a /29 netmask (eight IPs).
                    type: string
                vpcId:
                    description: The ID of the Vpc for which you want to create a Subnet.
                    type: string
            required:
                - ipRange
                - vpcId
            type: object
        CreateTags:
            additionalProperties: false
            properties:
                resourceIds:
                    description: One or more resource IDs.
                    items:
                        type: string
                    type: array
                tags:
                    description: One or more tags to add to the specified resources.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
            required:
                - resourceIds
                - tags
            type: object
        CreateVirtualGateway:
            additionalProperties: false
            properties:
                connectionType:
                    description: The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported).
                    type: string
            required:
                - connectionType
            type: object
        CreateVms:
            additionalProperties: false
            properties:
                blockDeviceMappings:
                    description: One or more block device mappings.
                    items:
                        $ref: '#/components/schemas/BlockDeviceMappingVmCreation'
                    type: array
                bootOnCreation:
                    default: true
                    description: By default or if true, the VM is started on creation. If false, the VM is stopped on creation.
                    type: boolean
                bsuOptimized:
                    description: This parameter is not available. It is present in our API for the sake of historical compatibility with AWS.
                    type: boolean
                clientToken:
                    description: A unique identifier which enables you to manage the idempotency.
                    type: string
                deletionProtection:
                    description: If true, you cannot delete the VM unless you change this parameter back to false.
                    type: boolean
                imageId:
                    description: The ID of the OMI used to create the VM. You can find the list of OMIs by calling the [ReadImages](#readimages) method.
                    type: string
                keypairName:
                    description: The name of the keypair.
                    type: string
                maxVmsCount:
                    description: The maximum number of VMs you want to create. If all the VMs cannot be created, the largest possible number of VMs above MinVmsCount is created.
                    type: integer
                minVmsCount:
                    description: The minimum number of VMs you want to create. If this number of VMs cannot be created, no VMs are created.
                    type: integer
                nestedVirtualization:
                    default: false
                    description: (dedicated tenancy only) If true, nested virtualization is enabled. If false, it is disabled.
                    type: boolean
                nics:
                    description: One or more NICs. If you specify this parameter, you must not specify the `SubnetId` and `SubregionName` parameters. You also must define one NIC as the primary network interface of the VM with `0` as its device number.
                    items:
                        $ref: '#/components/schemas/NicForVmCreation'
                    type: array
                performance:
                    default: high
                    description: The performance of the VM (`medium` \| `high` \|  `highest`). By default, `high`. This parameter is ignored if you specify a performance flag directly in the `type` parameter.
                    enum:
                        - medium
                        - high
                        - highest
                    type: string
                placement:
                    $ref: '#/components/schemas/Placement'
                privateIps:
                    description: One or more private IPs of the VM.
                    items:
                        type: string
                    type: array
                securityGroupIds:
                    description: One or more IDs of security group for the VMs.
                    items:
                        type: string
                    type: array
                securityGroups:
                    description: One or more names of security groups for the VMs.
                    items:
                        type: string
                    type: array
                subnetId:
                    description: The ID of the Subnet in which you want to create the VM. If you specify this parameter, you must not specify the `Nics` parameter.
                    type: string
                type:
                    description: The type of VM.
                    type: string
                userData:
                    description: Data or script used to add a specific configuration to the VM. It must be Base64-encoded and is limited to 500 kibibytes (KiB).
                    type: string
                vmInitiatedShutdownBehavior:
                    default: stop
                    description: The VM behavior when you stop it. By default or if set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated.
                    type: string
            required:
                - imageId
                - subnetId
            type: object
        CreateVolume:
            additionalProperties: false
            properties:
                availabilityZoneName:
                    description: The Subregion in which you want to create the volume.
                    type: string
                iops:
                    description: The number of I/O operations per second (IOPS). This parameter must be specified only if you create an `io1` volume. The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
                    type: integer
                size:
                    description: 'The size of the volume, in gibibytes (GiB). The maximum allowed size for a volume is 14901 GiB. This parameter is required if the volume is not created from a snapshot (`SnapshotId` unspecified). '
                    type: integer
                snapshotId:
                    description: The ID of the snapshot from which you want to create the volume.
                    type: string
                type:
                    description: The type of volume you want to create (`io1` \| `gp2` \ | `standard`). If not specified, a `standard` volume is created.<br />
                    type: string
            required:
                - availabilityZoneName
            type: object
        CreateVpc:
            additionalProperties: false
            properties:
                ipRange:
                    description: The IP range for the Vpc, in CIDR notation (for example, `10.0.0.0/16`).
                    type: string
                tenancy:
                    description: |-
                        The tenancy options for the VMs:<br />
                        - `default` if a VM created in a Vpc can be launched with any tenancy.<br />
                        - `dedicated` if it can be launched with dedicated tenancy VMs running on single-tenant hardware.<br />
                        - `dedicated group ID`: if it can be launched in a dedicated group on single-tenant hardware.
                    type: string
            required:
                - ipRange
            type: object
        CreateVpcPeering:
            additionalProperties: false
            properties:
                accepterVpcId:
                    description: The ID of the Vpc you want to connect with.
                    type: string
                sourceVpcId:
                    description: The ID of the Vpc you send the peering request from.
                    type: string
            required:
                - accepterVpcId
                - sourceVpcId
            type: object
        CreateVpnConnection:
            additionalProperties: false
            properties:
                clientGatewayId:
                    description: The ID of the client gateway.
                    type: string
                connectionType:
                    description: The type of VPN connection (only `ipsec.1` is supported).
                    type: string
                staticRoutesOnly:
                    description: By default or if false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).
                    type: boolean
                virtualGatewayId:
                    description: The ID of the virtual gateway.
                    type: string
            required:
                - clientGatewayId
                - connectionType
                - virtualGatewayId
            type: object
        CreateVpnConnectionRoute:
            additionalProperties: false
            properties:
                destinationIpRange:
                    description: The network prefix of the route, in CIDR notation (for example, `10.12.0.0/16`).
                    type: string
            required:
                - destinationIpRange
            type: object
        CreatedServiceAccount:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/ServiceAccountEdited'
                - properties:
                    secret:
                        description: Service account secret.
                        type: string
                  required:
                    - secret
                  type: object
            title: CreatedServiceAccount
            type: object
        CreationDate:
            $schema: https://json-schema.org/draft/2020-12/schema
            format: date-time
            title: CreationDate
            type: string
        CredentialSupportedDraft00:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Includes information about the supported verifiable credentials.
            properties:
                cryptographic_binding_methods_supported:
                    description: |-
                        OpenID Connect Verifiable Credentials Cryptographic Binding Methods Supported

                        Contains a list of cryptographic binding methods supported for signing the proof.
                    items:
                        type: string
                    type: array
                cryptographic_suites_supported:
                    description: |-
                        OpenID Connect Verifiable Credentials Cryptographic Suites Supported

                        Contains a list of cryptographic suites methods supported for signing the proof.
                    items:
                        type: string
                    type: array
                format:
                    description: |-
                        OpenID Connect Verifiable Credentials Format

                        Contains the format that is supported by this authorization server.
                    type: string
                types:
                    description: |-
                        OpenID Connect Verifiable Credentials Types

                        Contains the types of verifiable credentials supported.
                    items:
                        type: string
                    type: array
            title: Verifiable Credentials Metadata (Draft 00)
            type: object
        DateTime:
            $schema: https://json-schema.org/draft/2020-12/schema
            example: "2018-11-13T20:20:39+00:00"
            format: date-time
            title: DateTime
            type: string
        DeleteLoadBalancerListeners:
            additionalProperties: false
            properties:
                loadBalancerPorts:
                    description: One or more port numbers of the listeners you want to delete.
                    items:
                        type: integer
                    type: array
            required:
                - loadBalancerPorts
            type: object
        DeleteLoadBalancerPolicy:
            additionalProperties: false
            properties:
                policyName:
                    description: The name of the policy you want to delete.
                    type: string
            required:
                - policyName
            type: object
        DeleteLoadBalancerTags:
            additionalProperties: false
            properties:
                names:
                    description: One or more load balancer names.
                    items:
                        type: string
                    type: array
                tags:
                    description: One or more tags to delete from the load balancers.
                    items:
                        $ref: '#/components/schemas/ResourceLoadBalancerTag'
                    type: array
            required:
                - tags
                - names
            type: object
        DeleteMySessionsCount:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Deleted Session Count
            properties:
                count:
                    description: The number of sessions that were revoked.
                    format: int64
                    type: integer
            title: Delete My Sessions Count
            type: object
        DeleteObjectOutput:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: DeleteObjectOutput
            type: object
        DeleteRoute:
            additionalProperties: false
            properties:
                destinationIpRange:
                    description: The exact IP range for the route.
                    type: string
            required:
                - destinationIpRange
            type: object
        DeleteSecurityGroupRule:
            additionalProperties: false
            properties:
                flow:
                    description: 'The direction of the flow: `Inbound` or `Outbound`. You can specify `Outbound` for Vpcs only.'
                    type: string
                fromPortRange:
                    description: The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
                    type: integer
                ipProtocol:
                    description: The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Vpc, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                    type: string
                ipRange:
                    description: The IP range for the security group rule, in CIDR notation (for example, `10.0.0.0/16`).
                    type: string
                rules:
                    description: One or more rules you want to delete from the security group.
                    items:
                        $ref: '#/components/schemas/SecurityGroupRule'
                    type: array
                securityGroupNameToUnlink:
                    description: The ID of the source security group. If you are in the Public Cloud, you can also specify the name of the source security group.
                    type: string
                toPortRange:
                    description: The end of the port range for the TCP and UDP protocols, or an ICMP code number.
                    type: integer
            required:
                - flow
            type: object
        DeleteTags:
            additionalProperties: false
            properties:
                resourceIds:
                    description: One or more resource IDs.
                    items:
                        type: string
                    type: array
                tags:
                    description: One or more tags to delete (if you set a tag value, only the tags matching exactly this value are deleted).
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
            required:
                - resourceIds
                - tags
            type: object
        DeleteVpnConnectionRoute:
            additionalProperties: false
            properties:
                destinationIpRange:
                    description: The network prefix of the route to delete, in CIDR notation (for example, `10.12.0.0/16`).
                    type: string
            required:
                - destinationIpRange
            type: object
        Delimiter:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: Delimiter
            type: string
        DhcpOptionsSet:
            additionalProperties: false
            description: Information about the DHCP options set.
            properties:
                default:
                    description: If true, the DHCP options set is a default one. If false, it is not.
                    type: boolean
                domainName:
                    description: The domain name.
                    type: string
                domainNameServers:
                    description: One or more IPs for the domain name servers.
                    items:
                        type: string
                    type: array
                id:
                    description: The ID of the DHCP options set.
                    type: string
                logServers:
                    description: One or more IPs for the log servers.
                    items:
                        type: string
                    type: array
                ntpServers:
                    description: One or more IPs for the NTP servers.
                    items:
                        type: string
                    type: array
                tags:
                    description: One or more tags associated with the DHCP options set.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
            type: object
        DisplayName:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: DisplayName
            type: string
        ETag:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: ETag
            type: string
        Email:
            $schema: https://json-schema.org/draft/2020-12/schema
            example: john.smith@acme.org
            format: email
            title: Email
            type: string
        EncodingType:
            $schema: https://json-schema.org/draft/2020-12/schema
            enum:
                - url
            title: EncodingType
            type: string
        Error:
            $schema: https://json-schema.org/draft/2020-12/schema
            additionalProperties: false
            description: For HTTP errors, we implement the https://datatracker.ietf.org/doc/html/rfc9457
            examples:
                - accounts:
                    - /account/12345
                    - /account/67890
                  balance: 30
                  detail: Your current balance is 30, but that costs 50.
                  instance: /account/12345/msgs/abc
                  title: You do not have enough credit.
                  type: https://portal.api.numspot.com/errors#unauthenticated_access
            properties:
                detail:
                    description: Human-readable explanation specific to this occurrence of the problem.
                    type: string
                instance:
                    $ref: '#/components/schemas/Url'
                    description: Url to fetch more information about this problem type.
                title:
                    description: Human-readable summary of the problem type.
                    type: string
                type:
                    $ref: '#/components/schemas/ErrorDocumentationUrl'
            required:
                - type
                - title
            title: Error
            type: object
        ErrorBrowserLocationChangeRequired:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                error:
                    $ref: '#/components/schemas/ErrorGeneric'
                redirect_browser_to:
                    description: Points to where to redirect the user to next.
                    type: string
            title: Is sent when a flow requires a browser to change its location.
            type: object
        ErrorDocumentationUrl:
            $schema: https://json-schema.org/draft/2020-12/schema
            additionalProperties: false
            description: Documentation URL for the domain error
            enum:
                - https://portal.api.numspot.com/errors#unauthenticated_access
                - https://portal.api.numspot.com/errors#forbidden_access
                - https://portal.api.numspot.com/errors#invalid_parameter
                - https://portal.api.numspot.com/errors#resource_not_found
                - https://portal.api.numspot.com/errors#duplicate_resource
                - https://portal.api.numspot.com/errors#internal_server_error
                - https://portal.api.numspot.com/errors#ambiguous_granular_permission_elements
                - https://portal.api.numspot.com/errors#ambiguous_permission_elements
                - https://portal.api.numspot.com/errors#ambiguous_role_elements
                - https://portal.api.numspot.com/errors#duplicate_role
                - https://portal.api.numspot.com/errors#forbidden
                - https://portal.api.numspot.com/errors#identity_not_found
                - https://portal.api.numspot.com/errors#inactive_token
                - https://portal.api.numspot.com/errors#method_not_allowed
                - https://portal.api.numspot.com/errors#missing_roles
                - https://portal.api.numspot.com/errors#namespace_not_found
                - https://portal.api.numspot.com/errors#not_in_tenant_roles
                - https://portal.api.numspot.com/errors#permission_not_found
                - https://portal.api.numspot.com/errors#role_not_found
                - https://portal.api.numspot.com/errors#unexpected_token_usage
                - https://portal.api.numspot.com/errors#uri_too_long
            format: uri
            title: ErrorDocumentationUrl
            type: string
        ErrorGeneric:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: The standard  JSON API error format.
            properties:
                error:
                    $ref: '#/components/schemas/GenericError'
            required:
                - error
            title: JSON API Error Response
            type: object
        ErrorOauth2:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                error:
                    description: The error type.
                    type: string
                error_description:
                    description: A human-readable explanation specific to this occurrence of the problem.
                    type: string
            required:
                - error
            title: ErrorOauth2
            type: object
        FlexibleGpu:
            additionalProperties: false
            description: Information about the flexible GPU (fGPU).
            properties:
                availabilityZoneName:
                    description: The Subregion where the fGPU is located.
                    type: string
                deleteOnVmDeletion:
                    description: If true, the fGPU is deleted when the VM is terminated.
                    type: boolean
                generation:
                    description: The compatible processor generation.
                    type: string
                id:
                    description: The ID of the fGPU.
                    type: string
                modelName:
                    description: The model of fGPU.
                    type: string
                state:
                    description: The state of the fGPU (`allocated` \| `attaching` \| `attached` \| `detaching`).
                    type: string
                vmId:
                    description: The ID of the VM the fGPU is attached to, if any.
                    type: string
            type: object
        FlowError:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                created_at:
                    description: CreatedAt is a helper struct field for gobuffalo.pop.
                    format: date-time
                    type: string
                error:
                    type: object
                id:
                    description: ID of the error container.
                    format: uuid
                    type: string
                updated_at:
                    description: UpdatedAt is a helper struct field for gobuffalo.pop.
                    format: date-time
                    type: string
            required:
                - id
            title: Flow Error
            type: object
        GenericError:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                code:
                    description: The status code
                    example: 404
                    format: int64
                    type: integer
                debug:
                    description: |-
                        Debug information

                        This field is often not exposed to protect against leaking
                        sensitive information.
                    example: SQL field "foo" is not a bool.
                    type: string
                details:
                    additionalProperties: false
                    description: Further error details
                    type: object
                id:
                    description: |-
                        The error ID

                        Useful when trying to identify various errors in application logic.
                    type: string
                message:
                    description: |-
                        Error message

                        The error's message.
                    example: The resource could not be found
                    type: string
                reason:
                    description: A human-readable reason for the error
                    example: User with ID 1234 does not exist.
                    type: string
                request:
                    description: |-
                        The request ID

                        The request ID is often exposed internally in order to trace
                        errors across service architectures. This is often a UUID.
                    example: d7ef54b1-ec15-46e6-bccb-524b82c035e6
                    type: string
                status:
                    description: The status description
                    example: Not Found
                    type: string
            required:
                - message
            title: JSON API Error Response
            type: object
        GetObjectOutput:
            $schema: https://json-schema.org/draft/2020-12/schema
            example:
                AcceptRanges: bytes
                ContentLength: "3191"
                ContentType: image/jpeg
                ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
                LastModified: Thu, 15 Dec 2016 01:19:41 GMT
                Metadata: {}
                TagCount: 2
                VersionId: "null"
            properties:
                Body:
                    allOf:
                        - $ref: '#/components/schemas/Body'
                Metadata:
                    allOf:
                        - $ref: '#/components/schemas/Metadata'
                        - xml:
                            name: x-amz-meta-
            title: GetObjectOutput
            type: object
        Gpu:
            $schema: https://json-schema.org/draft/2020-12/schema
            additionalProperties: false
            description: GPU values
            enum:
                - P6
                - P100
                - V100
                - A100-80
            title: GPU
            type: string
        GranularPermission:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                action:
                    description: Type of action (e.g., owners, editors, getters)
                    type: string
                objectId:
                    description: ID of the object
                    type: string
            required:
                - objectId
                - action
            title: GranularPermission
            type: object
        GranularPolicyList:
            $schema: https://json-schema.org/draft/2020-12/schema
            items:
                $ref: '#/components/schemas/GranularPermission'
            title: GranularPolicyList
            type: array
        HealthCheck:
            additionalProperties: false
            description: Information about the health check configuration.
            properties:
                checkInterval:
                    description: The number of seconds between two requests (between `5` and `600` both included).
                    type: integer
                healthyThreshold:
                    description: The number of consecutive successful requests before considering the VM as healthy (between `2` and `10` both included).
                    type: integer
                path:
                    description: If you use the HTTP or HTTPS protocols, the request URL path.
                    type: string
                port:
                    description: The port number (between `1` and `65535`, both included).
                    type: integer
                protocol:
                    description: The protocol for the URL of the VM (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
                    type: string
                timeout:
                    description: The maximum waiting time for a response before considering the VM as unhealthy, in seconds (between `2` and `60` both included).
                    type: integer
                unhealthyThreshold:
                    description: The number of consecutive failed requests before considering the VM as unhealthy (between `2` and `10` both included).
                    type: integer
            required:
                - checkInterval
                - healthyThreshold
                - port
                - protocol
                - timeout
                - unhealthyThreshold
            type: object
        IAMGranularPolicyList:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/PaginatedList'
                - properties:
                    items:
                        items:
                            $ref: '#/components/schemas/GranularPermission'
                        type: array
                  required:
                    - items
                  type: object
            title: IAMGranularPolicyList
            type: object
        IAMPolicy:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                permissions:
                    description: List of permission UUIDs
                    items:
                        allOf:
                            - description: permission ID
                              format: uuid
                              type: string
                    type: array
                roles:
                    description: List of role UUIDs
                    items:
                        allOf:
                            - description: role ID
                              format: uuid
                              type: string
                    type: array
            title: IAMPolicy
            type: object
        ID:
            $schema: https://json-schema.org/draft/2020-12/schema
            format: int64
            title: ID
            type: integer
        IdentitiesIdsList:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                items:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - items
            title: IdentitiesIdsList
            type: object
        Identity:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: An identity represents a (human) user.
            properties:
                created_at:
                    description: CreatedAt is a helper struct field for gobuffalo.pop.
                    format: date-time
                    type: string
                credentials:
                    additionalProperties:
                        $ref: '#/components/schemas/IdentityCredentials'
                    description: Credentials represents all credentials that can be used for authenticating this identity.
                    type: object
                id:
                    description: |-
                        ID is the identity's unique identifier.
                        The Identity ID can not be changed and can not be chosen. This ensures future
                        compatibility and optimization for distributed stores such as CockroachDB.
                    format: uuid
                    type: string
                metadata_admin:
                    $ref: '#/components/schemas/NullJsonRawMessage'
                metadata_public:
                    $ref: '#/components/schemas/NullJsonRawMessage'
                organization_id:
                    $ref: '#/components/schemas/NullUUID'
                recovery_addresses:
                    description: RecoveryAddresses contains all the addresses that can be used to recover an identity.
                    items:
                        $ref: '#/components/schemas/RecoveryIdentityAddress'
                    type: array
                schema_id:
                    description: SchemaID is the ID of the JSON Schema to be used for validating the identity's traits.
                    type: string
                schema_url:
                    description: SchemaURL is the URL of the endpoint where the identity's traits schema can be fetched from.
                    type: string
                state:
                    description: |-
                        State is the identity's state.

                        This value has currently no effect.
                        active StateActive
                        inactive StateInactive
                    enum:
                        - active
                        - inactive
                    type: string
                    x-go-enum-desc: |-
                        active StateActive
                        inactive StateInactive
                state_changed_at:
                    $ref: '#/components/schemas/NullTime'
                traits:
                    $ref: '#/components/schemas/IdentityTraits'
                updated_at:
                    description: UpdatedAt is a helper struct field for gobuffalo.pop.
                    format: date-time
                    type: string
                verifiable_addresses:
                    description: VerifiableAddresses contains all the addresses that can be verified by the user.
                    items:
                        $ref: '#/components/schemas/VerifiableIdentityAddress'
                    type: array
            required:
                - id
                - schema_id
                - schema_url
                - traits
            title: Identity represents an identity
            type: object
        IdentityCredentials:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Credentials represents a specific credential type
            properties:
                config:
                    $ref: '#/components/schemas/JSONRawMessage'
                created_at:
                    description: CreatedAt is a helper struct field for gobuffalo.pop.
                    format: date-time
                    type: string
                identifiers:
                    description: Identifiers represents a list of unique identifiers this credential type matches.
                    items:
                        type: string
                    type: array
                type:
                    description: |-
                        Type discriminates between different types of credentials.
                        password CredentialsTypePassword
                        oidc CredentialsTypeOIDC
                        totp CredentialsTypeTOTP
                        lookup_secret CredentialsTypeLookup
                        webauthn CredentialsTypeWebAuthn
                        code CredentialsTypeCodeAuth
                        link_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.
                        code_recovery CredentialsTypeRecoveryCode
                    enum:
                        - password
                        - oidc
                        - totp
                        - lookup_secret
                        - webauthn
                        - code
                        - link_recovery
                        - code_recovery
                    type: string
                    x-go-enum-desc: |-
                        password CredentialsTypePassword
                        oidc CredentialsTypeOIDC
                        totp CredentialsTypeTOTP
                        lookup_secret CredentialsTypeLookup
                        webauthn CredentialsTypeWebAuthn
                        code CredentialsTypeCodeAuth
                        link_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.
                        code_recovery CredentialsTypeRecoveryCode
                updated_at:
                    description: UpdatedAt is a helper struct field for gobuffalo.pop.
                    format: date-time
                    type: string
                version:
                    description: Version refers to the version of the credential. Useful when changing the config schema.
                    format: int64
                    type: integer
            title: Identity Credentials
            type: object
        IdentityTraits:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Traits represent an identity's traits. The identity is able to create, modify, and delete traits in a self-service manner. The input will always be validated against the JSON Schema defined in `schema_url`.
            title: Identity Traits
        IdentityVerifiableAddressStatus:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: VerifiableAddressStatus must not exceed 16 characters as that is the limitation in the SQL Schema
            title: Identity Verifiable Address Status
            type: string
        Image:
            additionalProperties: false
            description: Information about the OMI.
            properties:
                access:
                    $ref: '#/components/schemas/Access'
                architecture:
                    description: The architecture of the OMI.
                    type: string
                blockDeviceMappings:
                    description: One or more block device mappings.
                    items:
                        $ref: '#/components/schemas/BlockDeviceMappingImage'
                    type: array
                creationDate:
                    description: The date and time of creation of the OMI, in ISO 8601 date-time format.
                    format: date-time
                    type: string
                description:
                    description: The description of the OMI.
                    type: string
                id:
                    description: The ID of the OMI.
                    type: string
                name:
                    description: The name of the OMI.
                    type: string
                productCodes:
                    description: The product codes associated with the OMI.
                    items:
                        type: string
                    type: array
                rootDeviceName:
                    description: The name of the root device.
                    type: string
                rootDeviceType:
                    description: The type of root device used by the OMI (always `bsu`).
                    type: string
                state:
                    description: The state of the OMI (`pending` \| `available` \| `failed`).
                    type: string
                stateComment:
                    $ref: '#/components/schemas/StateComment'
                tags:
                    description: One or more tags associated with the OMI.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                type:
                    description: The type of the OMI.
                    type: string
            type: object
        ImmutableSpace:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                createdOn:
                    $ref: '#/components/schemas/DateTime'
                    description: Space creation date
                id:
                    description: Internal ID
                    format: uuid
                    type: string
                organisationId:
                    description: Organisation_id
                    format: uuid
                    type: string
                status:
                    description: status of the space, the space can only be used when the status is ready.
                    enum:
                        - QUEUED
                        - RUNNING
                        - READY
                        - FAILED
                    type: string
                updatedOn:
                    $ref: '#/components/schemas/DateTime'
                    description: Space last update
            required:
                - id
                - organisationId
                - createdOn
                - updatedOn
                - status
            title: ImmutableSpace
            type: object
        Int:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Equivalent to int32
            format: int32
            maximum: 2147483647
            minimum: -2147483648
            title: Int
            type: integer
        InternetGateway:
            additionalProperties: false
            description: Information about the Internet gateway.
            properties:
                id:
                    description: The ID of the Internet gateway.
                    type: string
                state:
                    description: The state of the attachment of the Internet gateway to the Vpc (always `available`).
                    type: string
                tags:
                    description: One or more tags associated with the Internet gateway.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                vpcId:
                    description: The ID of the Vpc attached to the Internet gateway.
                    type: string
            type: object
        IntrospectResp:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                active:
                    description: A boolean value indicating whether the token is active or not.
                    type: boolean
                aud:
                    description: The intended audience of the token, specifying who the token is intended for.
                    items:
                        type: string
                    type: array
                client_id:
                    description: The unique identifier of the client application that requested the token.
                    type: string
                exp:
                    description: The expiration time of the token in seconds since the Unix epoch.
                    type: integer
                iat:
                    description: The issued-at time of the token in seconds since the Unix epoch.
                    type: integer
                iss:
                    description: The issuer of the token, identify the authorization server that issued the token.
                    type: string
                nbf:
                    description: The not-before time of the token in seconds since the Unix epoch, indicating the earliest time the token can be used.
                    type: integer
                scope:
                    description: The scope of the token, defining the permissions it grants.
                    type: string
                sub:
                    description: The subject of the token, typically the user or resource the token is issued for.
                    type: string
                token_type:
                    description: Indicate the type of the token, such as "Bearer".
                    type: string
                token_use:
                    description: Specify the intended use of the token, such as "access" or "refresh".
                    type: string
            required:
                - active
            title: IntrospectResp
            type: object
        InvalidObjectState:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: InvalidObjectState
        IsRestoreInProgress:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: IsRestoreInProgress
            type: boolean
        IsTruncated:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: IsTruncated
            type: boolean
        JSONRawMessage:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: JSONRawMessage represents a json.RawMessage that works well with JSON, SQL, and Swagger.
            title: JSON Raw Message
            type: object
        JsonWebKey:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                alg:
                    description: The "alg" (algorithm) parameter identifies the algorithm intended for use with the key.  The values used should either be registered in the IANA "JSON Web Signature and Encryption Algorithms" registry established by [JWA] or be a value that contains a Collision-Resistant Name.
                    example: RS256
                    type: string
                crv:
                    example: P-256
                    type: string
                d:
                    type: string
                dp:
                    type: string
                dq:
                    type: string
                e:
                    type: string
                k:
                    type: string
                kid:
                    description: The "kid" (key ID) parameter is used to match a specific key. This is used, for instance, to choose among a set of keys within a JWK Set during key rollover.  The structure of the "kid" value is unspecified. When "kid" values are used within a JWK Set, different keys within the JWK Set SHOULD use distinct "kid" values. (One example in which different keys might use the same "kid" value is if they have different "kty" (key type) values but are considered to be equivalent alternatives by the application using them.)  The "kid" value is a case-sensitive string.
                    type: string
                kty:
                    description: The "kty" parameter in JSON Web Keys (JWK) specifies the cryptographic algorithm family,such as "RSA" or "EC". It must be a case-sensitive string and is required in a JWK. The value should be registered in the IANA "JSON Web Key Types" registry or be a Collision-Resistant Name
                    type: string
                "n":
                    type: string
                p:
                    type: string
                q:
                    type: string
                qi:
                    type: string
                use:
                    description: Use ("public key use") identifies the intended use of the public key. The "use" parameter is employed to indicate whether a public key is used for encrypting data or verifying the signature on data. Values are commonly "sig" (signature) or "enc" (encryption).
                    example: sig
                    type: string
                x:
                    type: string
                x5c:
                    description: The "x5c" parameter in JSON Web Keys (JWK) includes a chain of one or more PKIX certificates, represented as a JSON array of base64-encoded DER certificate values. The first certificate must contain the key value and must match the public key represented by other JWK members. Additional certificates can follow, with each certifying the previous one. This parameter is optional.
                    items:
                        type: string
                    type: array
                "y":
                    type: string
            required:
                - use
                - kty
                - kid
                - alg
            title: JsonWebKey
            type: object
        JsonWebKeySet:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: JSON Web Key Set
            properties:
                keys:
                    description: List of JSON Web Keys The value of the "keys" parameter is an array of JSON Web Key (JWK) values. By default, the order of the JWK values within the array does not imply an order of preference among them, although applications  of JWK Sets can choose to assign a meaning to the order for their  purposes, if desired.
                    items:
                        $ref: '#/components/schemas/JsonWebKey'
                    type: array
            title: Json Web Key Set
            type: object
        Keypair:
            additionalProperties: false
            description: Information about the keypair.
            properties:
                fingerprint:
                    description: The MD5 public key fingerprint as specified in section 4 of RFC 4716.
                    type: string
                name:
                    description: The name of the keypair.
                    type: string
                type:
                    description: The type of the keypair (`ssh-rsa`, `ssh-ed25519`, `ecdsa-sha2-nistp256`, `ecdsa-sha2-nistp384`, or `ecdsa-sha2-nistp521`).
                    type: string
            type: object
        KubernetesBinaryContent:
            $schema: https://json-schema.org/draft/2020-12/schema
            format: binary
            title: BinaryContent
            type: string
        KubernetesCluster:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                adminBastionPublicIP:
                    description: admin bastion public ip
                    type: string
                cidr:
                    description: The IP network mask handling by the cluster
                    format: cidr
                    type: string
                clientBastionPublicIP:
                    description: client bastion public ip
                    type: string
                createdAt:
                    format: date-time
                    type: string
                description:
                    description: Sample description of the cluster given by the user
                    type: string
                id:
                    description: the id of the cluster
                    format: uuid
                    type: string
                ingressPublicURL:
                    description: ingress public url
                    type: string
                name:
                    description: the name of the cluster
                    pattern: ^(?=.{1,64}$)(?!.*[-_]{2})[A-Za-z0-9](?:\w|-)*[A-Za-z0-9]$
                    type: string
                nodePools:
                    items:
                        $ref: '#/components/schemas/KubernetesNodePool'
                    type: array
                operationId:
                    description: Identifier of the given operation
                    format: uuid
                    type: string
                selfLink:
                    description: the URL that allow you to retrieve cluster information
                    type: string
                spaceId:
                    description: the spaceID of the cluster
                    format: uuid
                    type: string
                status:
                    type: string
                tags:
                    items:
                        $ref: '#/components/schemas/KubernetesTag'
                    type: array
                updatedAt:
                    format: date-time
                    type: string
                urls:
                    description: the available urls for the current cluster
                    items:
                        $ref: '#/components/schemas/KubernetesUrl'
                    type: array
                version:
                    description: Kubernetes version want on all nodes
                    enum:
                        - 1.29.5
                        - 1.28.10
                        - 1.27.14
                    format: semver
                    type: string
            required:
                - id
                - name
                - description
                - adminBastionPublicIP
                - clientBastionPublicIP
                - ingressPublicURL
                - urls
                - selfLink
                - version
                - nodePools
                - operationId
                - cidr
                - tags
                - createdAt
                - updatedAt
            title: Cluster
            type: object
        KubernetesClusterConfiguration:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                cidr:
                    format: cidr
                    pattern: ^\d{1,3}(\.\d{1,3}){3}/\d{1,2}$
                    type: string
                name:
                    description: the name of the cluster
                    maximum: 64
                    minimum: 3
                    pattern: ^([A-Za-z0-9](?:[A-Za-z0-9]|[-_][^-_])*[A-Za-z0-9])$
                    type: string
                nodeCount:
                    description: The number of worker with given profile you want in your cluster initialization
                    format: int
                    maximum: 100
                    minimum: 1
                    type: integer
                nodeProfile:
                    $ref: '#/components/schemas/KubernetesNodeProfileName'
                version:
                    enum:
                        - 1.29.5
                        - 1.28.10
                        - 1.27.14
                    format: semver
                    type: string
            required:
                - name
                - version
                - nodeProfile
                - nodeCount
                - cidr
            title: ClusterConfiguration
            type: object
        KubernetesListClusters:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                instances:
                    items:
                        $ref: '#/components/schemas/KubernetesCluster'
                    type: array
                nextPageToken:
                    description: token used to retrieve the next page
                    type: string
                selfLink:
                    description: the URL that allow you to retrieve cluster information
                    type: string
                totalSize:
                    description: total number of items
                    type: integer
            required:
                - instances
            title: Cluster
            type: object
        KubernetesNodeOrder:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                nodeCount:
                    description: the number of worker you want add in your cluster when was correctly setup
                    format: int
                    maximum: 100
                    minimum: 1
                    type: integer
                nodeProfile:
                    $ref: '#/components/schemas/KubernetesNodeProfileName'
                target:
                    description: Identity the URL that allow to get information of the processing resource
                    format: uri
                    type: string
                version:
                    description: The version of the node to add
                    type: string
            required:
                - nodeProfile
                - nodeCount
                - target
                - version
            title: NodeOrder
            type: object
        KubernetesNodePool:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                gpuType:
                    description: if node profile contains gpu, it indicate which specific GPU is instanciated
                    enum:
                        - P6
                        - P100
                        - V100
                        - A100-80
                    type: string
                kubernetesVersion:
                    description: Kubernetes version want on all nodes into this node pool
                    format: semver
                    type: string
                name:
                    description: the name of the node pool
                    pattern: ^\w{3,64}$
                    type: string
                nodeCount:
                    description: number of node/worker containing into this node pool
                    type: integer
                nodeProfile:
                    $ref: '#/components/schemas/KubernetesNodeProfile'
            required:
                - name
                - nodeCount
                - kubernetesVersion
                - nodeProfile
            title: NodePool
            type: object
        KubernetesNodeProfile:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                cpu:
                    description: amount of vCPU allocated
                    type: integer
                memory:
                    description: amount of memory (RAM) allocated, express in Gio
                    type: integer
                name:
                    description: the name of the node profile
                    type: string
            required:
                - name
                - memory
                - cpu
            title: NodeProfile
            type: object
        KubernetesNodeProfileName:
            $schema: https://json-schema.org/draft/2020-12/schema
            additionalProperties: false
            description: The profile defined the size and caracteristic the created worker will be
            enum:
                - verysmall
                - small
                - medium
                - mediumgpu
                - large
            title: KubernetesNodeProfileName
            type: string
        KubernetesNodeRemoval:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                nodeProfile:
                    description: type of node profile wanted to remove
                    enum:
                        - verysmall
                        - small
                        - medium
                        - large
                        - mediumgpu
                    type: string
            required:
                - nodeProfile
            title: NodeRemoval
            type: object
        KubernetesNodeUpgrade:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                target:
                    description: Identity the URL that allow to get information of the processing resource
                    format: uri
                    type: string
                version:
                    description: Targeted Kubernetes version to upgrade
                    enum:
                        - 1.29.5
                        - 1.28.10
                        - 1.27.14
                    format: semver
                    type: string
            required:
                - version
                - target
            title: NodeUpgrade
            type: object
        KubernetesOperation:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                clusterid:
                    description: unique id of a cluster
                    format: uuid
                    type: string
                createdAt:
                    description: The date when the operation was accepted to be treated
                    format: date-time
                    type: string
                endedAt:
                    description: The date operation was terminated as DONE or FAILED status
                    format: date-time
                    type: string
                error:
                    description: error description that the operation encounter if the operation FAIL
                    type: string
                id:
                    description: Identifier of the given operation
                    format: uuid
                    type: string
                operationType:
                    $ref: '#/components/schemas/KubernetesOperationType'
                progress:
                    description: The progression of the current operation
                    type: string
                selfLink:
                    description: URL that identified the current operation
                    format: uri
                    type: string
                startedAt:
                    description: The date time that the operation was handle by a runner and then have status operation at least `RUNNING` state
                    format: date-time
                    type: string
                status:
                    description: Current state of the operation
                    enum:
                        - PENDING
                        - RUNNING
                        - FAILED
                        - DONE
                    type: string
                target:
                    description: Identity the URL that allow to get information of the processing resource
                    format: uri
                    type: string
                targetName:
                    description: The name of the cluster
                    type: string
            required:
                - id
                - status
                - operationType
                - progress
                - selfLink
                - target
                - createdAt
            title: Operation
            type: object
        KubernetesOperationType:
            $schema: https://json-schema.org/draft/2020-12/schema
            additionalProperties: false
            description: The type of operation, refer to the domain action involve changes on targeted resources
            enum:
                - CreateCluster
                - DeleteCluster
                - AddWorker
                - UpgradeMasters
                - UpgradeWorkers
                - RemoveWorker
                - UpdateWorker
            title: KubernetesOperationType
            type: string
        KubernetesStatus:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                name:
                    description: The name of the cluster
                    type: string
                status:
                    description: Current status of the cluster
                    enum:
                        - CONNECTED
                        - DISCONNECTED
                    type: string
            required:
                - name
                - status
            title: Status
            type: object
        KubernetesTag:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                key:
                    description: key of the tag
                    type: string
                value:
                    description: value of the tag
                    type: string
            required:
                - key
                - value
            title: Tag
            type: object
        KubernetesUrl:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                api:
                    description: the corresponding url api
                    type: string
            required:
                - api
            title: Url
            type: object
        LastModified:
            $schema: https://json-schema.org/draft/2020-12/schema
            format: date-time
            title: LastModified
            type: string
        LinkFlexibleGpu:
            additionalProperties: false
            properties:
                vmId:
                    description: The ID of the VM you want to attach the fGPU to.
                    type: string
            required:
                - vmId
            type: object
        LinkInternetGateway:
            additionalProperties: false
            properties:
                vpcId:
                    description: The ID of the Vpc to which you want to attach the Internet gateway.
                    type: string
            required:
                - vpcId
            type: object
        LinkLoadBalancerBackendMachines:
            additionalProperties: false
            properties:
                backendIps:
                    description: ' One or more public IPs of back-end VMs.'
                    items:
                        type: string
                    type: array
                backendVmIds:
                    description: ' One or more IDs of back-end VMs.'
                    items:
                        type: string
                    type: array
            type: object
        LinkNic:
            additionalProperties: false
            description: Information about the NIC attachment.
            properties:
                deleteOnVmDeletion:
                    description: If true, the NIC is deleted when the VM is terminated.
                    type: boolean
                deviceNumber:
                    description: The device index for the NIC attachment (between `1` and `7`, both included).
                    type: integer
                id:
                    description: The ID of the NIC to attach.
                    type: string
                state:
                    description: The state of the attachment (`attaching` \| `attached` \| `detaching` \| `detached`).
                    type: string
                vmId:
                    description: The ID of the VM.
                    type: string
            type: object
        LinkNicLight:
            additionalProperties: false
            description: Information about the network interface card (NIC).
            properties:
                deleteOnVmDeletion:
                    description: If true, the NIC is deleted when the VM is terminated.
                    type: boolean
                deviceNumber:
                    description: The device index for the NIC attachment (between `1` and `7`, both included).
                    type: integer
                linkNicId:
                    description: The ID of the NIC to attach.
                    type: string
                state:
                    description: The state of the attachment (`attaching` \| `attached` \| `detaching` \| `detached`).
                    type: string
            type: object
        LinkNicToUpdate:
            additionalProperties: false
            description: Information about the NIC attachment. If you are modifying the `DeleteOnVmDeletion` attribute, you must specify the ID of the NIC attachment.
            properties:
                deleteOnVmDeletion:
                    description: If true, the NIC is deleted when the VM is terminated. If false, the NIC is detached from the VM.
                    type: boolean
                linkNicId:
                    description: The ID of the NIC attachment.
                    type: string
            type: object
        LinkPrivateIps:
            additionalProperties: false
            properties:
                allowRelink:
                    description: If true, allows an IP that is already assigned to another NIC in the same Subnet to be assigned to the NIC you specified.
                    type: boolean
                privateIps:
                    description: The secondary private IP or IPs you want to assign to the NIC within the IP range of the Subnet.
                    items:
                        type: string
                    type: array
                secondaryPrivateIpCount:
                    description: The number of secondary private IPs to assign to the NIC.
                    type: integer
            type: object
        LinkPublicIp:
            additionalProperties: false
            description: Information about the public IP association.
            properties:
                id:
                    description: (Required in a Vpc) The ID representing the association of the public IP with the VM or the NIC.
                    type: string
                publicDnsName:
                    description: The name of the public DNS.
                    type: string
                publicIp:
                    description: The public IP associated with the NIC.
                    type: string
                publicIpId:
                    description: The allocation ID of the public IP.
                    type: string
            type: object
        LinkPublicIpLightForVm:
            additionalProperties: false
            description: Information about the public IP associated with the NIC.
            properties:
                publicDnsName:
                    description: The name of the public DNS.
                    type: string
                publicIp:
                    description: The public IP associated with the NIC.
                    type: string
            type: object
        LinkRouteTable:
            additionalProperties: false
            description: One or more associations between the route table and the Subnets.
            properties:
                id:
                    description: The ID of the association between the route table and the Subnet.
                    type: string
                main:
                    description: If true, the route table is the main one.
                    type: boolean
                routeTableId:
                    description: The ID of the route table.
                    type: string
                subnetId:
                    description: The ID of the Subnet.
                    type: string
                vpcId:
                    description: The ID of the Vpc.
                    type: string
            type: object
        LinkVirtualGatewayToVpc:
            additionalProperties: false
            properties:
                vpcToVirtualGatewayLink:
                    $ref: '#/components/schemas/VpcToVirtualGatewayLink'
            type: object
        LinkVolume:
            additionalProperties: false
            properties:
                deviceName:
                    description: The name of the device. For a root device, you must use `/dev/sda1`. For other volumes, you must use `/dev/sdX`, `/dev/sdXX`, `/dev/xvdX`, or `/dev/xvdXX` (where the first `X` is a letter between `b` and `z`, and the second `X` is a letter between `a` and `z`).
                    type: string
                vmId:
                    description: The ID of the VM you want to attach the volume to.
                    type: string
            required:
                - deviceName
                - vmId
            type: object
        LinkedVolume:
            additionalProperties: false
            description: Information about volume attachment.
            properties:
                deleteOnVmDeletion:
                    description: If true, the volume is deleted when terminating the VM. If false, the volume is not deleted when terminating the VM.
                    type: boolean
                deviceName:
                    description: The name of the device.
                    type: string
                id:
                    description: The ID of the volume.
                    type: string
                state:
                    description: The state of the attachment of the volume (`attaching` \| `detaching` \| `attached` \| `detached`).
                    type: string
                vmId:
                    description: The ID of the VM.
                    type: string
            type: object
        ListBucketsOutput:
            $schema: https://json-schema.org/draft/2020-12/schema
            example:
                Buckets:
                    - CreationDate: "2012-02-15T21:03:02.000Z"
                      Name: examplebucket
                    - CreationDate: "2011-07-24T19:33:50.000Z"
                      Name: examplebucket2
                    - CreationDate: "2010-12-17T00:56:49.000Z"
                      Name: examplebucket3
                Owner:
                    DisplayName: own-display-name
                    ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31
            properties:
                Buckets:
                    allOf:
                        - $ref: '#/components/schemas/Buckets'
                Owner:
                    allOf:
                        - $ref: '#/components/schemas/Owner'
            title: ListBucketsOutput
            type: object
        ListClusters:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                items:
                    items:
                        $ref: '#/components/schemas/OpenShiftCluster'
                    type: array
                totalSize:
                    type: integer
            title: List Clusters
            type: object
        ListNodepools:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                items:
                    items:
                        $ref: '#/components/schemas/OpenShiftNodepool'
                    type: array
                totalSize:
                    type: integer
            title: Node Pools List
            type: object
        ListObjectsOutput:
            $schema: https://json-schema.org/draft/2020-12/schema
            example:
                Contents:
                    - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
                      Key: example1.jpg
                      LastModified: "2014-11-21T19:40:05.000Z"
                      Owner:
                        DisplayName: myname
                        ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
                      Size: 11
                      StorageClass: STANDARD
                    - ETag: '"9c8af9a76df052144598c115ef33e511"'
                      Key: example2.jpg
                      LastModified: "2013-11-15T01:10:49.000Z"
                      Owner:
                        DisplayName: myname
                        ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
                      Size: 713193
                      StorageClass: STANDARD
                NextMarker: eyJNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ==
            properties:
                CommonPrefixes:
                    allOf:
                        - $ref: '#/components/schemas/CommonPrefixList'
                Contents:
                    allOf:
                        - $ref: '#/components/schemas/ObjectList'
                Delimiter:
                    allOf:
                        - $ref: '#/components/schemas/Delimiter'
                EncodingType:
                    allOf:
                        - $ref: '#/components/schemas/EncodingType'
                IsTruncated:
                    allOf:
                        - $ref: '#/components/schemas/IsTruncated'
                Marker:
                    allOf:
                        - $ref: '#/components/schemas/Marker'
                MaxKeys:
                    allOf:
                        - $ref: '#/components/schemas/MaxKeys'
                Name:
                    allOf:
                        - $ref: '#/components/schemas/BucketName'
                NextMarker:
                    allOf:
                        - $ref: '#/components/schemas/NextMarker'
                Prefix:
                    allOf:
                        - $ref: '#/components/schemas/Prefix'
            title: ListObjectOutput
            type: object
        ListVersions:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                items:
                    items:
                        $ref: '#/components/schemas/OpenShiftVersion'
                    type: array
                totalSize:
                    type: integer
            title: List Versions
            type: object
        Listener:
            additionalProperties: false
            description: Information about the listener.
            properties:
                backendPort:
                    description: The port on which the back-end VM is listening (between `1` and `65535`, both included).
                    type: integer
                backendProtocol:
                    description: The protocol for routing traffic to back-end VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
                    type: string
                loadBalancerPort:
                    description: The port on which the load balancer is listening (between `1` and `65535`, both included).
                    type: integer
                loadBalancerProtocol:
                    description: The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
                    type: string
                policyNames:
                    description: The names of the policies. If there are no policies enabled, the list is empty.
                    items:
                        type: string
                    type: array
                serverCertificateId:
                    description: The NumSpot Resource Name of the server certificate.
                    type: string
            type: object
        ListenerForCreation:
            additionalProperties: false
            description: Information about the listener to create.
            properties:
                backendPort:
                    description: The port on which the back-end VM is listening (between `1` and `65535`, both included).
                    type: integer
                backendProtocol:
                    description: The protocol for routing traffic to back-end VMs (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
                    type: string
                loadBalancerPort:
                    description: The port on which the load balancer is listening (between `1` and `65535`, both included).
                    type: integer
                loadBalancerProtocol:
                    description: The routing protocol (`HTTP` \| `HTTPS` \| `TCP` \| `SSL`).
                    type: string
                serverCertificateId:
                    description: The server certificate orn
                    type: string
            required:
                - backendPort
                - loadBalancerPort
                - loadBalancerProtocol
            type: object
        ListenerRule:
            additionalProperties: false
            description: Information about the listener rule.
            properties:
                action:
                    description: The type of action for the rule (always `forward`).
                    type: string
                hostNamePattern:
                    description: A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?].
                    type: string
                id:
                    description: The ID of the listener rule.
                    type: integer
                listenerId:
                    description: The ID of the listener.
                    type: integer
                name:
                    description: A human-readable name for the listener rule.
                    type: string
                pathPattern:
                    description: A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?].
                    type: string
                priority:
                    description: The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
                    type: integer
                vmIds:
                    description: The IDs of the backend VMs.
                    items:
                        type: string
                    type: array
            type: object
        ListenerRuleForCreation:
            additionalProperties: false
            description: Information about the listener rule.
            properties:
                action:
                    description: The type of action for the rule (always `forward`).
                    type: string
                hostNamePattern:
                    description: 'A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?]. '
                    type: string
                listenerRuleName:
                    description: A human-readable name for the listener rule.
                    type: string
                pathPattern:
                    description: A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?].
                    type: string
                priority:
                    description: The priority level of the listener rule, between `1` and `19999` both included. Each rule must have a unique priority level. Otherwise, an error is returned.
                    type: integer
            required:
                - listenerRuleName
                - priority
            type: object
        LoadBalancer:
            additionalProperties: false
            description: Information about the load balancer.
            properties:
                applicationStickyCookiePolicies:
                    description: The stickiness policies defined for the load balancer.
                    items:
                        $ref: '#/components/schemas/ApplicationStickyCookiePolicy'
                    type: array
                availabilityZoneNames:
                    description: The ID of the Subregion in which the load balancer was created.
                    items:
                        type: string
                    type: array
                backendIps:
                    description: One or more public IPs of back-end VMs.
                    items:
                        type: string
                    type: array
                backendVmIds:
                    description: One or more IDs of back-end VMs for the load balancer.
                    items:
                        type: string
                    type: array
                dnsName:
                    description: The DNS name of the load balancer.
                    type: string
                healthCheck:
                    $ref: '#/components/schemas/HealthCheck'
                listeners:
                    description: The listeners for the load balancer.
                    items:
                        $ref: '#/components/schemas/Listener'
                    type: array
                name:
                    description: The name of the load balancer.
                    type: string
                publicIp:
                    description: (internet-facing only) The public IP associated with the load balancer.
                    type: string
                securedCookies:
                    description: Whether secure cookies are enabled for the load balancer.
                    type: boolean
                securityGroups:
                    description: One or more IDs of security groups for the load balancers. Valid only for load balancers in a Vpc.
                    items:
                        type: string
                    type: array
                sourceSecurityGroup:
                    $ref: '#/components/schemas/SourceSecurityGroup'
                stickyCookiePolicies:
                    description: The policies defined for the load balancer.
                    items:
                        $ref: '#/components/schemas/LoadBalancerStickyCookiePolicy'
                    type: array
                subnets:
                    description: The ID of the Subnet in which the load balancer was created.
                    items:
                        type: string
                    type: array
                tags:
                    description: One or more tags associated with the load balancer.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                type:
                    description: |-
                        The type of load balancer. Valid only for load balancers in a Vpc.<br />
                        If `LoadBalancerType` is `internet-facing`, the load balancer has a public DNS name that resolves to a public IP.<br />
                        If `LoadBalancerType` is `internal`, the load balancer has a public DNS name that resolves to a private IP.
                    type: string
                vpcId:
                    description: The ID of the Vpc for the load balancer.
                    type: string
            type: object
        LoadBalancerLight:
            additionalProperties: false
            description: Information about the load balancer.
            properties:
                loadBalancerName:
                    description: The name of the load balancer to which the listener is attached.
                    type: string
                loadBalancerPort:
                    description: The port of load balancer on which the load balancer is listening (between `1` and `65535` both included).
                    type: integer
            required:
                - loadBalancerName
                - loadBalancerPort
            type: object
        LoadBalancerStickyCookiePolicy:
            additionalProperties: false
            description: Information about the stickiness policy.
            properties:
                cookieExpirationPeriod:
                    description: |-
                        The time period, in seconds, after which the cookie should be considered stale.<br />
                        If `1`, the stickiness session lasts for the duration of the browser session.
                    type: integer
                policyName:
                    description: The name of the stickiness policy.
                    type: string
            type: object
        LoadBalancerTag:
            additionalProperties: false
            description: Information about the load balancer tag.
            properties:
                key:
                    description: The key of the tag.
                    type: string
                name:
                    description: The name of the load balancer.
                    type: string
                value:
                    description: The value of the tag.
                    type: string
            type: object
        LoginFlow:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: |-
                This object represents a login flow. A login flow is initiated at the "Initiate Login API / Browser Flow"
                endpoint by a client.

                Once a login flow is completed successfully, a session cookie or session token will be issued.
            properties:
                active:
                    description: |-
                        The active login method

                        If set contains the login method used. If the flow is new, it is unset.
                        password CredentialsTypePassword
                        oidc CredentialsTypeOIDC
                        totp CredentialsTypeTOTP
                        lookup_secret CredentialsTypeLookup
                        webauthn CredentialsTypeWebAuthn
                        code CredentialsTypeCodeAuth
                        link_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.
                        code_recovery CredentialsTypeRecoveryCode
                    enum:
                        - password
                        - oidc
                        - totp
                        - lookup_secret
                        - webauthn
                        - code
                        - link_recovery
                        - code_recovery
                    type: string
                    x-go-enum-desc: |-
                        password CredentialsTypePassword
                        oidc CredentialsTypeOIDC
                        totp CredentialsTypeTOTP
                        lookup_secret CredentialsTypeLookup
                        webauthn CredentialsTypeWebAuthn
                        code CredentialsTypeCodeAuth
                        link_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.
                        code_recovery CredentialsTypeRecoveryCode
                created_at:
                    description: CreatedAt is a helper struct field for gobuffalo.pop.
                    format: date-time
                    type: string
                expires_at:
                    description: |-
                        ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in,
                        a new flow has to be initiated.
                    format: date-time
                    type: string
                id:
                    description: |-
                        ID represents the flow's unique ID. When performing the login flow, this
                        represents the id in the login UI's query parameter: http://<selfservice.flows.login.ui_url>/?flow=<flow_id>
                    format: uuid
                    type: string
                issued_at:
                    description: IssuedAt is the time (UTC) when the flow started.
                    format: date-time
                    type: string
                oauth2_login_challenge:
                    type: string
                oauth2_login_request:
                    $ref: '#/components/schemas/OAuth2LoginRequest'
                organization_id:
                    $ref: '#/components/schemas/NullUUID'
                refresh:
                    description: Refresh stores whether this login flow should enforce re-authentication.
                    type: boolean
                request_url:
                    description: |-
                        RequestURL is the initial URL that was requested. It can be used
                        to forward information contained in the URL's path or query for example.
                    type: string
                requested_aal:
                    $ref: '#/components/schemas/AuthenticatorAssuranceLevel'
                return_to:
                    description: ReturnTo contains the requested return_to URL.
                    type: string
                session_token_exchange_code:
                    description: |-
                        SessionTokenExchangeCode holds the secret code that the client can use to retrieve a session token after the login flow has been completed.
                        This is only set if the client has requested a session token exchange code, and if the flow is of type "api",
                        and only on creating the login flow.
                    type: string
                state:
                    description: |-
                        State represents the state of this request:

                        choose_method: ask the user to choose a method to sign in with
                        sent_email: the email has been sent to the user
                        passed_challenge: the request was successful and the login challenge was passed.
                type:
                    $ref: '#/components/schemas/SelfServiceFlowType'
                ui:
                    $ref: '#/components/schemas/UiContainer'
                updated_at:
                    description: UpdatedAt is a helper struct field for gobuffalo.pop.
                    format: date-time
                    type: string
            required:
                - id
                - type
                - expires_at
                - issued_at
                - request_url
                - ui
                - state
            title: Login Flow
            type: object
        LogoutFlow:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Logout Flow
            properties:
                logout_token:
                    description: LogoutToken can be used to perform logout using AJAX.
                    type: string
                logout_url:
                    description: |-
                        LogoutURL can be opened in a browser to sign the user out.

                        format: uri
                    type: string
            required:
                - logout_url
                - logout_token
            title: Logout Flow
            type: object
        MaintenanceEvent:
            additionalProperties: false
            description: Information about the maintenance event.
            properties:
                code:
                    description: The code of the event (`system-reboot` \| `system-maintenance`).
                    type: string
                description:
                    description: The description of the event.
                    type: string
                notAfter:
                    description: The latest scheduled end time for the event.
                    format: date
                    type: string
                notBefore:
                    description: The earliest scheduled start time for the event.
                    format: date
                    type: string
            type: object
        Marker:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: Marker
            type: string
        MaxKeys:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: MaxKeys
            type: integer
        Metadata:
            $schema: https://json-schema.org/draft/2020-12/schema
            additionalProperties:
                $ref: '#/components/schemas/MetadataValue'
            title: Metadata
            type: object
        MetadataValue:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: MetadataValue
            type: string
        MultipartUploadId:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: MultipartUploadId
            type: string
        MutableSpace:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                description:
                    description: Space description
                    format: string
                    maxLength: 300
                    minLength: 1
                    type: string
                name:
                    description: Space name
                    format: string
                    maxLength: 50
                    minLength: 1
                    type: string
            title: MutableSpace
            type: object
        NatGateway:
            additionalProperties: false
            description: Information about the NAT gateway.
            properties:
                id:
                    description: The ID of the NAT gateway.
                    type: string
                publicIps:
                    description: Information about the public IP or IPs associated with the NAT gateway.
                    items:
                        $ref: '#/components/schemas/PublicIpLight'
                    type: array
                state:
                    description: The state of the NAT gateway (`pending` \| `available` \| `deleting` \| `deleted`).
                    type: string
                subnetId:
                    description: The ID of the Subnet in which the NAT gateway is.
                    type: string
                tags:
                    description: One or more tags associated with the NAT gateway.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                vpcId:
                    description: The ID of the Vpc in which the NAT gateway is.
                    type: string
            type: object
        NextMarker:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: NextMarker
            type: string
        Nic:
            additionalProperties: false
            description: Information about the NIC.
            properties:
                availabilityZoneName:
                    description: The Subregion in which the NIC is located.
                    type: string
                description:
                    description: The description of the NIC.
                    type: string
                id:
                    description: The ID of the NIC.
                    type: string
                isSourceDestChecked:
                    description: (Vpc only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Vpc.
                    type: boolean
                linkNic:
                    $ref: '#/components/schemas/LinkNic'
                linkPublicIp:
                    $ref: '#/components/schemas/LinkPublicIp'
                macAddress:
                    description: The Media Access Control (MAC) address of the NIC.
                    type: string
                privateDnsName:
                    description: The name of the private DNS.
                    type: string
                privateIps:
                    description: The private IPs of the NIC.
                    items:
                        $ref: '#/components/schemas/PrivateIp'
                    type: array
                securityGroups:
                    description: One or more IDs of security groups for the NIC.
                    items:
                        $ref: '#/components/schemas/SecurityGroupLight'
                    type: array
                state:
                    description: The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
                    type: string
                subnetId:
                    description: The ID of the Subnet.
                    type: string
                tags:
                    description: One or more tags associated with the NIC.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                vpcId:
                    description: The ID of the Vpc for the NIC.
                    type: string
            type: object
        NicForVmCreation:
            additionalProperties: false
            description: Information about the network interface card (NIC) when creating a virtual machine (VM).
            properties:
                deleteOnVmDeletion:
                    description: If true, the NIC is deleted when the VM is terminated. You can specify this parameter only for a new NIC. To modify this value for an existing NIC, see [UpdateNic](#updatenic).
                    type: boolean
                description:
                    description: The description of the NIC, if you are creating a NIC when creating the VM.
                    type: string
                deviceNumber:
                    description: The index of the VM device for the NIC attachment (between `0` and `7`, both included). This parameter is required if you create a NIC when creating the VM.
                    type: integer
                nicId:
                    description: The ID of the NIC, if you are attaching an existing NIC when creating a VM.
                    type: string
                privateIps:
                    description: One or more private IPs to assign to the NIC, if you create a NIC when creating a VM. Only one private IP can be the primary private IP.
                    items:
                        $ref: '#/components/schemas/PrivateIpLight'
                    type: array
                secondaryPrivateIpCount:
                    description: The number of secondary private IPs, if you create a NIC when creating a VM. This parameter cannot be specified if you specified more than one private IP in the `PrivateIps` parameter.
                    type: integer
                securityGroupIds:
                    description: One or more IDs of security groups for the NIC, if you create a NIC when creating a VM.
                    items:
                        type: string
                    type: array
                subnetId:
                    description: The ID of the Subnet for the NIC, if you create a NIC when creating a VM. This parameter is required if you create a NIC when creating the VM.
                    type: string
            type: object
        NicLight:
            additionalProperties: false
            description: Information about the network interface card (NIC).
            properties:
                description:
                    description: The description of the NIC.
                    type: string
                isSourceDestChecked:
                    description: (Vpc only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Vpc.
                    type: boolean
                linkNic:
                    $ref: '#/components/schemas/LinkNicLight'
                linkPublicIp:
                    $ref: '#/components/schemas/LinkPublicIpLightForVm'
                macAddress:
                    description: The Media Access Control (MAC) address of the NIC.
                    type: string
                nicId:
                    description: The ID of the NIC.
                    type: string
                privateDnsName:
                    description: The name of the private DNS.
                    type: string
                privateIps:
                    description: The private IP or IPs of the NIC.
                    items:
                        $ref: '#/components/schemas/PrivateIpLightForVm'
                    type: array
                securityGroups:
                    description: One or more IDs of security groups for the NIC.
                    items:
                        $ref: '#/components/schemas/SecurityGroupLight'
                    type: array
                state:
                    description: The state of the NIC (`available` \| `attaching` \| `in-use` \| `detaching`).
                    type: string
                subnetId:
                    description: The ID of the Subnet for the NIC.
                    type: string
                vpcId:
                    description: The ID of the Vpc for the NIC.
                    type: string
            type: object
        NoSuchBucket:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: NoSuchBucket
        NoSuchKey:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: NoSuckKey
        NoSuchUpload:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: NoSuchUpload
        NodeProfile:
            $schema: https://json-schema.org/draft/2020-12/schema
            additionalProperties: false
            description: Node profiles
            enum:
                - SMALL
                - MEDIUM
                - LARGE
                - VERY_LARGE
            title: NodeProfile
            type: string
        NullJsonRawMessage:
            $schema: https://json-schema.org/draft/2020-12/schema
            nullable: true
            title: Null Json RawMessage
        NullTime:
            $schema: https://json-schema.org/draft/2020-12/schema
            format: date-time
            nullable: true
            title: Null Time
            type: string
        NullUUID:
            $schema: https://json-schema.org/draft/2020-12/schema
            format: uuid4
            nullable: true
            title: Null UUID
            type: string
        OAuth2Client:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: OAuth2Client OAuth 2.0 Clients are used to perform OAuth 2.0 and OpenID Connect flows. Usually, OAuth 2.0 clients are generated for applications which want to consume your OAuth 2.0 or OpenID Connect capabilities.
            properties:
                access_token_strategy:
                    description: OAuth 2.0 Access Token Strategy  AccessTokenStrategy is the strategy used to generate access tokens. Valid options are `jwt` and `opaque`. `jwt` is a bad idea.
                    type: string
                allowed_cors_origins:
                    items:
                        type: string
                    type: array
                audience:
                    items:
                        type: string
                    type: array
                authorization_code_grant_access_token_lifespan:
                    description: Specify a time duration in milliseconds, seconds, minutes, hours.
                    type: string
                authorization_code_grant_id_token_lifespan:
                    description: Specify a time duration in milliseconds, seconds, minutes, hours.
                    type: string
                authorization_code_grant_refresh_token_lifespan:
                    description: Specify a time duration in milliseconds, seconds, minutes, hours.
                    type: string
                backchannel_logout_session_required:
                    description: OpenID Connect Back-Channel Logout Session Required  Boolean value specifying whether the RP requires that a sid (session ID) Claim be included in the Logout Token to identify the RP session with the OP when the backchannel_logout_uri is used. If omitted, the default value is false.
                    type: boolean
                backchannel_logout_uri:
                    description: OpenID Connect Back-Channel Logout URI  RP URL that will cause the RP to log itself out when sent a Logout Token by the OP.
                    type: string
                client_credentials_grant_access_token_lifespan:
                    description: Specify a time duration in milliseconds, seconds, minutes, hours.
                    type: string
                client_id:
                    description: OAuth 2.0 Client ID  The ID is immutable. If no ID is provided, a UUID4 will be generated.
                    type: string
                client_name:
                    description: OAuth 2.0 Client Name  The human-readable name of the client to be presented to the end-user during authorization.
                    type: string
                client_secret:
                    description: OAuth 2.0 Client Secret  The secret will be included in the create request as cleartext, and then never again. The secret is kept in hashed format and is not recoverable once lost.
                    type: string
                client_secret_expires_at:
                    description: OAuth 2.0 Client Secret Expires At  The field is currently not supported and its value is always 0.
                    format: int64
                    type: integer
                client_uri:
                    description: OAuth 2.0 Client URI  ClientURI is a URL string of a web page providing information about the client. If present, the server SHOULD display this URL to the end-user in a clickable fashion.
                    type: string
                contacts:
                    items:
                        type: string
                    type: array
                created_at:
                    description: OAuth 2.0 Client Creation Date  CreatedAt returns the timestamp of the client's creation.
                    format: date-time
                    type: string
                frontchannel_logout_session_required:
                    description: OpenID Connect Front-Channel Logout Session Required  Boolean value specifying whether the RP requires that iss (issuer) and sid (session ID) query parameters be included to identify the RP session with the OP when the frontchannel_logout_uri is used. If omitted, the default value is false.
                    type: boolean
                frontchannel_logout_uri:
                    description: OpenID Connect Front-Channel Logout URI  RP URL that will cause the RP to log itself out when rendered in an iframe by the OP. An iss (issuer) query parameter and a sid (session ID) query parameter MAY be included by the OP to enable the RP to validate the request and to determine which of the potentially multiple sessions is to be logged out; if either is included, both MUST be.
                    type: string
                grant_types:
                    items:
                        type: string
                    type: array
                implicit_grant_access_token_lifespan:
                    description: Specify a time duration in milliseconds, seconds, minutes, hours.
                    type: string
                implicit_grant_id_token_lifespan:
                    description: Specify a time duration in milliseconds, seconds, minutes, hours.
                    type: string
                jwks:
                    description: OAuth 2.0 Client JSON Web Key Set  Client's JSON Web Key Set [JWK] document, passed by value. The semantics of the jwks parameter are the same as the jwks_uri parameter, other than that the JWK Set is passed by value, rather than by reference. This parameter is intended only to be used by Clients that, for some reason, are unable to use the jwks_uri parameter, for instance, by native applications that might not have a location to host the contents of the JWK Set. If a Client can use jwks_uri, it MUST NOT use jwks. One significant downside of jwks is that it does not enable key rotation (which jwks_uri does, as described in Section 10 of OpenID Connect Core 1.0 [OpenID.Core]). The jwks_uri and jwks parameters MUST NOT be used together.
                jwks_uri:
                    description: OAuth 2.0 Client JSON Web Key Set URL  URL for the Client's JSON Web Key Set [JWK] document. If the Client signs requests to the Server, it contains the signing key(s) the Server uses to validate signatures from the Client. The JWK Set MAY also contain the Client's encryption keys(s), which are used by the Server to encrypt responses to the Client. When both signing and encryption keys are made available, a use (Key Use) parameter value is REQUIRED for all keys in the referenced JWK Set to indicate each key's intended usage. Although some algorithms allow the same key to be used for both signatures and encryption, doing so is NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be used to provide X.509 representations of keys provided. When used, the bare key values MUST still be present and MUST match those in the certificate.
                    type: string
                jwt_bearer_grant_access_token_lifespan:
                    description: Specify a time duration in milliseconds, seconds, minutes, hours.
                    type: string
                logo_uri:
                    description: OAuth 2.0 Client Logo URI  A URL string referencing the client's logo.
                    type: string
                owner:
                    description: OAuth 2.0 Client Owner  Owner is a string identifying the owner of the OAuth 2.0 Client.
                    type: string
                policy_uri:
                    description: OAuth 2.0 Client Policy URI  PolicyURI is a URL string that points to a human-readable privacy policy document that describes how the deployment organization collects, uses, retains, and discloses personal data.
                    type: string
                post_logout_redirect_uris:
                    items:
                        type: string
                    type: array
                redirect_uris:
                    items:
                        type: string
                    type: array
                refresh_token_grant_access_token_lifespan:
                    description: Specify a time duration in milliseconds, seconds, minutes, hours.
                    type: string
                refresh_token_grant_id_token_lifespan:
                    description: Specify a time duration in milliseconds, seconds, minutes, hours.
                    type: string
                refresh_token_grant_refresh_token_lifespan:
                    description: Specify a time duration in milliseconds, seconds, minutes, hours.
                    type: string
                registration_access_token:
                    description: OpenID Connect Dynamic Client Registration Access Token  RegistrationAccessToken can be used to update, get, or delete the OAuth2 Client. It is sent when creating a client using Dynamic Client Registration.
                    type: string
                registration_client_uri:
                    description: OpenID Connect Dynamic Client Registration URL  RegistrationClientURI is the URL used to update, get, or delete the OAuth2 Client.
                    type: string
                request_object_signing_alg:
                    description: OpenID Connect Request Object Signing Algorithm  JWS [JWS] alg algorithm [JWA] that MUST be used for signing Request Objects sent to the OP. All Request Objects from this Client MUST be rejected, if not signed with this algorithm.
                    type: string
                request_uris:
                    items:
                        type: string
                    type: array
                response_types:
                    items:
                        type: string
                    type: array
                scope:
                    description: OAuth 2.0 Client Scope  Scope is a string containing a space-separated list of scope values (as described in Section 3.3 of OAuth 2.0 [RFC6749]) that the client can use when requesting access tokens.
                    type: string
                sector_identifier_uri:
                    description: OpenID Connect Sector Identifier URI  URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OP. The URL references a file with a single JSON array of redirect_uri values.
                    type: string
                skip_consent:
                    description: SkipConsent skips the consent screen for this client. This field can only be set from the admin API.
                    type: boolean
                skip_logout_consent:
                    description: SkipLogoutConsent skips the logout consent screen for this client. This field can only be set from the admin API.
                    type: boolean
                subject_type:
                    description: OpenID Connect Subject Type  The `subject_types_supported` Discovery parameter contains a list of the supported subject_type values for this server. Valid types include `pairwise` and `public`.
                    type: string
                token_endpoint_auth_method:
                    description: 'OAuth 2.0 Token Endpoint Authentication Method  Requested Client Authentication method for the Token Endpoint. The options are:  `client_secret_basic`: (default) Send `client_id` and `client_secret` as `application/x-www-form-urlencoded` encoded in the HTTP Authorization header. `client_secret_post`: Send `client_id` and `client_secret` as `application/x-www-form-urlencoded` in the HTTP body. `private_key_jwt`: Use JSON Web Tokens to authenticate the client. `none`: Used for public clients (native apps, mobile apps) which can not have secrets.'
                    type: string
                token_endpoint_auth_signing_alg:
                    description: OAuth 2.0 Token Endpoint Signing Algorithm  Requested Client Authentication signing algorithm for the Token Endpoint.
                    type: string
                tos_uri:
                    description: OAuth 2.0 Client Terms of Service URI  A URL string pointing to a human-readable terms of service document for the client that describes a contractual relationship between the end-user and the client that the end-user accepts when authorizing the client.
                    type: string
                updated_at:
                    description: OAuth 2.0 Client Last Update Date  UpdatedAt returns the timestamp of the last update.
                    format: date-time
                    type: string
                userinfo_signed_response_alg:
                    description: OpenID Connect Request Userinfo Signed Response Algorithm  JWS alg algorithm [JWA] REQUIRED for signing UserInfo Responses. If this is specified, the response will be JWT [JWT] serialized, and signed using JWS. The default, if omitted, is for the UserInfo Response to return the Claims as a UTF-8 encoded JSON object using the application/json content-type.
                    type: string
            title: OAuth2 Client
            type: object
        OAuth2ConsentRequestOpenIDConnectContext:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: OAuth2ConsentRequestOpenIDConnectContext struct
            properties:
                acr_values:
                    description: 'ACRValues is the Authentication AuthorizationContext Class Reference requested in the OAuth 2.0 Authorization request. It is a parameter defined by OpenID Connect and expresses which level of authentication (e.g. 2FA) is required.  OpenID Connect defines it as follows: > Requested Authentication AuthorizationContext Class Reference values. Space-separated string that specifies the acr values that the Authorization Server is being requested to use for processing this Authentication Request, with the values appearing in order of preference. The Authentication AuthorizationContext Class satisfied by the authentication performed is returned as the acr Claim Value, as specified in Section 2. The acr Claim is requested as a Voluntary Claim by this parameter.'
                    items:
                        type: string
                    type: array
                display:
                    description: 'Display is a string value that specifies how the Authorization Server displays the authentication and consent user interface pages to the End-User. The defined values are: page: The Authorization Server SHOULD display the authentication and consent UI consistent with a full User Agent page view. If the display parameter is not specified, this is the default display mode. popup: The Authorization Server SHOULD display the authentication and consent UI consistent with a popup User Agent window. The popup User Agent window should be of an appropriate size for a login-focused dialog and should not obscure the entire window that it is popping up over. touch: The Authorization Server SHOULD display the authentication and consent UI consistent with a device that leverages a touch interface. wap: The Authorization Server SHOULD display the authentication and consent UI consistent with a \"feature phone\" type display.  The Authorization Server MAY also attempt to detect the capabilities of the User Agent and present an appropriate display.'
                    type: string
                id_token_hint_claims:
                    description: IDTokenHintClaims are the claims of the ID Token previously issued by the Authorization Server being passed as a hint about the End-User's current or past authenticated session with the Client.
                    type: object
                login_hint:
                    description: LoginHint hints about the login identifier the End-User might use to log in (if necessary). This hint can be used by an RP if it first asks the End-User for their e-mail address (or other identifier) and then wants to pass that value as a hint to the discovered authorization service. This value MAY also be a phone number in the format specified for the phone_number Claim. The use of this parameter is optional.
                    type: string
                ui_locales:
                    description: UILocales is the End-User'id preferred languages and scripts for the user interface, represented as a space-separated list of BCP47 [RFC5646] language tag values, ordered by preference. For instance, the value \"fr-CA fr en\" represents a preference for French as spoken in Canada, then French (without a region designation), followed by English (without a region designation). An error SHOULD NOT result if some or all of the requested locales are not supported by the OpenID Provider.
                    items:
                        type: string
                    type: array
            title: OAuth2 Consent Request OpenIDConnect Context
            type: object
        OAuth2LoginRequest:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: OAuth2LoginRequest struct for OAuth2LoginRequest
            properties:
                challenge:
                    description: ID is the identifier (\"login challenge\") of the login request. It is used to identify the session.
                    type: string
                client:
                    $ref: '#/components/schemas/OAuth2Client'
                oidc_context:
                    $ref: '#/components/schemas/OAuth2ConsentRequestOpenIDConnectContext'
                request_url:
                    description: RequestURL is the original OAuth 2.0 Authorization URL requested by the OAuth 2.0 client. It is the URL which initiates the OAuth 2.0 Authorization Code or OAuth 2.0 Implicit flow. This URL is typically not needed, but might come in handy if you want to deal with additional request parameters.
                    type: string
                requested_access_token_audience:
                    items:
                        type: string
                    type: array
                requested_scope:
                    items:
                        type: string
                    type: array
                session_id:
                    description: SessionID is the login session ID. If the user-agent reuses a login session (via cookie / remember flag) this ID will remain the same. If the user-agent did not have an existing authentication session (e.g. remember is false) this will be a new random value. This value is used as the \"sid\" parameter in the ID Token and in OIDC Front-/Back- channel logout. It's value can generally be used to associate consecutive login requests by a certain user.
                    type: string
                skip:
                    description: Skip, if true, implies that the client has requested the same scopes from the same user previously. If true, you can skip asking the user to grant the requested scopes, and simply forward the user to the redirect URL.  This feature allows you to update / set session information.
                    type: boolean
                subject:
                    description: Subject is the user ID of the end-user that authenticated. Now, that end user needs to grant or deny the scope requested by the OAuth 2.0 client. If this value is set and `skip` is true, you MUST include this subject type when accepting the login request, or the request will fail.
                    type: string
            title: OAuth2 Login Request
            type: object
        Object:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                ChecksumAlgorithm:
                    allOf:
                        - $ref: '#/components/schemas/ChecksumAlgorithmList'
                ETag:
                    allOf:
                        - $ref: '#/components/schemas/ETag'
                Key:
                    allOf:
                        - $ref: '#/components/schemas/ObjectKey'
                LastModified:
                    allOf:
                        - $ref: '#/components/schemas/LastModified'
                Owner:
                    allOf:
                        - $ref: '#/components/schemas/Owner'
                RestoreStatus:
                    allOf:
                        - $ref: '#/components/schemas/RestoreStatus'
                Size:
                    allOf:
                        - $ref: '#/components/schemas/Size'
                StorageClass:
                    allOf:
                        - $ref: '#/components/schemas/ObjectStorageClass'
            title: Object
            type: object
        ObjectKey:
            $schema: https://json-schema.org/draft/2020-12/schema
            minLength: 1
            title: ObjectKey
            type: string
        ObjectList:
            $schema: https://json-schema.org/draft/2020-12/schema
            items:
                $ref: '#/components/schemas/Object'
            title: ObjectList
            type: array
        ObjectLocation:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: Location
            type: string
        ObjectStorageClass:
            $schema: https://json-schema.org/draft/2020-12/schema
            enum:
                - STANDARD
                - REDUCED_REDUNDANCY
                - GLACIER
                - STANDARD_IA
                - ONEZONE_IA
                - INTELLIGENT_TIERING
                - DEEP_ARCHIVE
                - OUTPOSTS
                - GLACIER_IR
                - SNOW
            title: ObjectStorageClass
            type: string
        OidcConfiguration:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Includes links to several endpoints and exposes information on supported signature algorithms among others.
            properties:
                authorization_endpoint:
                    description: OAuth 2.0 Authorization Endpoint URL
                    type: string
                backchannel_logout_session_supported:
                    description: |-
                        OpenID Connect Back-Channel Logout Session Required
                        Boolean value specifying whether the OP can pass a sid (session ID) Claim in the Logout Token to identify the RP session with the OP. If supported, the sid Claim is also included in ID Tokens issued by the OP.
                    type: boolean
                backchannel_logout_supported:
                    description: |-
                        OpenID Connect Back-Channel Logout Supported
                        Boolean value specifying whether the OP supports back-channel logout, with true indicating support.
                    type: boolean
                claims_parameter_supported:
                    description: |-
                        OpenID Connect Claims Parameter Parameter Supported
                        Boolean value specifying whether the OP supports use of the claims parameter, with true indicating support.
                    type: boolean
                claims_supported:
                    description: |-
                        OpenID Connect Supported Claims
                        JSON array containing a list of the Claim Names of the Claims that the OpenID Provider MAY be able to supply values for. Note that for privacy or other reasons, this might not be an exhaustive list.
                    items:
                        type: string
                    type: array
                code_challenge_methods_supported:
                    description: |-
                        OAuth 2.0 PKCE Supported Code Challenge Methods
                        JSON array containing a list of Proof Key for Code Exchange (PKCE) [RFC7636] code challenge methods supported by this authorization server.
                    items:
                        type: string
                    type: array
                credentials_endpoint_draft_00:
                    description: |-
                        OpenID Connect Verifiable Credentials Endpoint

                        Contains the URL of the Verifiable Credentials Endpoint.
                    type: string
                credentials_supported_draft_00:
                    description: |-
                        OpenID Connect Verifiable Credentials Supported
                        JSON array containing a list of the Verifiable Credentials supported by this authorization server.
                    items:
                        $ref: '#/components/schemas/CredentialSupportedDraft00'
                    type: array
                end_session_endpoint:
                    description: |-
                        OpenID Connect End-Session Endpoint
                        An URL provided by the OpenID Provider (OP) that a Relying Party (RP) can redirect to, to initiate a logout process for the End-User at the OP. This is part of the OpenID Connect session management functionality,  allowing for single sign-out across applications.
                    type: string
                frontchannel_logout_session_supported:
                    description: |-
                        OpenID Connect Front-Channel Logout Session Required
                        The boolean indicates if the OpenID Provider (OP) can use issuer (iss) and session ID (sid) parameters to identify the Relying Party (RP) session during logout via the  frontchannel_logout_uri. If this is supported, the sid claim is also included in ID Tokens issued by the OP.
                    type: boolean
                frontchannel_logout_supported:
                    description: |-
                        OpenID Connect Front-Channel Logout Supported
                        Boolean value specifying whether the OP supports HTTP-based logout, with true indicating support.
                    type: boolean
                grant_types_supported:
                    description: |-
                        OAuth 2.0 Supported Grant Types
                        JSON array containing a list of the OAuth 2.0 Grant Type values that this OP supports.
                    items:
                        type: string
                    type: array
                id_token_signed_response_alg:
                    description: |-
                        OpenID Connect Default ID Token Signing Algorithms

                        Algorithm used to sign OpenID Connect ID Tokens.
                    items:
                        type: string
                    type: array
                id_token_signing_alg_values_supported:
                    description: |-
                        OpenID Connect Supported ID Token Signing Algorithms

                        JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for the ID Token to encode the Claims in a JWT.
                    items:
                        type: string
                    type: array
                issuer:
                    description: |-
                        OpenID Connect Issuer URL
                        An URL using the https scheme with no query or fragment component that the OP asserts as its IssuerURL Identifier. If IssuerURL discovery is supported, this value MUST be identical to the issuer value returned by WebFinger. This also MUST be identical to the iss Claim value in ID Tokens issued from this IssuerURL.
                    type: string
                jwks_uri:
                    description: |-
                        OpenID Connect Well-Known JSON Web Keys URL
                        The jwks_uri is the URL for the OpenID Provider's (OP) JSON Web Key Set (JWK) document, which contains the keys used by the Relying Party (RP) to validate the OP's signatures and, optionally, encrypt requests. Each key must specify its use (signing or encryption) for security purposes. The JWK set may include X.509  representations of keys via the x5c parameter, but the bare key values must still be present and match those in the certificate.
                    type: string
                registration_endpoint:
                    description: OpenID Connect Dynamic Client Registration Endpoint URL
                    type: string
                request_object_signing_alg_values_supported:
                    description: |-
                        OpenID Connect Supported Request Object Signing Algorithms
                        JSON array containing a list of the JWS signing algorithms (alg values) supported by the OP for Request Objects, which are described in Section 6.1 of OpenID Connect Core 1.0 [OpenID.Core]. These algorithms are used both when the Request Object is passed by value (using the request parameter) and when it is passed by reference (using the request_uri parameter).
                    items:
                        type: string
                    type: array
                request_parameter_supported:
                    description: |-
                        OpenID Connect Request Parameter Supported
                        Boolean value specifying whether the OP supports use of the request parameter, with true indicating support.
                    type: boolean
                request_uri_parameter_supported:
                    description: |-
                        OpenID Connect Request URI Parameter Supported
                        Boolean value specifying whether the OP supports use of the request_uri parameter, with true indicating support.
                    type: boolean
                require_request_uri_registration:
                    description: |-
                        OpenID Connect Requires Request URI Registration
                        Boolean value specifying whether the OP requires any request_uri values used to be pre-registered using the request_uris registration parameter.
                    type: boolean
                response_modes_supported:
                    description: |-
                        OAuth 2.0 Supported Response Modes
                        JSON array containing a list of the OAuth 2.0 response_mode values that this OP supports.
                    items:
                        type: string
                    type: array
                response_types_supported:
                    description: |-
                        OAuth 2.0 Supported Response Types
                        JSON array containing a list of the OAuth 2.0 response_type values that this OP supports. Dynamic OpenID Providers MUST support the code, id_token, and the token id_token Response Type values.
                    items:
                        type: string
                    type: array
                revocation_endpoint:
                    description: |-
                        OAuth 2.0 Token Revocation URL

                        URL of the authorization server's OAuth 2.0 revocation endpoint.
                    type: string
                scopes_supported:
                    description: |-
                        OAuth 2.0 Supported Scope Values
                        JSON array containing a list of the OAuth 2.0 [RFC6749] scope values that this server supports. The server MUST support the openid scope value. Servers MAY choose not to advertise some supported scope values even when this parameter is used
                    items:
                        type: string
                    type: array
                subject_types_supported:
                    description: |-
                        OpenID Connect Supported Subject Types
                        JSON array containing a list of the Subject Identifier types that this OP supports. Valid types include pairwise and public.
                    items:
                        type: string
                    type: array
                token_endpoint:
                    description: OAuth 2.0 Token Endpoint URL
                    type: string
                token_endpoint_auth_methods_supported:
                    description: |-
                        OAuth 2.0 Supported Client Authentication Methods

                        JSON array containing a list of Client Authentication methods supported by this Token Endpoint. The options are client_secret_post, client_secret_basic, client_secret_jwt, and private_key_jwt, as described in Section 9 of OpenID Connect Core 1.0
                    items:
                        type: string
                    type: array
                userinfo_endpoint:
                    description: |-
                        OpenID Connect Userinfo URL

                        URL of the OP's UserInfo Endpoint.
                    type: string
                userinfo_signed_response_alg:
                    description: |-
                        OpenID Connect User Userinfo Signing Algorithm

                        Algorithm used to sign OpenID Connect Userinfo Responses.
                    items:
                        type: string
                    type: array
                userinfo_signing_alg_values_supported:
                    description: |-
                        OpenID Connect Supported Userinfo Signing Algorithm
                        JSON array containing a list of the JWS [JWS] signing algorithms (alg values) [JWA] supported by the UserInfo Endpoint to encode the Claims in a JWT [JWT].
                    items:
                        type: string
                    type: array
            required:
                - issuer
                - authorization_endpoint
                - token_endpoint
                - jwks_uri
                - subject_types_supported
                - response_types_supported
                - id_token_signing_alg_values_supported
                - id_token_signed_response_alg
                - userinfo_signed_response_alg
            title: OpenID Connect Discovery Metadata
            type: object
        OpenShiftCluster:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                cidr:
                    type: string
                description:
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    type: string
                nodePools:
                    items:
                        $ref: '#/components/schemas/OpenShiftNodepool'
                    type: array
                urls:
                    $ref: '#/components/schemas/OpenShiftClusterUrls'
                version:
                    type: string
            title: OpenShift Cluster
            type: object
        OpenShiftClusterUrls:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                api:
                    type: string
                console:
                    type: string
            title: Cluster Urls
            type: object
        OpenShiftNodepool:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                gpu:
                    $ref: '#/components/schemas/Gpu'
                name:
                    pattern: ^[a-zA-Z0-9-]{3,64}$
                    type: string
                nodeCount:
                    example: 3
                    minimum: 1
                    type: integer
                nodeProfile:
                    $ref: '#/components/schemas/NodeProfile'
                tina:
                    type: string
            required:
                - name
                - nodeProfile
                - nodeCount
            title: OpenShift Node Pool
            type: object
        OpenShiftVersion:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                name:
                    type: string
                version:
                    type: string
            required:
                - version
            title: OpenShift Version
            type: object
        Operation:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                createTime:
                    format: date-time
                    type: string
                data:
                    oneOf:
                        - type: string
                        - additionalProperties: true
                          type: object
                endTime:
                    format: date-time
                    type: string
                error:
                    oneOf:
                        - type: string
                        - additionalProperties: true
                          type: object
                id:
                    format: uuid
                    type: string
                progress:
                    oneOf:
                        - type: string
                        - additionalProperties: true
                          type: object
                result:
                    oneOf:
                        - type: string
                        - additionalProperties: true
                          type: object
                selfLink:
                    format: url
                    type: string
                startTime:
                    format: date-time
                    type: string
                status:
                    $ref: '#/components/schemas/OperationStatus'
                    default: PENDING
                    example: PENDING
                targetLink:
                    format: url
                    type: string
                type:
                    type: string
            title: Operation
            type: object
        OperationStatus:
            $schema: https://json-schema.org/draft/2020-12/schema
            additionalProperties: false
            description: Operation status
            enum:
                - PENDING
                - RUNNING
                - DONE
                - FAILED
            title: OperationStatus
            type: string
        Operations:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                items:
                    items:
                        $ref: '#/components/schemas/Operation'
                    type: array
                totalSize:
                    type: integer
            title: List Operations Response
            type: object
        OrganisationSimple:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                id:
                    description: Organisation identifier
                    format: uuid
                    type: string
            required:
                - id
            title: OrganisationSimple
            type: object
        OrganisationSimplePaginatedList:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/PaginatedList'
                - properties:
                    items:
                        items:
                            $ref: '#/components/schemas/OrganisationSimple'
                        type: array
                  required:
                    - items
                  type: object
            title: OrganisationSimplePaginatedList
            type: object
        Owner:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                DisplayName:
                    allOf:
                        - $ref: '#/components/schemas/DisplayName'
                ID:
                    allOf:
                        - $ref: '#/components/schemas/OwnerID'
            title: Owner
            type: object
        OwnerID:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: ID
            type: string
        PaginatedList:
            $schema: https://json-schema.org/draft/2020-12/schema
            additionalProperties: false
            description: Represent the common attributes of a paginated list, to be used in an allOf with the specific items attribute of the desired type.
            properties:
                nextPageToken:
                    description: This token is used to retrieve the next page. If this field is omitted, there are no subsequent pages.
                    type: string
                totalSize:
                    $ref: '#/components/schemas/Int'
                    description: Total number of element of items.
            title: PaginatedList
            type: object
        PartNumber:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: PartNumber
            type: integer
        PerformNativeLogoutBody:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Perform Native Logout Request Body
            properties:
                session_token:
                    description: |-
                        The Session Token

                        Invalidate this session token.
                    type: string
            required:
                - session_token
            title: Perform Native Logout Body
            type: object
        Permission:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: A permission in the <service>[.<resource>.[<subResource>](0,1)](0,1).<action> form
            properties:
                action:
                    description: Allowed operation type
                    example: delete
                    pattern: ^[a-zA-Z]+$
                    type: string
                description:
                    description: Human-readable description
                    type: string
                name:
                    description: Human-readable name
                    type: string
                resource:
                    example: storage
                    pattern: ^[a-zA-Z]+$
                    type: string
                service:
                    description: Service name
                    example: resourcemanager
                    pattern: ^[a-z]+$
                    type: string
                subResource:
                    example: buckets
                    pattern: ^[a-zA-Z]+$
                    type: string
            required:
                - name
                - description
                - service
                - action
            title: Permission
            type: object
        PermissionsPaginatedList:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/PaginatedList'
                - properties:
                    items:
                        items:
                            $ref: '#/components/schemas/RegisteredPermission'
                        type: array
                  required:
                    - items
                  type: object
            title: PermissionsPaginatedList
            type: object
        Phase1Options:
            additionalProperties: false
            description: 'Information about Phase 1 of the Internet Key Exchange (IKE) negotiation. When Phase 1 finishes successfully, peers proceed to Phase 2 negotiations. '
            properties:
                dpdTimeoutAction:
                    description: The action to carry out after a Dead Peer Detection (DPD) timeout occurs.
                    type: string
                dpdTimeoutSeconds:
                    description: The maximum waiting time for a Dead Peer Detection (DPD) response before considering the peer as dead, in seconds.
                    type: integer
                ikeVersions:
                    description: The Internet Key Exchange (IKE) versions allowed for the VPN tunnel.
                    items:
                        type: string
                    type: array
                phase1DhGroupNumbers:
                    description: The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 1.
                    items:
                        type: integer
                    type: array
                phase1EncryptionAlgorithms:
                    description: The encryption algorithms allowed for the VPN tunnel for phase 1.
                    items:
                        type: string
                    type: array
                phase1IntegrityAlgorithms:
                    description: The integrity algorithms allowed for the VPN tunnel for phase 1.
                    items:
                        type: string
                    type: array
                phase1LifetimeSeconds:
                    description: The lifetime for phase 1 of the IKE negotiation process, in seconds.
                    type: integer
                replayWindowSize:
                    description: The number of packets in an IKE replay window.
                    type: integer
                startupAction:
                    description: The action to carry out when establishing tunnels for a VPN connection.
                    type: string
            type: object
        Phase2Options:
            additionalProperties: false
            description: 'Information about Phase 2 of the Internet Key Exchange (IKE) negotiation. '
            properties:
                phase2DhGroupNumbers:
                    description: The Diffie-Hellman (DH) group numbers allowed for the VPN tunnel for phase 2.
                    items:
                        type: integer
                    type: array
                phase2EncryptionAlgorithms:
                    description: The encryption algorithms allowed for the VPN tunnel for phase 2.
                    items:
                        type: string
                    type: array
                phase2IntegrityAlgorithms:
                    description: The integrity algorithms allowed for the VPN tunnel for phase 2.
                    items:
                        type: string
                    type: array
                phase2LifetimeSeconds:
                    description: The lifetime for phase 2 of the Internet Key Exchange (IKE) negociation process, in seconds.
                    type: integer
                preSharedKey:
                    description: The pre-shared key to establish the initial authentication between the client gateway and the virtual gateway. This key can contain any character except line breaks and double quotes (&quot;).
                    type: string
            type: object
        Phase2OptionsToUpdate:
            additionalProperties: false
            description: 'Information about Phase 2 of the Internet Key Exchange (IKE) negotiation. '
            properties:
                preSharedKey:
                    description: The pre-shared key to establish the initial authentication between the client gateway and the virtual gateway. This key can contain any character except line breaks and double quotes (&quot;).
                    type: string
            type: object
        Placement:
            additionalProperties: false
            description: Information about the placement of the VM.
            properties:
                availabilityZoneName:
                    description: The name of the Subregion. If you specify this parameter, you must not specify the `Nics` parameter.
                    type: string
                tenancy:
                    description: The tenancy of the VM (`default`, `dedicated`, or a dedicated group ID).
                    type: string
            type: object
        Prefix:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: Prefix
            type: string
        PrivateIp:
            additionalProperties: false
            description: Information about the private IP.
            properties:
                isPrimary:
                    description: If true, the IP is the primary private IP of the NIC.
                    type: boolean
                linkPublicIp:
                    $ref: '#/components/schemas/LinkPublicIp'
                privateDnsName:
                    description: The name of the private DNS.
                    type: string
                privateIp:
                    description: The private IP of the NIC.
                    type: string
            type: object
        PrivateIpLight:
            additionalProperties: false
            description: Information about the private IP.
            properties:
                isPrimary:
                    description: If true, the IP is the primary private IP of the NIC.
                    type: boolean
                privateIp:
                    description: The private IP of the NIC.
                    type: string
            type: object
        PrivateIpLightForVm:
            additionalProperties: false
            description: Information about the private IP of the NIC.
            properties:
                isPrimary:
                    description: If true, the IP is the primary private IP of the NIC.
                    type: boolean
                linkPublicIp:
                    $ref: '#/components/schemas/LinkPublicIpLightForVm'
                privateDnsName:
                    description: The name of the private DNS.
                    type: string
                privateIp:
                    description: The private IP.
                    type: string
            type: object
        PublicIp:
            additionalProperties: false
            description: Information about the public IP.
            properties:
                id:
                    description: The allocation ID of the public IP.
                    type: string
                linkPublicIpId:
                    description: (Required in a Vpc) The ID representing the association of the public IP with the VM or the NIC.
                    type: string
                nicId:
                    description: The ID of the NIC the public IP is associated with (if any).
                    type: string
                privateIp:
                    description: The private IP associated with the public IP.
                    type: string
                publicIp:
                    description: The public IP.
                    type: string
                tags:
                    description: One or more tags associated with the public IP.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                vmId:
                    description: The ID of the VM the public IP is associated with (if any).
                    type: string
            type: object
        PublicIpLight:
            additionalProperties: false
            description: Information about the public IP.
            properties:
                publicIp:
                    description: The public IP associated with the NAT gateway.
                    type: string
                publicIpId:
                    description: The allocation ID of the public IP associated with the NAT gateway.
                    type: string
            type: object
        PutObjectOutput:
            $schema: https://json-schema.org/draft/2020-12/schema
            example:
                ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
                VersionId: Kirh.unyZwjQ69YxcQLA8z4F5j3kJJKr
            title: PutObjectOutput
            type: object
        ReadAdminPassword:
            additionalProperties: false
            properties:
                adminPassword:
                    description: The password of the VM. After the first boot, returns an empty string.
                    type: string
                vmId:
                    description: The ID of the VM.
                    type: string
            type: object
        ReadClientGateways:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more client gateways.
                    items:
                        $ref: '#/components/schemas/ClientGateway'
                    type: array
            type: object
        ReadConsoleOutput:
            additionalProperties: false
            properties:
                consoleOutput:
                    description: The Base64-encoded output of the console. If a command line tool is used, the output is decoded by the tool.
                    type: string
                vmId:
                    description: The ID of the VM.
                    type: string
            type: object
        ReadDhcpOptions:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more DHCP options sets.
                    items:
                        $ref: '#/components/schemas/DhcpOptionsSet'
                    type: array
            type: object
        ReadFlexibleGpus:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more fGPUs.
                    items:
                        $ref: '#/components/schemas/FlexibleGpu'
                    type: array
            type: object
        ReadImages:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more OMIs.
                    items:
                        $ref: '#/components/schemas/Image'
                    type: array
            type: object
        ReadInternetGateways:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more Internet gateways.
                    items:
                        $ref: '#/components/schemas/InternetGateway'
                    type: array
            type: object
        ReadKeypairs:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more keypairs.
                    items:
                        $ref: '#/components/schemas/Keypair'
                    type: array
            type: object
        ReadKeypairsById:
            additionalProperties: false
            description: Information about the keypair.
            properties:
                fingerprint:
                    description: The MD5 public key fingerprint as specified in section 4 of RFC 4716.
                    type: string
                name:
                    description: The name of the keypair.
                    type: string
                type:
                    description: The type of the keypair (`ssh-rsa`, `ssh-ed25519`, `ecdsa-sha2-nistp256`, `ecdsa-sha2-nistp384`, or `ecdsa-sha2-nistp521`).
                    type: string
            type: object
        ReadListenerRules:
            additionalProperties: false
            properties:
                items:
                    description: The list of the rules to describe.
                    items:
                        $ref: '#/components/schemas/ListenerRule'
                    type: array
            type: object
        ReadLoadBalancerTags:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more load balancer tags.
                    items:
                        $ref: '#/components/schemas/LoadBalancerTag'
                    type: array
            type: object
        ReadLoadBalancers:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more load balancers.
                    items:
                        $ref: '#/components/schemas/LoadBalancer'
                    type: array
            type: object
        ReadNatGateway:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more NAT gateways.
                    items:
                        $ref: '#/components/schemas/NatGateway'
                    type: array
            type: object
        ReadNics:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more NICs.
                    items:
                        $ref: '#/components/schemas/Nic'
                    type: array
            type: object
        ReadPublicIpRanges:
            additionalProperties: false
            properties:
                items:
                    description: The list of public IPv4 addresses used in the Region, in CIDR notation.
                    items:
                        type: string
                    type: array
            type: object
        ReadPublicIps:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more public IPs.
                    items:
                        $ref: '#/components/schemas/PublicIp'
                    type: array
            type: object
        ReadRouteTables:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more route tables.
                    items:
                        $ref: '#/components/schemas/RouteTable'
                    type: array
            type: object
        ReadSecurityGroups:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more security groups.
                    items:
                        $ref: '#/components/schemas/SecurityGroup'
                    type: array
            type: object
        ReadServerCertificates:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more Server certificates.
                    items:
                        $ref: '#/components/schemas/ServerCertificate'
                    type: array
            type: object
        ReadSnapshots:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more snapshots and their permissions.
                    items:
                        $ref: '#/components/schemas/Snapshot'
                    type: array
            type: object
        ReadSubnets:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more Subnets.
                    items:
                        $ref: '#/components/schemas/Subnet'
                    type: array
            type: object
        ReadTags:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more tags.
                    items:
                        $ref: '#/components/schemas/Tag'
                    type: array
            type: object
        ReadVirtualGateways:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more virtual gateways.
                    items:
                        $ref: '#/components/schemas/VirtualGateway'
                    type: array
            type: object
        ReadVms:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more VMs.
                    items:
                        $ref: '#/components/schemas/Vm'
                    type: array
            type: object
        ReadVmsHealth:
            additionalProperties: false
            properties:
                backendVmHealth:
                    description: Information about the health of one or more back-end VMs.
                    items:
                        $ref: '#/components/schemas/BackendVmHealth'
                    type: array
            type: object
        ReadVmsState:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more VM states.
                    items:
                        $ref: '#/components/schemas/VmStates'
                    type: array
            type: object
        ReadVolumes:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more volumes.
                    items:
                        $ref: '#/components/schemas/Volume'
                    type: array
            type: object
        ReadVpcPeerings:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more Vpc peerings.
                    items:
                        $ref: '#/components/schemas/VpcPeering'
                    type: array
            type: object
        ReadVpcs:
            additionalProperties: false
            properties:
                items:
                    description: Information about the described Vpcs.
                    items:
                        $ref: '#/components/schemas/Vpc'
                    type: array
            type: object
        ReadVpnConnections:
            additionalProperties: false
            properties:
                items:
                    description: Information about one or more VPN connections.
                    items:
                        $ref: '#/components/schemas/VpnConnection'
                    type: array
            type: object
        RecoveryAddressType:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: RecoveryAddressType must not exceed 16 characters as that is the limitation in the SQL Schema.
            title: Recovery Address Type
            type: string
        RecoveryFlow:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: This request is used when an identity wants to recover their account.
            properties:
                active:
                    description: Active, if set, contains the recovery method that is being used. It is initially not set.
                    type: string
                continue_with:
                    description: Contains possible actions that could follow this flow
                    items:
                        $ref: '#/components/schemas/ContinueWith'
                    type: array
                expires_at:
                    description: ExpiresAt is the time (UTC) when the request expires. If the user still wishes to update the setting, a new request has to be initiated.
                    format: date-time
                    type: string
                id:
                    description: ID represents the request's unique ID.
                    format: uuid
                    type: string
                issued_at:
                    description: IssuedAt is the time (UTC) when the request occurred.
                    format: date-time
                    type: string
                request_url:
                    description: |-
                        RequestURL is the initial URL that was requested. It can be used
                        to forward information contained in the URL's path or query for example.
                    type: string
                return_to:
                    description: ReturnTo contains the requested return_to URL.
                    type: string
                state:
                    description: |-
                        State represents the state of this request:
                        choose_method: ask the user to choose a method (e.g. recover account via email)
                        sent_email: the email has been sent to the user
                        passed_challenge: the request was successful and the recovery challenge was passed.
                type:
                    $ref: '#/components/schemas/SelfServiceFlowType'
                ui:
                    $ref: '#/components/schemas/UiContainer'
            required:
                - id
                - type
                - expires_at
                - issued_at
                - request_url
                - ui
                - state
            title: A Recovery Flow
            type: object
        RecoveryIdentityAddress:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                created_at:
                    description: CreatedAt is a helper struct field for gobuffalo.pop.
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                updated_at:
                    description: UpdatedAt is a helper struct field for gobuffalo.pop.
                    format: date-time
                    type: string
                value:
                    type: string
                via:
                    $ref: '#/components/schemas/RecoveryAddressType'
            required:
                - id
                - value
                - via
            title: Recovery Identity Address
            type: object
        RecoveryLink:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                expiration:
                    $ref: '#/components/schemas/DateTime'
                link:
                    description: Recovery link correctly generated
                    format: uri
                    type: string
            required:
                - link
                - expiration
            title: RecoveryLink
            type: object
        Registered:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                createdOn:
                    description: creation date
                    format: date-time
                    type: string
                updatedOn:
                    description: last update
                    format: date-time
                    type: string
                uuid:
                    description: Internal ID
                    format: uuid
                    type: string
            required:
                - uuid
                - createdOn
                - updatedOn
            title: Registered
            type: object
        RegisteredPermission:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/Permission'
                - $ref: '#/components/schemas/Registered'
            title: RegisteredPermission
            type: object
        RegisteredRole:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/Role'
                - $ref: '#/components/schemas/Registered'
            title: RegisteredRole
            type: object
        RegistrationFlow:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                active:
                    description: |-
                        Active, if set, contains the registration method that is being used. It is initially
                        not set.
                        password CredentialsTypePassword
                        oidc CredentialsTypeOIDC
                        totp CredentialsTypeTOTP
                        lookup_secret CredentialsTypeLookup
                        webauthn CredentialsTypeWebAuthn
                        code CredentialsTypeCodeAuth
                        link_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.
                        code_recovery CredentialsTypeRecoveryCode
                    enum:
                        - password
                        - oidc
                        - totp
                        - lookup_secret
                        - webauthn
                        - code
                        - link_recovery
                        - code_recovery
                    type: string
                    x-go-enum-desc: |-
                        password CredentialsTypePassword
                        oidc CredentialsTypeOIDC
                        totp CredentialsTypeTOTP
                        lookup_secret CredentialsTypeLookup
                        webauthn CredentialsTypeWebAuthn
                        code CredentialsTypeCodeAuth
                        link_recovery CredentialsTypeRecoveryLink  CredentialsTypeRecoveryLink is a special credential type linked to the link strategy (recovery flow).  It is not used within the credentials object itself.
                        code_recovery CredentialsTypeRecoveryCode
                expires_at:
                    description: |-
                        ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to log in,
                        a new flow has to be initiated.
                    format: date-time
                    type: string
                id:
                    description: |-
                        ID represents the flow's unique ID. When performing the registration flow, this
                        represents the id in the registration ui's query parameter: http://<selfservice.flows.registration.ui_url>/?flow=<id>
                    format: uuid
                    type: string
                issued_at:
                    description: IssuedAt is the time (UTC) when the flow occurred.
                    format: date-time
                    type: string
                oauth2_login_challenge:
                    type: string
                oauth2_login_request:
                    $ref: '#/components/schemas/OAuth2LoginRequest'
                organization_id:
                    $ref: '#/components/schemas/NullUUID'
                request_url:
                    description: |-
                        RequestURL is the initial URL that was requested. It can be used
                        to forward information contained in the URL's path or query for example.
                    type: string
                return_to:
                    description: ReturnTo contains the requested return_to URL.
                    type: string
                session_token_exchange_code:
                    description: |-
                        SessionTokenExchangeCode holds the secret code that the client can use to retrieve a session token after the flow has been completed.
                        This is only set if the client has requested a session token exchange code, and if the flow is of type "api",
                        and only on creating the flow.
                    type: string
                state:
                    description: |-
                        State represents the state of this request:
                        choose_method: ask the user to choose a method (e.g. registration with email)
                        sent_email: the email has been sent to the user
                        passed_challenge: the request was successful and the registration challenge was passed.
                transient_payload:
                    description: TransientPayload is used to pass data from the registration to a webhook
                    type: object
                type:
                    $ref: '#/components/schemas/SelfServiceFlowType'
                ui:
                    $ref: '#/components/schemas/UiContainer'
            required:
                - id
                - type
                - expires_at
                - issued_at
                - request_url
                - ui
                - state
            title: Registration Flow
            type: object
        ReqUpdateNodepool:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                count:
                    type: integer
            required:
                - count
            title: Update node pool's workers request schema
            type: object
        ResCreateCluster:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                id:
                    format: uuid
                    type: string
                name:
                    type: string
                operation:
                    $ref: '#/components/schemas/Operation'
            title: Create Cluster Response Schema
            type: object
        ResCreateNodepool:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                clusterId:
                    type: string
                nodePoolName:
                    type: string
                operation:
                    $ref: '#/components/schemas/Operation'
            title: Create NodePool Response Schema
            type: object
        ResDeleteCluster:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                name:
                    type: string
                operation:
                    $ref: '#/components/schemas/Operation'
            title: Delete Cluster Response Schema
            type: object
        ResourceLoadBalancerTag:
            additionalProperties: false
            description: Information about the tag.
            properties:
                key:
                    description: The key of the tag, with a minimum of 1 character.
                    type: string
            type: object
        ResourceTag:
            additionalProperties: false
            description: Information about the tag.
            properties:
                key:
                    description: The key of the tag, with a minimum of 1 character.
                    type: string
                value:
                    description: The value of the tag, between 0 and 255 characters.
                    type: string
            required:
                - key
                - value
            type: object
        RespUpdateNodepool:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                clusterId:
                    type: string
                nodePoolName:
                    type: string
                operation:
                    $ref: '#/components/schemas/Operation'
            title: Update nodepool response schema
            type: object
        RestoreExpiryDate:
            $schema: https://json-schema.org/draft/2020-12/schema
            format: date-time
            title: RestoreExpiryDate
            type: string
        RestoreStatus:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                IsRestoreInProgress:
                    allOf:
                        - $ref: '#/components/schemas/IsRestoreInProgress'
                RestoreExpiryDate:
                    allOf:
                        - $ref: '#/components/schemas/RestoreExpiryDate'
            title: RestoreStatus
            type: object
        Role:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: A role, linked to 1 or more permissions
            properties:
                description:
                    description: Human-readable description
                    example: Manage the resourcemanager.storage domain
                    type: string
                name:
                    description: Human-readable name
                    example: Storage Object Admin
                    type: string
            required:
                - name
                - description
            title: Role
            type: object
        RolePermission:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                permissions:
                    description: List of permissions UUIDs
                    items:
                        allOf:
                            - description: permission ID
                              format: uuid
                              type: string
                    maxItems: 100
                    minItems: 1
                    type: array
            required:
                - permissions
            title: RolePermission
            type: object
        RolesPaginatedList:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/PaginatedList'
                - properties:
                    items:
                        items:
                            $ref: '#/components/schemas/RegisteredRole'
                        type: array
                  required:
                    - items
                  type: object
            title: RolesPaginatedList
            type: object
        Route:
            additionalProperties: false
            description: Information about the route.
            properties:
                creationMethod:
                    description: The method used to create the route.
                    type: string
                destinationIpRange:
                    description: The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
                    type: string
                destinationServiceId:
                    description: The ID of the NumSpot service.
                    type: string
                gatewayId:
                    description: The ID of the Internet gateway or virtual gateway attached to the Vpc.
                    type: string
                natGatewayId:
                    description: The ID of a NAT gateway attached to the Vpc.
                    type: string
                nicId:
                    description: The ID of the NIC.
                    type: string
                state:
                    description: 'The state of a route in the route table (always `active`). '
                    type: string
                vmId:
                    description: The ID of a VM specified in a route in the table.
                    type: string
                vpcPeeringId:
                    description: The ID of the Vpc peering.
                    type: string
            type: object
        RouteLight:
            additionalProperties: false
            description: Information about the route.
            properties:
                destinationIpRange:
                    description: The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
                    type: string
                routeType:
                    description: The type of route (always `static`).
                    type: string
                state:
                    description: The current state of the static route (`pending` \| `available` \| `deleting` \| `deleted`).
                    type: string
            type: object
        RoutePropagatingVirtualGateway:
            additionalProperties: false
            description: Information about the route propagating virtual gateway.
            properties:
                virtualGatewayId:
                    description: The ID of the virtual gateway.
                    type: string
            type: object
        RouteTable:
            additionalProperties: false
            description: Information about the route table.
            properties:
                id:
                    description: The ID of the route table.
                    type: string
                linkRouteTables:
                    description: One or more associations between the route table and Subnets.
                    items:
                        $ref: '#/components/schemas/LinkRouteTable'
                    type: array
                routePropagatingVirtualGateways:
                    description: Information about virtual gateways propagating routes.
                    items:
                        $ref: '#/components/schemas/RoutePropagatingVirtualGateway'
                    type: array
                routes:
                    description: One or more routes in the route table.
                    items:
                        $ref: '#/components/schemas/Route'
                    type: array
                tags:
                    description: One or more tags associated with the route table.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                vpcId:
                    description: The ID of the Vpc for the route table.
                    type: string
            type: object
        SecurityGroup:
            additionalProperties: false
            description: Information about the security group.
            properties:
                description:
                    description: The description of the security group.
                    type: string
                id:
                    description: The ID of the security group.
                    type: string
                inboundRules:
                    description: The inbound rules associated with the security group.
                    items:
                        $ref: '#/components/schemas/SecurityGroupRule'
                    type: array
                name:
                    description: The name of the security group.
                    type: string
                outboundRules:
                    description: The outbound rules associated with the security group.
                    items:
                        $ref: '#/components/schemas/SecurityGroupRule'
                    type: array
                tags:
                    description: One or more tags associated with the security group.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                vpcId:
                    description: The ID of the Vpc for the security group.
                    type: string
            type: object
        SecurityGroupLight:
            additionalProperties: false
            description: Information about the security group.
            properties:
                securityGroupId:
                    description: The ID of the security group.
                    type: string
                securityGroupName:
                    description: The name of the security group.
                    type: string
            type: object
        SecurityGroupRule:
            additionalProperties: false
            description: Information about the security group rule.
            properties:
                fromPortRange:
                    description: The beginning of the port range for the TCP and UDP protocols, or an ICMP type number.
                    type: integer
                ipProtocol:
                    description: The IP protocol name (`tcp`, `udp`, `icmp`, or `-1` for all protocols). By default, `-1`. In a Vpc, this can also be an IP protocol number. For more information, see the [IANA.org website](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
                    type: string
                ipRanges:
                    description: One or more IP ranges for the security group rules, in CIDR notation (for example, `10.0.0.0/16`).
                    items:
                        type: string
                    type: array
                securityGroupsMembers:
                    description: Information about one or more source or destination security groups.
                    items:
                        $ref: '#/components/schemas/SecurityGroupsMember'
                    type: array
                serviceIds:
                    description: One or more service IDs to allow traffic from a Vpc to access the corresponding NumSpot services.
                    items:
                        type: string
                    type: array
                toPortRange:
                    description: The end of the port range for the TCP and UDP protocols, or an ICMP code number.
                    type: integer
            type: object
        SecurityGroupsMember:
            additionalProperties: false
            description: Information about a source or destination security group.
            properties:
                securityGroupId:
                    description: The ID of a source or destination security group that you want to link to the security group of the rule.
                    type: string
                securityGroupName:
                    description: (Public Cloud only) The name of a source or destination security group that you want to link to the security group of the rule.
                    type: string
            type: object
        SelfServiceFlowType:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: The flow type can either be `api` or `browser`.
            title: Type is the flow type.
            type: string
        ServerCertificate:
            additionalProperties: false
            description: Information about the VPN options.
            properties:
                expirationDate:
                    description: The date on which the server certificate expires.
                    type: string
                id:
                    description: The ID of the server certificate.
                    type: string
                name:
                    description: The name of the server certificate.
                    type: string
                orn:
                    description: The OUTSCALE Resource Name (ORN) of the server certificate
                    type: string
                path:
                    description: The path to the server certificate.
                    type: string
                uploadDate:
                    description: The date on which the server certificate has been uploaded.
                    type: string
            type: object
        ServiceAccount:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                name:
                    description: Service account name
                    format: string
                    type: string
                tokenDuration:
                    default: PT24H
                    description: Token duration in ISO 8601 format. Default is 24 hours (PT24H). Must be between 1 second (PT1S) and 48 hours (PT48H).
                    format: duration
                    type: string
            required:
                - name
            title: ServiceAccount
            type: object
        ServiceAccountEdited:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                id:
                    description: Service account ID
                    format: string
                    type: string
                name:
                    description: Service Accounts name
                    format: string
                    type: string
                tokenDuration:
                    description: Set access token duration
                    format: duration
                    type: string
            required:
                - name
                - id
            title: ServiceAccountEdited
            type: object
        ServiceAccountPaginatedList:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/PaginatedList'
                - properties:
                    items:
                        items:
                            $ref: '#/components/schemas/ServiceAccountEdited'
                        type: array
                  required:
                    - items
                  type: object
            title: ServiceAccountPaginatedList
            type: object
        Session:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: A Session
            properties:
                active:
                    description: Active state. If false the session is no longer active.
                    type: boolean
                authenticated_at:
                    description: |-
                        The Session Authentication Timestamp

                        When this session was authenticated at. If multi-factor authentication was used this
                        is the time when the last factor was authenticated (e.g. the TOTP code challenge was completed).
                    format: date-time
                    type: string
                authentication_methods:
                    $ref: '#/components/schemas/SessionAuthenticationMethods'
                authenticator_assurance_level:
                    $ref: '#/components/schemas/AuthenticatorAssuranceLevel'
                devices:
                    description: Devices has history of all endpoints where the session was used
                    items:
                        $ref: '#/components/schemas/SessionDevice'
                    type: array
                expires_at:
                    description: |-
                        The Session Expiry

                        When this session expires at.
                    format: date-time
                    type: string
                id:
                    description: Session ID
                    format: uuid
                    type: string
                identity:
                    $ref: '#/components/schemas/Identity'
                issued_at:
                    description: |-
                        The Session Issuance Timestamp

                        When this session was issued at. Usually equal or close to `authenticated_at`.
                    format: date-time
                    type: string
                tokenized:
                    description: |-
                        Tokenized is the tokenized (e.g. JWT) version of the session.

                        It is only set when the `tokenize` query parameter was set to a valid tokenize template during calls to `/session/whoami`.
                    type: string
            required:
                - id
            title: AuthenticationMethod identifies an authentication method
            type: object
        SessionAuthenticationMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: A singular authenticator used during authentication / login.
            properties:
                aal:
                    $ref: '#/components/schemas/AuthenticatorAssuranceLevel'
                completed_at:
                    description: When the authentication challenge was completed.
                    format: date-time
                    type: string
                method:
                    enum:
                        - link_recovery
                        - code_recovery
                        - password
                        - code
                        - totp
                        - oidc
                        - webauthn
                        - lookup_secret
                        - v0.6_legacy_session
                    title: The method used
                    type: string
                organization:
                    description: The Organization id used for authentication
                    type: string
                provider:
                    description: OIDC or SAML provider id used for authentication
                    type: string
            title: AuthenticationMethod identifies an authentication method
            type: object
        SessionAuthenticationMethods:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: A list of authenticators which were used to authenticate the session.
            items:
                $ref: '#/components/schemas/SessionAuthenticationMethod'
            title: List of (Used) AuthenticationMethods
            type: array
        SessionDevice:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Device corresponding to a Session
            properties:
                id:
                    description: Device record ID
                    format: uuid
                    type: string
                ip_address:
                    description: IPAddress of the client
                    type: string
                location:
                    description: Geo Location corresponding to the IP Address
                    type: string
                user_agent:
                    description: UserAgent of the client
                    type: string
            required:
                - id
            title: Session Device
            type: object
        SettingsFlow:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: This flow is used when an identity wants to update settings
            properties:
                active:
                    description: |-
                        Active, if set, contains the registration method that is being used. It is initially
                        not set.
                    type: string
                continue_with:
                    description: |-
                        Contains a list of actions, that could follow this flow

                        It can, for example, contain a reference to the verification flow, created as part of the user's
                        registration.
                    items:
                        $ref: '#/components/schemas/ContinueWith'
                    type: array
                expires_at:
                    description: |-
                        ExpiresAt is the time (UTC) when the flow expires. If the user still wishes to update the setting,
                        a new flow has to be initiated.
                    format: date-time
                    type: string
                id:
                    description: |-
                        ID represents the flow's unique ID. When performing the settings flow, this
                        represents the id in the settings ui's query parameter: http://<selfservice.flows.settings.ui_url>?flow=<id>
                    format: uuid
                    type: string
                identity:
                    $ref: '#/components/schemas/Identity'
                issued_at:
                    description: IssuedAt is the time (UTC) when the flow occurred.
                    format: date-time
                    type: string
                request_url:
                    description: RequestURL is the initial URL that was requested. It can be used to forward information contained in the URL's path or query for example.
                    type: string
                return_to:
                    description: ReturnTo contains the requested return_to URL.
                    type: string
                state:
                    description: |-
                        State represents the state of this flow. It knows two states:
                        show_form: No user data has been collected, or it is invalid, and thus the form should be shown.
                        success: Indicates that the settings flow has been updated successfully with the provided data.
                        Done will stay true when repeatedly checking. If set to true, done will revert back to false only
                        when a flow with invalid (e.g. "please use a valid phone number") data was sent.
                type:
                    $ref: '#/components/schemas/SelfServiceFlowType'
                ui:
                    $ref: '#/components/schemas/UiContainer'
            required:
                - id
                - type
                - expires_at
                - issued_at
                - request_url
                - ui
                - identity
                - state
            title: Flow represents a Settings Flow
            type: object
        Size:
            $schema: https://json-schema.org/draft/2020-12/schema
            title: Size
            type: integer
        Snapshot:
            additionalProperties: false
            description: Information about the snapshot.
            properties:
                access:
                    $ref: '#/components/schemas/Access'
                creationDate:
                    description: The date and time of creation of the snapshot.
                    format: date-time
                    type: string
                description:
                    description: The description of the snapshot.
                    type: string
                id:
                    description: The ID of the snapshot.
                    type: string
                progress:
                    description: The progress of the snapshot, as a percentage.
                    type: integer
                state:
                    description: The state of the snapshot (`in-queue` \| `completed` \| `error`).
                    type: string
                tags:
                    description: One or more tags associated with the snapshot.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                volumeId:
                    description: The ID of the volume used to create the snapshot.
                    type: string
                volumeSize:
                    description: The size of the volume used to create the snapshot, in gibibytes (GiB).
                    type: integer
            type: object
        SourceSecurityGroup:
            additionalProperties: false
            description: |-
                Information about the source security group of the load balancer, which you can use as part of your inbound rules for your registered VMs.<br />
                To only allow traffic from load balancers, add a security group rule that specifies this source security group as the inbound source.
            properties:
                securityGroupName:
                    description: The name of the security group.
                    type: string
            type: object
        SourceVpc:
            additionalProperties: false
            description: Information about the source Vpc.
            properties:
                ipRange:
                    description: The IP range for the source Net, in CIDR notation (for example, `10.0.0.0/16`).
                    type: string
                vpcId:
                    description: The ID of the source Vpc.
                    type: string
            type: object
        Space:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/MutableSpace'
                - $ref: '#/components/schemas/ImmutableSpace'
                - required:
                    - name
                    - description
                  type: object
            title: Space
            type: object
        SpaceIdsList:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                items:
                    items:
                        format: uuid
                        type: string
                    type: array
            required:
                - items
            title: SpaceIdsList
            type: object
        SpacePaginatedList:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/PaginatedList'
                - properties:
                    items:
                        items:
                            $ref: '#/components/schemas/Space'
                        type: array
                  required:
                    - items
                  type: object
            title: SpacePaginatedList
            type: object
        SpaceSimple:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                id:
                    description: Space identifier
                    format: uuid
                    type: string
            required:
                - id
            title: SpaceSimple
            type: object
        SpaceSimplePaginatedList:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/PaginatedList'
                - properties:
                    items:
                        items:
                            $ref: '#/components/schemas/SpaceSimple'
                        type: array
                  required:
                    - items
                  type: object
            title: SpaceSimplePaginatedList
            type: object
        StateComment:
            additionalProperties: false
            description: Information about the change of state.
            properties:
                stateCode:
                    description: The code of the change of state.
                    type: string
                stateMessage:
                    description: A message explaining the change of state.
                    type: string
            type: object
        StopVm:
            additionalProperties: false
            properties:
                forceStop:
                    description: Forces the VM to stop.
                    type: boolean
            type: object
        SubjectType:
            $schema: https://json-schema.org/draft/2020-12/schema
            enum:
                - users
                - serviceAccounts
            title: SubjectType
            type: string
        Subnet:
            additionalProperties: false
            description: Information about the Subnet.
            properties:
                availabilityZoneName:
                    description: The name of the Subregion in which the Subnet is located.
                    type: string
                availableIpsCount:
                    description: The number of available IPs in the Subnets.
                    type: integer
                id:
                    description: The ID of the Subnet.
                    type: string
                ipRange:
                    description: The IP range in the Subnet, in CIDR notation (for example, `10.0.0.0/16`).
                    type: string
                mapPublicIpOnLaunch:
                    description: If true, a public IP is assigned to the network interface cards (NICs) created in the specified Subnet.
                    type: boolean
                state:
                    description: The state of the Subnet (`pending` \| `available` \| `deleted`).
                    type: string
                tags:
                    description: One or more tags associated with the Subnet.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                vpcId:
                    description: The ID of the Vpc in which the Subnet is.
                    type: string
            type: object
        SuccessfulNativeLogin:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: The Response for Login Flows via API
            properties:
                session:
                    $ref: '#/components/schemas/Session'
                session_token:
                    description: |-
                        The Session Token
                        A session token is equivalent to a session cookie, but it can be sent in the HTTP Authorization
                        Header:
                        Authorization: bearer ${session-token}
                        The session token is only issued for API flows, not for Browser flows!
                    type: string
            required:
                - session
            title: Successful Native Login
            type: object
        SuccessfulNativeRegistration:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: The Response for Registration Flows via API
            properties:
                continue_with:
                    description: |-
                        Contains a list of actions, that could follow this flow

                        It can, for example, this will contain a reference to the verification flow, created as part of the user's
                        registration or the token of the session.
                    items:
                        $ref: '#/components/schemas/ContinueWith'
                    type: array
                identity:
                    $ref: '#/components/schemas/Identity'
                session:
                    $ref: '#/components/schemas/Session'
                session_token:
                    description: |-
                        The Session Token

                        This field is only set when the session hook is configured as a post-registration hook.

                        A session token is equivalent to a session cookie, but it can be sent in the HTTP Authorization
                        Header:

                        Authorization: bearer ${session-token}

                        The session token is only issued for API flows, not for Browser flows!
                    type: string
            required:
                - identity
            title: Successful Native Registration
            type: object
        Tag:
            additionalProperties: false
            description: Information about the tag.
            properties:
                key:
                    description: The key of the tag, with a minimum of 1 character.
                    type: string
                resourceId:
                    description: The ID of the resource.
                    type: string
                resourceType:
                    description: The type of the resource.
                    type: string
                value:
                    description: The value of the tag, between 0 and 255 characters.
                    type: string
            type: object
        TokenBody:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                token:
                    description: The token to provide.
                    type: string
            required:
                - token
            title: TokenBody
            type: object
        TokenReq:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                client_id:
                    description: The client id.
                    format: uuid
                    type: string
                client_secret:
                    description: The client secret.
                    type: string
                code:
                    description: The code authorization.
                    type: string
                grant_type:
                    description: The grant type.
                    type: string
                redirect_uri:
                    description: The URLs redirection
                    type: string
                refresh_token:
                    description: The refresh Token
                    type: string
            required:
                - grant_type
            title: TokenReq
            type: object
        TokenResp:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                access_token:
                    description: The access token.
                    type: string
                expires_in:
                    description: The lifetime in seconds of the access token.
                    type: integer
                id_token:
                    description: The id token.
                    type: string
                refresh_token:
                    description: The refresh token.
                    type: string
                token_type:
                    description: The type of the token issued.
                    type: string
            required:
                - access_token
                - expires_in
                - token_type
            title: TokenResp
            type: object
        UiContainer:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Container represents a HTML Form. The container can work with both HTTP Form and JSON requests.
            properties:
                action:
                    description: Action should be used as the form action URL `<form action="{{.Action }}" method="post">`.
                    type: string
                messages:
                    $ref: '#/components/schemas/UiTexts'
                method:
                    description: Method is the form method (e.g. POST)
                    type: string
                nodes:
                    $ref: '#/components/schemas/UiNodes'
            required:
                - action
                - method
                - nodes
            title: Ui Container
            type: object
        UiNode:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: |-
                Nodes are represented as HTML elements or their native UI equivalents. For example,
                a node can be an `<img>` tag, or an `<input element>` but also `some plain text`.
            properties:
                attributes:
                    $ref: '#/components/schemas/UiNodeAttributes'
                group:
                    description: |-
                        Group specifies which group (e.g. password authenticator) this node belongs to.
                        default DefaultGroup
                        password PasswordGroup
                        oidc OpenIDConnectGroup
                        profile ProfileGroup
                        link LinkGroup
                        code CodeGroup
                        totp TOTPGroup
                        lookup_secret LookupGroup
                        webauthn WebAuthnGroup
                    enum:
                        - default
                        - password
                        - oidc
                        - profile
                        - link
                        - code
                        - totp
                        - lookup_secret
                        - webauthn
                    type: string
                    x-go-enum-desc: |-
                        default DefaultGroup
                        password PasswordGroup
                        oidc OpenIDConnectGroup
                        profile ProfileGroup
                        link LinkGroup
                        code CodeGroup
                        totp TOTPGroup
                        lookup_secret LookupGroup
                        webauthn WebAuthnGroup
                messages:
                    $ref: '#/components/schemas/UiTexts'
                meta:
                    $ref: '#/components/schemas/UiNodeMeta'
                type:
                    description: |-
                        The node's type
                        text Text
                        input Input
                        img Image
                        a Anchor
                        script Script
                    enum:
                        - text
                        - input
                        - img
                        - a
                        - script
                    type: string
                    x-go-enum-desc: |-
                        text Text
                        input Input
                        img Image
                        a Anchor
                        script Script
            required:
                - type
                - group
                - attributes
                - messages
                - meta
            title: Node represents a flow's nodes
            type: object
        UiNodeAnchorAttributes:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                href:
                    description: |-
                        The link's href (destination) URL.

                        format: uri
                    type: string
                id:
                    description: A unique identifier
                    type: string
                node_type:
                    description: |-
                        NodeType represents this node's types. It is a mirror of `node.type` and
                        is primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "a".
                    type: string
                title:
                    $ref: '#/components/schemas/UiText'
            required:
                - href
                - title
                - id
                - node_type
            title: AnchorAttributes represents the attributes of an anchor node.
            type: object
        UiNodeAttributes:
            $schema: https://json-schema.org/draft/2020-12/schema
            discriminator:
                mapping:
                    a: '#/components/schemas/UiNodeAnchorAttributes'
                    img: '#/components/schemas/UiNodeImageAttributes'
                    input: '#/components/schemas/UiNodeInputAttributes'
                    script: '#/components/schemas/UiNodeScriptAttributes'
                    text: '#/components/schemas/UiNodeTextAttributes'
                propertyName: node_type
            oneOf:
                - $ref: '#/components/schemas/UiNodeInputAttributes'
                - $ref: '#/components/schemas/UiNodeTextAttributes'
                - $ref: '#/components/schemas/UiNodeImageAttributes'
                - $ref: '#/components/schemas/UiNodeAnchorAttributes'
                - $ref: '#/components/schemas/UiNodeScriptAttributes'
            title: Attributes represents a list of attributes
        UiNodeImageAttributes:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                height:
                    description: Height of the image
                    format: int64
                    type: integer
                id:
                    description: A unique identifier
                    type: string
                node_type:
                    description: |-
                        NodeType represents this node's types. It is a mirror of `node.type` and
                        is primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "img".
                    type: string
                src:
                    description: |-
                        The image's source URL.

                        format: uri
                    type: string
                width:
                    description: Width of the image
                    format: int64
                    type: integer
            required:
                - src
                - id
                - width
                - height
                - node_type
            title: ImageAttributes represents the attributes of an image node.
            type: object
        UiNodeInputAttributes:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: InputAttributes represents the attributes of an input node
            properties:
                autocomplete:
                    description: |-
                        The autocomplete attribute for the input.
                        email InputAttributeAutocompleteEmail
                        tel InputAttributeAutocompleteTel
                        url InputAttributeAutocompleteUrl
                        current-password InputAttributeAutocompleteCurrentPassword
                        new-password InputAttributeAutocompleteNewPassword
                        one-time-code InputAttributeAutocompleteOneTimeCode
                    enum:
                        - email
                        - tel
                        - url
                        - current-password
                        - new-password
                        - one-time-code
                    type: string
                    x-go-enum-desc: |-
                        email InputAttributeAutocompleteEmail
                        tel InputAttributeAutocompleteTel
                        url InputAttributeAutocompleteUrl
                        current-password InputAttributeAutocompleteCurrentPassword
                        new-password InputAttributeAutocompleteNewPassword
                        one-time-code InputAttributeAutocompleteOneTimeCode
                disabled:
                    description: Sets the input's disabled field to true or false.
                    type: boolean
                label:
                    $ref: '#/components/schemas/UiText'
                name:
                    description: The input's element name.
                    type: string
                node_type:
                    description: |-
                        NodeType represents this node's types. It is a mirror of `node.type` and
                        is primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "input".
                    type: string
                onclick:
                    description: |-
                        OnClick may contain javascript which should be executed on click. This is primarily
                        used for WebAuthn.
                    type: string
                pattern:
                    description: The input's pattern.
                    type: string
                required:
                    description: Mark this input field as required.
                    type: boolean
                type:
                    description: |-
                        The input's element type.
                        text InputAttributeTypeText
                        password InputAttributeTypePassword
                        number InputAttributeTypeNumber
                        checkbox InputAttributeTypeCheckbox
                        hidden InputAttributeTypeHidden
                        email InputAttributeTypeEmail
                        tel InputAttributeTypeTel
                        submit InputAttributeTypeSubmit
                        button InputAttributeTypeButton
                        datetime-local InputAttributeTypeDateTimeLocal
                        date InputAttributeTypeDate
                        url InputAttributeTypeURI
                    enum:
                        - text
                        - password
                        - number
                        - checkbox
                        - hidden
                        - email
                        - tel
                        - submit
                        - button
                        - datetime-local
                        - date
                        - url
                    type: string
                    x-go-enum-desc: |-
                        text InputAttributeTypeText
                        password InputAttributeTypePassword
                        number InputAttributeTypeNumber
                        checkbox InputAttributeTypeCheckbox
                        hidden InputAttributeTypeHidden
                        email InputAttributeTypeEmail
                        tel InputAttributeTypeTel
                        submit InputAttributeTypeSubmit
                        button InputAttributeTypeButton
                        datetime-local InputAttributeTypeDateTimeLocal
                        date InputAttributeTypeDate
                        url InputAttributeTypeURI
                value:
                    description: The input's value.
                    nullable: true
            required:
                - name
                - type
                - disabled
                - node_type
            title: ScriptAttributes represent input nodes which load javascript.
            type: object
        UiNodeMeta:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: |-
                This might include a label and other information that can optionally
                be used to render UIs.
            properties:
                label:
                    $ref: '#/components/schemas/UiText'
            title: A Node's Meta Information
            type: object
        UiNodeScriptAttributes:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                async:
                    description: The script async type
                    type: boolean
                crossorigin:
                    description: The script cross origin policy
                    type: string
                id:
                    description: A unique identifier
                    type: string
                integrity:
                    description: The script's integrity hash
                    type: string
                node_type:
                    description: |-
                        NodeType represents this node's types. It is a mirror of `node.type` and
                        is primarily used to allow compatibility with OpenAPI 3.0. In this struct it technically always is "script".
                    type: string
                nonce:
                    description: |-
                        Nonce for CSP

                        A nonce you may want to use to improve your Content Security Policy.
                        You do not have to use this value but if you want to improve your CSP
                        policies you may use it. You can also choose to use your own nonce value!
                    type: string
                referrerpolicy:
                    description: The script referrer policy
                    type: string
                src:
                    description: The script source
                    type: string
                type:
                    description: The script MIME type
                    type: string
            required:
                - src
                - async
                - referrerpolicy
                - crossorigin
                - integrity
                - type
                - id
                - nonce
                - node_type
            title: ScriptAttributes represent script nodes which load javascript.
            type: object
        UiNodeTextAttributes:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                id:
                    description: A unique identifier
                    type: string
                node_type:
                    description: |-
                        NodeType represents this node's types. It is a mirror of `node.type` and
                        is primarily used to allow compatibility with OpenAPI 3.0.  In this struct it technically always is "text".
                    type: string
                text:
                    $ref: '#/components/schemas/UiText'
            required:
                - text
                - id
                - node_type
            title: TextAttributes represents the attributes of a text node.
            type: object
        UiNodes:
            $schema: https://json-schema.org/draft/2020-12/schema
            items:
                $ref: '#/components/schemas/UiNode'
            title: Ui Nodes
            type: array
        UiText:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                context:
                    description: The message's context. Useful when customizing messages.
                    type: object
                id:
                    $ref: '#/components/schemas/ID'
                text:
                    description: The message text. Written in american english.
                    type: string
                type:
                    description: |-
                        The message type.
                        info Info
                        error Error
                        success Success
                    enum:
                        - info
                        - error
                        - success
                    type: string
                    x-go-enum-desc: |-
                        info Info
                        error Error
                        success Success
            required:
                - id
                - text
                - type
            title: Ui Text
            type: object
        UiTexts:
            $schema: https://json-schema.org/draft/2020-12/schema
            items:
                $ref: '#/components/schemas/UiText'
            title: Ui Texts
            type: array
        UnlinkInternetGateway:
            additionalProperties: false
            properties:
                vpcId:
                    description: The ID of the Vpc from which you want to detach the Internet gateway.
                    type: string
            required:
                - vpcId
            type: object
        UnlinkLoadBalancerBackendMachines:
            additionalProperties: false
            properties:
                backendIps:
                    description: ' One or more public IPs of back-end VMs.'
                    items:
                        type: string
                    type: array
                backendVmIds:
                    description: ' One or more IDs of back-end VMs.'
                    items:
                        type: string
                    type: array
            type: object
        UnlinkNic:
            additionalProperties: false
            properties:
                linkNicId:
                    description: The ID of the attachment operation.
                    type: string
            required:
                - linkNicId
            type: object
        UnlinkPrivateIps:
            additionalProperties: false
            properties:
                privateIps:
                    description: One or more secondary private IPs you want to unassign from the NIC.
                    items:
                        type: string
                    type: array
            required:
                - privateIps
            type: object
        UnlinkPublicIp:
            additionalProperties: false
            properties:
                linkPublicIpId:
                    description: The ID representing the association of the public IP with the VM or the NIC. This parameter is required unless you use the `PublicIp` parameter.
                    type: string
            type: object
        UnlinkRouteTable:
            additionalProperties: false
            properties:
                linkRouteTableId:
                    description: The ID of the association between the route table and the Subnet.
                    type: string
            required:
                - linkRouteTableId
            type: object
        UnlinkVirtualGatewayToVpc:
            additionalProperties: false
            properties:
                vpcId:
                    description: The ID of the Vpc from which you want to detach the virtual gateway.
                    type: string
            required:
                - vpcId
            type: object
        UnlinkVolume:
            additionalProperties: false
            properties:
                forceUnlink:
                    description: 'Forces the detachment of the volume in case of previous failure. Important: This action may damage your data or file systems.'
                    type: boolean
            type: object
        UpdateCluster:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                description:
                    type: string
                name:
                    type: string
            title: Update Cluster Request Schema
            type: object
        UpdateFlexibleGpu:
            additionalProperties: false
            properties:
                deleteOnVmDeletion:
                    description: If true, the fGPU is deleted when the VM is terminated.
                    type: boolean
            type: object
        UpdateImage:
            additionalProperties: false
            properties:
                accessCreation:
                    $ref: '#/components/schemas/AccessCreation'
            required:
                - accessCreation
            type: object
        UpdateListenerRule:
            additionalProperties: false
            properties:
                hostPattern:
                    description: A host-name pattern for the rule, with a maximum length of 128 characters. This host-name pattern supports maximum three wildcards, and must not contain any special characters except [-.?].
                    nullable: true
                    type: string
                pathPattern:
                    description: A path pattern for the rule, with a maximum length of 128 characters. This path pattern supports maximum three wildcards, and must not contain any special characters except [_-.$/~&quot;'@:+?].
                    nullable: true
                    type: string
            type: object
        UpdateLoadBalancer:
            additionalProperties: false
            properties:
                healthCheck:
                    $ref: '#/components/schemas/HealthCheck'
                loadBalancerPort:
                    description: The port on which the load balancer is listening (between `1` and `65535`, both included). This parameter is required if you want to update the server certificate.
                    type: integer
                policyNames:
                    description: The name of the policy you want to enable for the listener.
                    items:
                        type: string
                    type: array
                publicIp:
                    description: (internet-facing only) The public IP you want to associate with the load balancer. The former public IP of the load balancer is then disassociated. If you specify an empty string and the former public IP belonged to you, it is disassociated and replaced by a public IP owned by NumSpot.
                    type: string
                securedCookies:
                    description: If true, secure cookies are enabled for the load balancer.
                    type: boolean
                securityGroups:
                    description: (Vpc only) One or more IDs of security groups you want to assign to the load balancer. You need to specify the already assigned security groups that you want to keep along with the new ones you are assigning. If the list is empty, the default security group of the Vpc is assigned to the load balancer.
                    items:
                        type: string
                    type: array
            type: object
        UpdateLoginFlowBody:
            $schema: https://json-schema.org/draft/2020-12/schema
            discriminator:
                mapping:
                    code: '#/components/schemas/UpdateLoginFlowWithCodeMethod'
                    lookup_secret: '#/components/schemas/UpdateLoginFlowWithLookupSecretMethod'
                    oidc: '#/components/schemas/UpdateLoginFlowWithOidcMethod'
                    password: '#/components/schemas/UpdateLoginFlowWithPasswordMethod'
                    totp: '#/components/schemas/UpdateLoginFlowWithTotpMethod'
                    webauthn: '#/components/schemas/UpdateLoginFlowWithWebAuthnMethod'
                propertyName: method
            oneOf:
                - $ref: '#/components/schemas/UpdateLoginFlowWithPasswordMethod'
                - $ref: '#/components/schemas/UpdateLoginFlowWithOidcMethod'
                - $ref: '#/components/schemas/UpdateLoginFlowWithTotpMethod'
                - $ref: '#/components/schemas/UpdateLoginFlowWithWebAuthnMethod'
                - $ref: '#/components/schemas/UpdateLoginFlowWithLookupSecretMethod'
                - $ref: '#/components/schemas/UpdateLoginFlowWithCodeMethod'
            title: Update Login Flow Body
        UpdateLoginFlowWithCodeMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Login flow using the code method
            properties:
                code:
                    description: Code is the 6 digits code sent to the user
                    type: string
                csrf_token:
                    description: CSRFToken is the anti-CSRF token
                    type: string
                identifier:
                    description: |-
                        Identifier is the code identifier
                        The identifier requires that the user has already completed the registration or settings with code flow.
                    type: string
                method:
                    description: Method should be set to "code" when logging in using the code strategy.
                    type: string
                resend:
                    description: Resend is set when the user wants to resend the code
                    type: string
            required:
                - method
                - csrf_token
            title: Update Login Flow Code
            type: object
        UpdateLoginFlowWithLookupSecretMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Login Flow with Lookup Secret Method
            properties:
                csrf_token:
                    description: Sending the anti-csrf token is only required for browser login flows.
                    type: string
                lookup_secret:
                    description: The lookup secret.
                    type: string
                method:
                    description: Method should be set to "lookup_secret" when logging in using the lookup_secret strategy.
                    type: string
            required:
                - method
                - lookup_secret
            title: Update Login Flow Lookup Secret
            type: object
        UpdateLoginFlowWithOidcMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Login Flow with OpenID Connect Method
            properties:
                csrf_token:
                    description: The CSRF Token
                    type: string
                id_token:
                    description: |-
                        IDToken is an optional id token provided by an OIDC provider

                        If submitted, it is verified using the OIDC provider's public key set and the claims are used to populate
                        the OIDC credentials of the identity.
                        If the OIDC provider does not store additional claims (such as name, etc.) in the IDToken itself, you can use
                        the `traits` field to populate the identity's traits. Note, that Apple only includes the users email in the IDToken.

                        Supported providers are
                        Apple
                    type: string
                id_token_nonce:
                    description: |-
                        IDTokenNonce is the nonce, used when generating the IDToken.
                        If the provider supports nonce validation, the nonce will be validated against this value and required.
                    type: string
                method:
                    description: |-
                        Method to use

                        This field must be set to `oidc` when using the oidc method.
                    type: string
                provider:
                    description: The provider to register with
                    type: string
                traits:
                    description: The identity traits. This is a placeholder for the registration flow.
                    type: object
                upstream_parameters:
                    description: |-
                        UpstreamParameters are the parameters that are passed to the upstream identity provider.

                        These parameters are optional and depend on what the upstream identity provider supports.
                        Supported parameters are:
                        `login_hint` (string): The `login_hint` parameter suppresses the account chooser and either pre-fills the email box on the sign-in form, or selects the proper session.
                        `hd` (string): The `hd` parameter limits the login/registration process to a Google Organization, e.g. `mycollege.edu`.
                        `prompt` (string): The `prompt` specifies whether the Authorization Server prompts the End-User for reauthentication and consent, e.g. `select_account`.
                    type: object
            required:
                - provider
                - method
            title: Update Login Flow Oidc
            type: object
        UpdateLoginFlowWithPasswordMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Login Flow with Password Method
            properties:
                csrf_token:
                    description: Sending the anti-csrf token is only required for browser login flows.
                    type: string
                identifier:
                    description: Identifier is the email or username of the user trying to log in.
                    type: string
                method:
                    description: Method should be set to "password" when logging in using the identifier and password strategy.
                    type: string
                password:
                    description: The user's password.
                    type: string
                password_identifier:
                    description: |-
                        Identifier is the email or username of the user trying to log in.
                        This field is deprecated!
                    type: string
            required:
                - method
                - password
                - identifier
            title: Update Login Flow Password
            type: object
        UpdateLoginFlowWithTotpMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Login Flow with TOTP Method
            properties:
                csrf_token:
                    description: Sending the anti-csrf token is only required for browser login flows.
                    type: string
                method:
                    description: Method should be set to "totp" when logging in using the TOTP strategy.
                    type: string
                totp_code:
                    description: The TOTP code.
                    type: string
            required:
                - method
                - totp_code
            title: Update Login Flow Totp
            type: object
        UpdateLoginFlowWithWebAuthnMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Login Flow with WebAuthn Method
            properties:
                csrf_token:
                    description: Sending the anti-csrf token is only required for browser login flows.
                    type: string
                identifier:
                    description: Identifier is the email or username of the user trying to log in.
                    type: string
                method:
                    description: Method should be set to "webAuthn" when logging in using the WebAuthn strategy.
                    type: string
                webauthn_login:
                    description: |-
                        Login a WebAuthn Security Key

                        This must contain the ID of the WebAuthN connection.
                    type: string
            required:
                - identifier
                - method
            title: Update Login Flow WebAuthn
            type: object
        UpdateNic:
            additionalProperties: false
            properties:
                description:
                    description: A new description for the NIC.
                    type: string
                linkNic:
                    $ref: '#/components/schemas/LinkNicToUpdate'
                securityGroupIds:
                    description: |-
                        One or more IDs of security groups for the NIC.<br />
                        You must specify at least one group, even if you use the default security group in the Vpc.
                    items:
                        type: string
                    type: array
            type: object
        UpdateRecoveryFlowBody:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Recovery Flow Request Body
            discriminator:
                mapping:
                    code: '#/components/schemas/UpdateRecoveryFlowWithCodeMethod'
                    link: '#/components/schemas/UpdateRecoveryFlowWithLinkMethod'
                propertyName: method
            oneOf:
                - $ref: '#/components/schemas/UpdateRecoveryFlowWithLinkMethod'
                - $ref: '#/components/schemas/UpdateRecoveryFlowWithCodeMethod'
            title: Update Recovery Flow Body
        UpdateRecoveryFlowWithCodeMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Recovery Flow with Code Method
            properties:
                code:
                    description: |-
                        Code from the recovery email

                        If you want to submit a code, use this field, but make sure to _not_ include the email field, as well.
                    type: string
                csrf_token:
                    description: Sending the anti-csrf token is only required for browser login flows.
                    type: string
                email:
                    description: If the email belongs to a valid account, a recovery email will be sent.
                    type: string
                method:
                    description: |-
                        Method is the method that should be used for this recovery flow

                        Allowed values are `link` and `code`.
                        link RecoveryStrategyLink
                        code RecoveryStrategyCode
                    enum:
                        - link
                        - code
                    type: string
                    x-go-enum-desc: |-
                        link RecoveryStrategyLink
                        code RecoveryStrategyCode
            required:
                - method
            title: Update Recovery Flow Code
            type: object
        UpdateRecoveryFlowWithLinkMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Recovery Flow with Link Method
            properties:
                csrf_token:
                    description: Sending the anti-csrf token is only required for browser login flows.
                    type: string
                email:
                    description: |-
                        Email to Recover
                        Needs to be set when initiating the flow. If the email is a registered recovery email, a recovery link will be sent. If the email is not known,a email with details on what happened will be sent instead.
                    format: email
                    type: string
                method:
                    description: |-
                        Method is the method that should be used for this recovery flow

                        Allowed values are `link` and `code`
                        link RecoveryStrategyLink
                        code RecoveryStrategyCode
                    enum:
                        - link
                        - code
                    type: string
                    x-go-enum-desc: |-
                        link RecoveryStrategyLink
                        code RecoveryStrategyCode
            required:
                - email
                - method
            title: Update Recovery Flow Link
            type: object
        UpdateRegistrationFlowBody:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Registration Request Body
            discriminator:
                mapping:
                    code: '#/components/schemas/UpdateRegistrationFlowWithCodeMethod'
                    oidc: '#/components/schemas/UpdateRegistrationFlowWithOidcMethod'
                    password: '#/components/schemas/UpdateRegistrationFlowWithPasswordMethod'
                    webauthn: '#/components/schemas/UpdateRegistrationFlowWithWebAuthnMethod'
                propertyName: method
            oneOf:
                - $ref: '#/components/schemas/UpdateRegistrationFlowWithPasswordMethod'
                - $ref: '#/components/schemas/UpdateRegistrationFlowWithOidcMethod'
                - $ref: '#/components/schemas/UpdateRegistrationFlowWithWebAuthnMethod'
                - $ref: '#/components/schemas/UpdateRegistrationFlowWithCodeMethod'
            title: Update Registration Flow Body
        UpdateRegistrationFlowWithCodeMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Registration Flow with Code Method
            properties:
                code:
                    description: The OTP Code sent to the user
                    type: string
                csrf_token:
                    description: The CSRF Token
                    type: string
                method:
                    description: |-
                        Method to use

                        This field must be set to `code` when using the code method.
                    type: string
                resend:
                    description: Resend restarts the flow with a new code
                    type: string
                traits:
                    description: The identity's traits
                    type: object
                transient_payload:
                    description: Transient data to pass along to any webhooks
                    type: object
            required:
                - traits
                - method
            title: Update Registration Flow Code
            type: object
        UpdateRegistrationFlowWithOidcMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Registration Flow with OpenID Connect Method
            properties:
                csrf_token:
                    description: The CSRF Token
                    type: string
                id_token:
                    description: |-
                        IDToken is an optional id token provided by an OIDC provider

                        If submitted, it is verified using the OIDC provider's public key set and the claims are used to populate
                        the OIDC credentials of the identity.
                        If the OIDC provider does not store additional claims (such as name, etc.) in the IDToken itself, you can use
                        the `traits` field to populate the identity's traits. Note, that Apple only includes the users email in the IDToken.

                        Supported providers are
                        Apple
                    type: string
                id_token_nonce:
                    description: |-
                        IDTokenNonce is the nonce, used when generating the IDToken.
                        If the provider supports nonce validation, the nonce will be validated against this value and is required.
                    type: string
                method:
                    description: |-
                        Method to use

                        This field must be set to `oidc` when using the oidc method.
                    type: string
                provider:
                    description: The provider to register with
                    type: string
                traits:
                    description: The identity traits
                    type: object
                transient_payload:
                    description: Transient data to pass along to any webhooks
                    type: object
                upstream_parameters:
                    description: |-
                        UpstreamParameters are the parameters that are passed to the upstream identity provider.

                        These parameters are optional and depend on what the upstream identity provider supports.
                        Supported parameters are:
                        `login_hint` (string): The `login_hint` parameter suppresses the account chooser and either pre-fills the email box on the sign-in form, or selects the proper session.
                        `hd` (string): The `hd` parameter limits the login/registration process to a Google Organization, e.g. `mycollege.edu`.
                        `prompt` (string): The `prompt` specifies whether the Authorization Server prompts the End-User for reauthentication and consent, e.g. `select_account`.
                    type: object
            required:
                - provider
                - method
            title: Update Registration Flow Oidc
            type: object
        UpdateRegistrationFlowWithPasswordMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Registration Flow with Password Method
            properties:
                csrf_token:
                    description: The CSRF Token
                    type: string
                method:
                    description: |-
                        Method to use

                        This field must be set to `password` when using the password method.
                    type: string
                password:
                    description: Password to sign the user up with
                    type: string
                traits:
                    description: The identity's traits
                    type: object
                transient_payload:
                    description: Transient data to pass along to any webhooks
                    type: object
            required:
                - password
                - traits
                - method
            title: Update Registration Flow Password
            type: object
        UpdateRegistrationFlowWithWebAuthnMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Registration Flow with WebAuthn Method
            properties:
                csrf_token:
                    description: CSRFToken is the anti-CSRF token
                    type: string
                method:
                    description: |-
                        Method

                        Should be set to "webauthn" when trying to add, update, or remove a webAuthn pairing.
                    type: string
                traits:
                    description: The identity's traits
                    type: object
                transient_payload:
                    description: Transient data to pass along to any webhooks
                    type: object
                webauthn_register:
                    description: |-
                        Register a WebAuthn Security Key

                        It is expected that the JSON returned by the WebAuthn registration process
                        is included here.
                    type: string
                webauthn_register_displayname:
                    description: |-
                        Name of the WebAuthn Security Key to be Added

                        A human-readable name for the security key which will be added.
                    type: string
            required:
                - traits
                - method
            title: Update Registration Flow WebAuthn
            type: object
        UpdateRoute:
            additionalProperties: false
            properties:
                destinationIpRange:
                    description: The IP range used for the destination match, in CIDR notation (for example, `10.0.0.0/24`).
                    type: string
                gatewayId:
                    description: The ID of an Internet gateway or virtual gateway attached to your Vpc.
                    type: string
                natGatewayId:
                    description: The ID of a NAT gateway.
                    type: string
                nicId:
                    description: The ID of a network interface card (NIC).
                    type: string
                vmId:
                    description: The ID of a NAT VM in your Vpc.
                    type: string
                vpcPeeringId:
                    description: The ID of a Vpc peering.
                    type: string
            required:
                - destinationIpRange
            type: object
        UpdateRouteTableRoutePropagation:
            additionalProperties: false
            properties:
                enable:
                    description: If true, a virtual gateway can propagate routes to a specified route table of a Vpc. If false, the propagation is disabled.
                    type: boolean
                virtualGatewayId:
                    description: The ID of the virtual gateway.
                    type: string
            required:
                - enable
                - virtualGatewayId
            type: object
        UpdateServerCertificate:
            additionalProperties: false
            properties:
                newName:
                    description: A new name for the server certificate.
                    type: string
                newPath:
                    description: A new path for the server certificate.
                    type: string
            type: object
        UpdateSettingsFlowBody:
            $schema: https://json-schema.org/draft/2020-12/schema
            discriminator:
                mapping:
                    password: '#/components/schemas/UpdateSettingsFlowWithPasswordMethod'
                    totp: '#/components/schemas/UpdateSettingsFlowWithTotpMethod'
                propertyName: method
            oneOf:
                - $ref: '#/components/schemas/UpdateSettingsFlowWithPasswordMethod'
                - $ref: '#/components/schemas/UpdateSettingsFlowWithTotpMethod'
            title: Update Settings Flow Body
            type: object
        UpdateSettingsFlowMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                method:
                    description: |-
                        Method

                        Should be set to password when trying to update a password.
                    type: string
            required:
                - method
            title: Update Settings Flow method
            type: object
        UpdateSettingsFlowWithPasswordMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/UpdateSettingsFlowMethod'
                - properties:
                    csrf_token:
                        description: CSRFToken is the anti-CSRF token
                        type: string
                    method:
                        const: password
                    password:
                        description: Password is the updated password
                        type: string
                  required:
                    - password
                  type: object
            description: Update Settings Flow with Password Method
            title: Update Settings Flow Password
        UpdateSettingsFlowWithTotpMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/UpdateSettingsFlowMethod'
                - properties:
                    csrf_token:
                        description: CSRFToken is the anti-CSRF token
                        type: string
                    method:
                        const: totp
                    totp_code:
                        description: ValidationTOTP must contain a valid TOTP based on the
                        type: string
                    totp_unlink:
                        description: |-
                            UnlinkTOTP if true will remove the TOTP pairing,
                            effectively removing the credential. This can be used
                            to set up a new TOTP device.
                        type: boolean
                  type: object
            description: Update Settings Flow with TOTP Method
            title: Update Settings Flow Totp
        UpdateSubnet:
            additionalProperties: false
            properties:
                mapPublicIpOnLaunch:
                    description: If true, a public IP is assigned to the network interface cards (NICs) created in the specified Subnet.
                    type: boolean
            required:
                - mapPublicIpOnLaunch
            type: object
        UpdateVerificationFlowBody:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Verification Flow Request Body
            discriminator:
                mapping:
                    code: '#/components/schemas/UpdateVerificationFlowWithCodeMethod'
                    link: '#/components/schemas/UpdateVerificationFlowWithLinkMethod'
                propertyName: method
            oneOf:
                - $ref: '#/components/schemas/UpdateVerificationFlowWithLinkMethod'
                - $ref: '#/components/schemas/UpdateVerificationFlowWithCodeMethod'
            title: Update Verification Flow Body
        UpdateVerificationFlowWithCodeMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                code:
                    description: |-
                        Code from the recovery email

                        If you want to submit a code, use this field, but make sure to _not_ include the email field, as well.
                    type: string
                csrf_token:
                    description: Sending the anti-csrf token is only required for browser login flows.
                    type: string
                email:
                    description: If the email belongs to a valid account, a verifiation email will be sent.
                    type: string
                method:
                    description: |-
                        Method is the method that should be used for this verification flow

                        Allowed values are `link` and `code`.
                        link VerificationStrategyLink
                        code VerificationStrategyCode
                    enum:
                        - link
                        - code
                    type: string
                    x-go-enum-desc: |-
                        link VerificationStrategyLink
                        code VerificationStrategyCode
            required:
                - method
            title: Update Verification Flow Code
            type: object
        UpdateVerificationFlowWithLinkMethod:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Update Verification Flow with Link Method
            properties:
                csrf_token:
                    description: Sending the anti-csrf token is only required for browser login flows.
                    type: string
                email:
                    description: |-
                        Email to Verify

                        Needs to be set when initiating the flow. If the email is a registered
                        verification email, a verification link will be sent. If the email is not known,
                        a email with details on what happened will be sent instead.

                        format: email
                    type: string
                method:
                    description: |-
                        Method is the method that should be used for this verification flow

                        Allowed values are `link` and `code`
                        link VerificationStrategyLink
                        code VerificationStrategyCode
                    enum:
                        - link
                        - code
                    type: string
                    x-go-enum-desc: |-
                        link VerificationStrategyLink
                        code VerificationStrategyCode
            required:
                - email
                - method
            title: Update Verification Flow Link
            type: object
        UpdateVm:
            additionalProperties: false
            properties:
                blockDeviceMappings:
                    description: One or more block device mappings of the VM.
                    items:
                        $ref: '#/components/schemas/BlockDeviceMappingVmUpdate'
                    type: array
                bsuOptimized:
                    description: This parameter is not available. It is present in our API for the sake of historical compatibility with AWS.
                    type: boolean
                deletionProtection:
                    description: If true, you cannot delete the VM unless you change this parameter back to false.
                    type: boolean
                isSourceDestChecked:
                    description: (Vpc only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Vpc.
                    type: boolean
                keypairName:
                    description: |-
                        The name of a keypair you want to associate with the VM.<br />
                        When you replace the keypair of a VM with another one, the metadata of the VM is modified to reflect the new public key, but the replacement is still not effective in the operating system of the VM. To complete the replacement and effectively apply the new keypair, you need to perform other actions inside the VM.
                    type: string
                nestedVirtualization:
                    description: (dedicated tenancy only) If true, nested virtualization is enabled. If false, it is disabled.
                    type: boolean
                performance:
                    description: The performance of the VM (`medium` \| `high` \|  `highest`).
                    enum:
                        - medium
                        - high
                        - highest
                    type: string
                securityGroupIds:
                    description: One or more IDs of security groups for the VM.
                    items:
                        type: string
                    type: array
                type:
                    description: The type of VM.
                    type: string
                userData:
                    description: The Base64-encoded MIME user data, limited to 500 kibibytes (KiB).
                    type: string
                vmInitiatedShutdownBehavior:
                    description: The VM behavior when you stop it. If set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is terminated.
                    type: string
            type: object
        UpdateVolume:
            additionalProperties: false
            properties:
                iops:
                    description: |-
                        **Cold volume**: the new number of I/O operations per second (IOPS). This parameter can be specified only if you update an `io1` volume or if you change the type of the volume for an `io1`. This modification is instantaneous. <br />
                        **Hot volume**: the new number of I/O operations per second (IOPS). This parameter can be specified only if you update an `io1` volume. This modification is not instantaneous. <br /><br />
                         The maximum number of IOPS allowed for `io1` volumes is `13000` with a maximum performance ratio of 300 IOPS per gibibyte.
                    type: integer
                size:
                    description: |-
                        **Cold volume**: the new size of the volume, in gibibytes (GiB). This value must be equal to or greater than the current size of the volume. This modification is not instantaneous. <br />
                        **Hot volume**: you cannot change the size of a hot volume.
                    type: integer
                volumeType:
                    description: |-
                        **Cold volume**: the new type of the volume (`standard` \ | `io1` \| `gp2`). This modification is instantaneous. If you update to an `io1` volume, you must also specify the `Iops` parameter.<br />
                         **Hot volume**: you cannot change the type of a hot volume.
                    type: string
            type: object
        UpdateVpc:
            additionalProperties: false
            properties:
                dhcpOptionsSetId:
                    description: The ID of the DHCP options set (or `default` if you want to associate the default one).
                    type: string
            required:
                - dhcpOptionsSetId
            type: object
        UpdateVpnConnection:
            additionalProperties: false
            properties:
                clientGatewayId:
                    description: The ID of the client gateway.
                    type: string
                virtualGatewayId:
                    description: The ID of the virtual gateway.
                    type: string
                vpnOptions:
                    $ref: '#/components/schemas/VpnOptionsToUpdate'
            type: object
        UploadPartOutput:
            $schema: https://json-schema.org/draft/2020-12/schema
            example:
                ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
            title: UploadPartOutput
            type: object
        Url:
            $schema: https://json-schema.org/draft/2020-12/schema
            example: https://domain.org/path/
            format: uri
            title: Url
            type: string
        User:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                email:
                    $ref: '#/components/schemas/Email'
                firstname:
                    description: Firstname
                    type: string
                lastname:
                    description: Lastname
                    type: string
            required:
                - email
                - firstname
                - lastname
            title: User
            type: object
        UserCreated:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/User'
                - $ref: '#/components/schemas/UserCreation'
            title: UserCreated
            type: object
        UserCreation:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                active:
                    description: Account activation/deactivation state
                    type: boolean
                createdOn:
                    $ref: '#/components/schemas/DateTime'
                id:
                    description: User ID
                    format: uuid
                    type: string
            required:
                - id
                - active
                - createdOn
            title: UserCreation
            type: object
        UserEdited:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                active:
                    description: Account activation/deactivation state
                    type: boolean
                createdOn:
                    $ref: '#/components/schemas/DateTime'
                id:
                    description: User ID
                    format: uuid
                    type: string
                updatedOn:
                    $ref: '#/components/schemas/DateTime'
            required:
                - id
                - active
                - createdOn
                - updatedOn
            title: UserEdited
            type: object
        UserInfo:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                email:
                    type: string
                firstname:
                    type: string
                lastname:
                    type: string
                sub:
                    type: string
            required:
                - sub
            title: UserInfo
            type: object
        UserModified:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/User'
                - $ref: '#/components/schemas/UserEdited'
            title: UserModified
            type: object
        UserPaginatedList:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/PaginatedList'
                - properties:
                    items:
                        items:
                            $ref: '#/components/schemas/UserModified'
                        type: array
                  required:
                    - items
                  type: object
            title: UserPaginatedList
            type: object
        UserState:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                active:
                    description: Account activation/deactivation state
                    type: boolean
            required:
                - active
            title: UserState
            type: object
        UserUpdate:
            $schema: https://json-schema.org/draft/2020-12/schema
            allOf:
                - $ref: '#/components/schemas/User'
                - properties:
                    active:
                        description: Account activation/deactivation state
                        type: boolean
                  required:
                    - active
                  type: object
            title: UserUpdate
            type: object
        VerifiableIdentityAddress:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: VerifiableAddress is an identity's verifiable address
            properties:
                created_at:
                    description: When this entry was created
                    example: "2014-01-01T23:28:56.782Z"
                    format: date-time
                    type: string
                id:
                    description: The ID
                    format: uuid
                    type: string
                status:
                    $ref: '#/components/schemas/IdentityVerifiableAddressStatus'
                updated_at:
                    description: When this entry was last updated
                    example: "2014-01-01T23:28:56.782Z"
                    format: date-time
                    type: string
                value:
                    description: |-
                        The address value

                        example foo@user.com
                    type: string
                verified:
                    description: Indicates if the address has already been verified
                    example: true
                    type: boolean
                verified_at:
                    $ref: '#/components/schemas/NullTime'
                via:
                    description: The delivery method
                    enum:
                        - email
                        - sms
                    example: email
                    type: string
            required:
                - value
                - verified
                - via
                - status
            title: Verifiable Identity Address
            type: object
        VerificationFlow:
            $schema: https://json-schema.org/draft/2020-12/schema
            description: Used to verify an out-of-band communication channel such as an email address or a phone number.
            properties:
                active:
                    description: |-
                        Active, if set, contains the registration method that is being used. It is initially
                        not set.
                    type: string
                expires_at:
                    description: |-
                        ExpiresAt is the time (UTC) when the request expires. If the user still wishes to verify the address,
                        a new request has to be initiated.
                    format: date-time
                    type: string
                id:
                    description: ID represents the request's unique ID.
                    format: uuid
                    type: string
                issued_at:
                    description: IssuedAt is the time (UTC) when the request occurred.
                    format: date-time
                    type: string
                request_url:
                    description: RequestURL is the initial URL that was requested. It can be used to forward information contained in the URL's path or query for example.
                    type: string
                return_to:
                    description: ReturnTo contains the requested return_to URL.
                    type: string
                state:
                    description: |-
                        State represents the state of this request:

                        choose_method: ask the user to choose a method (e.g. verify your email)
                        sent_email: the email has been sent to the user
                        passed_challenge: the request was successful and the verification challenge was passed.
                type:
                    $ref: '#/components/schemas/SelfServiceFlowType'
                ui:
                    $ref: '#/components/schemas/UiContainer'
            required:
                - id
                - type
                - ui
                - state
            title: Verification Flow
            type: object
        VgwTelemetry:
            additionalProperties: false
            description: Information about the current state of a VPN tunnel.
            properties:
                acceptedRouteCount:
                    description: The number of routes accepted through BGP (Border Gateway Protocol) route exchanges.
                    type: integer
                lastStateChangeDate:
                    description: The date and time (UTC) of the latest state update.
                    format: date-time
                    type: string
                outsideIpAddress:
                    description: The IP on the NumSpot side of the tunnel.
                    type: string
                state:
                    description: The state of the IPSEC tunnel (`UP` \| `DOWN`).
                    type: string
                stateDescription:
                    description: A description of the current state of the tunnel.
                    type: string
            type: object
        Violation:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                description:
                    description: A description of why the field is violated.
                    type: string
                field:
                    description: The field impacted by the violation.
                    type: string
            required:
                - field
                - description
            title: Violation
            type: object
        VirtualGateway:
            additionalProperties: false
            description: Information about the virtual gateway.
            properties:
                connectionType:
                    description: The type of VPN connection supported by the virtual gateway (only `ipsec.1` is supported).
                    type: string
                id:
                    description: The ID of the virtual gateway.
                    type: string
                state:
                    description: The state of the virtual gateway (`pending` \| `available` \| `deleting` \| `deleted`).
                    type: string
                tags:
                    description: One or more tags associated with the virtual gateway.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                vpcToVirtualGatewayLinks:
                    description: the Vpc to which the virtual gateway is attached.
                    items:
                        $ref: '#/components/schemas/VpcToVirtualGatewayLink'
                    type: array
            type: object
        Vm:
            additionalProperties: false
            description: Information about the VM.
            properties:
                architecture:
                    description: The architecture of the VM (`i386` \| `x86_64`).
                    type: string
                blockDeviceMappings:
                    description: The block device mapping of the VM.
                    items:
                        $ref: '#/components/schemas/BlockDeviceMappingCreated'
                    type: array
                bsuOptimized:
                    description: This parameter is not available. It is present in our API for the sake of historical compatibility with AWS.
                    type: boolean
                clientToken:
                    description: The idempotency token provided when launching the VM.
                    type: string
                creationDate:
                    description: The date and time of creation of the VM.
                    format: date-time
                    type: string
                deletionProtection:
                    description: If true, you cannot delete the VM unless you change this parameter back to false.
                    type: boolean
                hypervisor:
                    description: The hypervisor type of the VMs (`ovm` \| `xen`).
                    type: string
                id:
                    description: The ID of the VM.
                    type: string
                imageId:
                    description: The ID of the OMI used to create the VM.
                    type: string
                initiatedShutdownBehavior:
                    description: The VM behavior when you stop it. If set to `stop`, the VM stops. If set to `restart`, the VM stops then automatically restarts. If set to `terminate`, the VM stops and is deleted.
                    type: string
                isSourceDestChecked:
                    description: (Vpc only) If true, the source/destination check is enabled. If false, it is disabled. This value must be false for a NAT VM to perform network address translation (NAT) in a Vpc.
                    type: boolean
                keypairName:
                    description: The name of the keypair used when launching the VM.
                    type: string
                launchNumber:
                    description: The number for the VM when launching a group of several VMs (for example, `0`, `1`, `2`, and so on).
                    type: integer
                nestedVirtualization:
                    description: If true, nested virtualization is enabled. If false, it is disabled.
                    type: boolean
                nics:
                    description: (Vpc only) The network interface cards (NICs) the VMs are attached to.
                    items:
                        $ref: '#/components/schemas/NicLight'
                    type: array
                osFamily:
                    description: Indicates the operating system (OS) of the VM.
                    type: string
                performance:
                    description: The performance of the VM (`medium` \| `high` \|  `highest`).
                    type: string
                placement:
                    $ref: '#/components/schemas/Placement'
                privateDnsName:
                    description: The name of the private DNS.
                    type: string
                privateIp:
                    description: The primary private IP of the VM.
                    type: string
                productCodes:
                    description: The product codes associated with the OMI used to create the VM.
                    items:
                        type: string
                    type: array
                publicDnsName:
                    description: The name of the public DNS.
                    type: string
                publicIp:
                    description: The public IP of the VM.
                    type: string
                reservationId:
                    description: The reservation ID of the VM.
                    type: string
                rootDeviceName:
                    description: The name of the root device for the VM (for example, `/dev/sda1`).
                    type: string
                rootDeviceType:
                    description: The type of root device used by the VM (always `bsu`).
                    type: string
                securityGroups:
                    description: One or more security groups associated with the VM.
                    items:
                        $ref: '#/components/schemas/SecurityGroupLight'
                    type: array
                state:
                    description: The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
                    type: string
                stateReason:
                    description: The reason explaining the current state of the VM.
                    type: string
                subnetId:
                    description: The ID of the Subnet for the VM.
                    type: string
                tags:
                    description: One or more tags associated with the VM.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                type:
                    description: The type of VM.
                    type: string
                userData:
                    description: The Base64-encoded MIME user data.
                    type: string
                vpcId:
                    description: The ID of the Vpc in which the VM is running.
                    type: string
            type: object
        VmState:
            additionalProperties: false
            description: Information about the state of the VM.
            properties:
                currentState:
                    description: The current state of the VM (`InService` \| `OutOfService` \| `Unknown`).
                    type: string
                id:
                    description: The ID of the VM.
                    type: string
                previousState:
                    description: The previous state of the VM (`InService` \| `OutOfService` \| `Unknown`).
                    type: string
            type: object
        VmStates:
            additionalProperties: false
            description: Information about the states of the VMs.
            properties:
                availabilityZoneName:
                    description: The name of the Subregion of the VM.
                    type: string
                id:
                    description: The ID of the VM.
                    type: string
                maintenanceEvents:
                    description: One or more scheduled events associated with the VM.
                    items:
                        $ref: '#/components/schemas/MaintenanceEvent'
                    type: array
                vmState:
                    description: The state of the VM (`pending` \| `running` \| `stopping` \| `stopped` \| `shutting-down` \| `terminated` \| `quarantine`).
                    type: string
            type: object
        Volume:
            additionalProperties: false
            description: Information about the volume.
            properties:
                availabilityZoneName:
                    description: The Subregion in which the volume was created.
                    type: string
                creationDate:
                    description: The date and time of creation of the volume.
                    format: date-time
                    type: string
                id:
                    description: The ID of the volume.
                    type: string
                iops:
                    description: |-
                        The number of I/O operations per second (IOPS):<br />
                        - For `io1` volumes, the number of provisioned IOPS<br />
                        - For `gp2` volumes, the baseline performance of the volume
                    type: integer
                linkedVolumes:
                    description: Information about your volume attachment.
                    items:
                        $ref: '#/components/schemas/LinkedVolume'
                    type: array
                size:
                    description: The size of the volume, in gibibytes (GiB).
                    type: integer
                snapshotId:
                    description: The snapshot from which the volume was created.
                    type: string
                state:
                    description: The state of the volume (`creating` \| `available` \| `in-use` \| `updating` \| `deleting` \| `error`).
                    type: string
                tags:
                    description: One or more tags associated with the volume.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                type:
                    description: The type of the volume (`standard` \| `gp2` \| `io1`).
                    type: string
            type: object
        Vpc:
            additionalProperties: false
            description: Information about the Vpc.
            properties:
                dhcpOptionsSetId:
                    description: The ID of the DHCP options set (or `default` if you want to associate the default one).
                    type: string
                id:
                    description: The ID of the Vpc.
                    type: string
                ipRange:
                    description: The IP range for the Vpc, in CIDR notation (for example, `10.0.0.0/16`).
                    type: string
                state:
                    description: The state of the Vpc (`pending` \| `available` \| `deleting`).
                    type: string
                tags:
                    description: One or more tags associated with the Vpc.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                tenancy:
                    description: The VM tenancy in a Vpc.
                    type: string
            type: object
        VpcPeering:
            additionalProperties: false
            description: Information about the Vpc peering.
            properties:
                accepterVpc:
                    $ref: '#/components/schemas/AccepterVpc'
                expirationDate:
                    description: The date and time at which the Vpc peerings expire.
                    format: date-time
                    nullable: true
                    type: string
                id:
                    description: The ID of the Vpc peering.
                    type: string
                sourceVpc:
                    $ref: '#/components/schemas/SourceVpc'
                state:
                    $ref: '#/components/schemas/VpcPeeringState'
                tags:
                    description: One or more tags associated with the Vpc peering.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
            type: object
        VpcPeeringState:
            additionalProperties: false
            description: Information about the state of the Vpc peering.
            properties:
                message:
                    description: Additional information about the state of the Vpc peering.
                    type: string
                name:
                    description: The state of the Vpc peering (`pending-acceptance` \| `active` \| `rejected` \| `failed` \| `expired` \| `deleted`).
                    type: string
            type: object
        VpcToVirtualGatewayLink:
            additionalProperties: false
            description: Information about the attachment.
            properties:
                state:
                    description: The state of the attachment (`attaching` \| `attached` \| `detaching` \| `detached`).
                    type: string
                vpcId:
                    description: The ID of the Vpc to which the virtual gateway is attached.
                    type: string
            type: object
        VpnConnection:
            additionalProperties: false
            description: Information about a VPN connection.
            properties:
                clientGatewayConfiguration:
                    description: Example configuration for the client gateway.
                    type: string
                clientGatewayId:
                    description: The ID of the client gateway used on the client end of the connection.
                    type: string
                connectionType:
                    description: The type of VPN connection (always `ipsec.1`).
                    type: string
                id:
                    description: The ID of the VPN connection.
                    type: string
                routes:
                    description: Information about one or more static routes associated with the VPN connection, if any.
                    items:
                        $ref: '#/components/schemas/RouteLight'
                    type: array
                state:
                    description: The state of the VPN connection (`pending` \| `available` \| `deleting` \| `deleted`).
                    type: string
                staticRoutesOnly:
                    description: If false, the VPN connection uses dynamic routing with Border Gateway Protocol (BGP). If true, routing is controlled using static routes. For more information about how to create and delete static routes, see [CreateVpnConnectionRoute](#createvpnconnectionroute) and [DeleteVpnConnectionRoute](#deletevpnconnectionroute).
                    type: boolean
                tags:
                    description: One or more tags associated with the VPN connection.
                    items:
                        $ref: '#/components/schemas/ResourceTag'
                    type: array
                vgwTelemetries:
                    description: Information about the current state of one or more of the VPN tunnels.
                    items:
                        $ref: '#/components/schemas/VgwTelemetry'
                    type: array
                virtualGatewayId:
                    description: The ID of the virtual gateway used on the NumSpot end of the connection.
                    type: string
                vpnOptions:
                    $ref: '#/components/schemas/VpnOptions'
            type: object
        VpnOptions:
            additionalProperties: false
            description: Information about the VPN options.
            properties:
                phase1Options:
                    $ref: '#/components/schemas/Phase1Options'
                phase2Options:
                    $ref: '#/components/schemas/Phase2Options'
                tunnelInsideIpRange:
                    description: The range of inside IPs for the tunnel. This must be a /30 CIDR block from the 169.254.254.0/24 range.
                    type: string
            type: object
        VpnOptionsToUpdate:
            additionalProperties: false
            description: Information about the VPN options.
            properties:
                phase2Options:
                    $ref: '#/components/schemas/Phase2OptionsToUpdate'
                tunnelInsideIpRange:
                    description: The range of inside IPs for the tunnel. This must be a /30 CIDR block from the 169.254.254.0/24 range.
                    type: string
            type: object
        WebAuthnJavaScript:
            $schema: https://json-schema.org/draft/2020-12/schema
            properties:
                created_at:
                    format: date-time
                    type: string
                id:
                    format: uuid
                    type: string
                name:
                    type: string
                subscription_id:
                    $ref: '#/components/schemas/NullUUID'
                updated_at:
                    format: date-time
                    type: string
            required:
                - id
                - name
                - created_at
                - updated_at
            title: WebAuthnJavaScript
            type: object
    securitySchemes:
        BasicAuth:
            scheme: basic
            type: http
        BearerAuth:
            bearerFormat: JWT
            scheme: bearer
            type: http
