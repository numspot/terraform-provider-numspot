// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package publicip

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/path"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"gitlab.numspot.cloud/cloud/terraform-provider-numspot/internal/services/tags"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func PublicIpResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"id": schema.StringAttribute{
				Computed:            true,
				Description:         "The allocation ID of the public IP.",
				MarkdownDescription: "The allocation ID of the public IP.",
			},
			"nic_id": schema.StringAttribute{
				Computed:            true,
				Optional:            true,
				Description:         "The ID of the NIC the public IP is associated with (if any).",
				MarkdownDescription: "The ID of the NIC the public IP is associated with (if any).",
				Validators: []validator.String{
					stringvalidator.ConflictsWith(path.MatchRoot("vm_id")),
				},
			},
			"private_ip": schema.StringAttribute{
				Computed:            true,
				Description:         "The private IP associated with the public IP.",
				MarkdownDescription: "The private IP associated with the public IP.",
			},
			"public_ip": schema.StringAttribute{
				Computed:            true,
				Description:         "The public IP.",
				MarkdownDescription: "The public IP.",
			},
			"vm_id": schema.StringAttribute{
				Optional:            true,
				Description:         "The ID of the VM the public IP is associated with (if any).",
				MarkdownDescription: "The ID of the VM the public IP is associated with (if any).",
				Validators: []validator.String{
					stringvalidator.ConflictsWith(path.MatchRoot("nic_id")),
				},
			},
			"link_public_ip": schema.StringAttribute{
				Computed:            true,
				Description:         "The ID of the association between the public IP and VM/NIC (if any).",
				MarkdownDescription: "The ID of the association between the public IP and VM/NIC (if any).",
			},
			"link_public_ip_id": schema.StringAttribute{
				Computed:            true,
				Description:         "(Required in a Vpc) The ID representing the association of the public IP with the VM or the NIC.",
				MarkdownDescription: "(Required in a Vpc) The ID representing the association of the public IP with the VM or the NIC.",
			},
			"tags": tags.TagsSchema(ctx),
		},
		DeprecationMessage: "Managing IAAS services with Terraform is deprecated",
	}
}

type PublicIpModel struct {
	Id             types.String `tfsdk:"id"`
	NicId          types.String `tfsdk:"nic_id"`
	PrivateIp      types.String `tfsdk:"private_ip"`
	PublicIp       types.String `tfsdk:"public_ip"`
	VmId           types.String `tfsdk:"vm_id"`
	LinkPublicIP   types.String `tfsdk:"link_public_ip"`
	LinkPublicIpId types.String `tfsdk:"link_public_ip_id"`
	Tags           types.List   `tfsdk:"tags"`
}
