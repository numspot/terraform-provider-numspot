// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package publicip

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"gitlab.numspot.cloud/cloud/terraform-provider-numspot/internal/services/tags"
)

func PublicIpDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"items": schema.ListNestedAttribute{
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"id": schema.StringAttribute{
							Computed:            true,
							Description:         "The allocation ID of the public IP.",
							MarkdownDescription: "The allocation ID of the public IP.",
						},
						"link_public_ip_id": schema.StringAttribute{
							Computed:            true,
							Description:         "(Required in a Vpc) The ID representing the association of the public IP with the VM or the NIC.",
							MarkdownDescription: "(Required in a Vpc) The ID representing the association of the public IP with the VM or the NIC.",
						},
						"nic_id": schema.StringAttribute{
							Computed:            true,
							Description:         "The ID of the NIC the public IP is associated with (if any).",
							MarkdownDescription: "The ID of the NIC the public IP is associated with (if any).",
						},
						"private_ip": schema.StringAttribute{
							Computed:            true,
							Description:         "The private IP associated with the public IP.",
							MarkdownDescription: "The private IP associated with the public IP.",
						},
						"public_ip": schema.StringAttribute{
							Computed:            true,
							Description:         "The public IP.",
							MarkdownDescription: "The public IP.",
						},
						"tags": tags.TagsSchema(ctx), // MANUALLY EDITED : Use shared tags
						"vm_id": schema.StringAttribute{
							Computed:            true,
							Description:         "The ID of the VM the public IP is associated with (if any).",
							MarkdownDescription: "The ID of the VM the public IP is associated with (if any).",
						},
					},
				}, // MANUALLY EDITED : Removed CustomType block
				Computed:            true,
				Description:         "Information about one or more public IPs.",
				MarkdownDescription: "Information about one or more public IPs.",
			},
			"ids": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Computed:            true,
				Description:         "The IDs of the public IPs.",
				MarkdownDescription: "The IDs of the public IPs.",
			},
			"link_public_ip_ids": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Computed:            true,
				Description:         "The IDs representing the associations of public IPs with VMs or NICs.",
				MarkdownDescription: "The IDs representing the associations of public IPs with VMs or NICs.",
			},
			"nic_ids": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Computed:            true,
				Description:         "The IDs of the NICs.",
				MarkdownDescription: "The IDs of the NICs.",
			},
			"private_ips": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Computed:            true,
				Description:         "The private IPs associated with the public IPs.",
				MarkdownDescription: "The private IPs associated with the public IPs.",
			},
			"tag_keys": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Computed:            true,
				Description:         "The keys of the tags associated with the public IPs.",
				MarkdownDescription: "The keys of the tags associated with the public IPs.",
			},
			"tag_values": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Computed:            true,
				Description:         "The values of the tags associated with the public IPs.",
				MarkdownDescription: "The values of the tags associated with the public IPs.",
			},
			"tags": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Computed:            true,
				Description:         "The key/value combination of the tags associated with the public IPs, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.", // MANUALLY EDITED : replaced HTML encoded character
				MarkdownDescription: "The key/value combination of the tags associated with the public IPs, in the following format: \"Filters\":{\"Tags\":[\"TAGKEY=TAGVALUE\"]}.", // MANUALLY EDITED : replaced HTML encoded character
			},
			"vm_ids": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Computed:            true,
				Description:         "The IDs of the VMs.",
				MarkdownDescription: "The IDs of the VMs.",
			},
			// MANUALLY EDITED : SpaceId Removed
		},
	}
}

type PublicIpModelDatasource struct { // MANUALLY EDITED : Create Model from ItemsValue struct
	Id             types.String `tfsdk:"id"`
	NicId          types.String `tfsdk:"nic_id"`
	PrivateIp      types.String `tfsdk:"private_ip"`
	PublicIp       types.String `tfsdk:"public_ip"`
	VmId           types.String `tfsdk:"vm_id"`
	LinkPublicIpId types.String `tfsdk:"link_public_ip_id"`
	Tags           types.List   `tfsdk:"tags"`
}

// MANUALLY EDITED : Functions associated with ItemsType / ItemsValue and Tags removed
