// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package internetgateway

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"gitlab.numspot.cloud/cloud/terraform-provider-numspot/internal/services/tags"
)

func InternetGatewayDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"items": schema.ListNestedAttribute{
				Computed: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"id": schema.StringAttribute{
							Required:            true,
							Description:         "ID for ReadInternetServices",
							MarkdownDescription: "ID for ReadInternetServices",
						},
						"state": schema.StringAttribute{
							Computed:            true,
							Description:         "The state of the attachment of the Internet service to the Net (always `available`).",
							MarkdownDescription: "The state of the attachment of the Internet service to the Net (always `available`).",
						},
						"tags": tags.TagsSchema(ctx),
						"vpc_id": schema.StringAttribute{
							Computed:            true,
							Description:         "The ID of the Net attached to the Internet service.",
							MarkdownDescription: "The ID of the Net attached to the Internet service.",
						},
					},
				},
			},
			"ids": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Description:         "IDs for ReadInternetServices",
				MarkdownDescription: "IDs for ReadInternetServices",
			},
			"link_states": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Description:         "The current states of the attachments between the Internet services and the Nets (only available, if the Internet gateway is attached to a Net).",
				MarkdownDescription: "The current states of the attachments between the Internet services and the Nets (only available, if the Internet gateway is attached to a Net).",
			},
			"link_vpc_ids": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Description:         "The IDs of the Nets the Internet services are attached to.",
				MarkdownDescription: "The IDs of the Nets the Internet services are attached to.",
			},
			"tag_keys": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Description:         "The keys of the tags associated with the NAT services.",
				MarkdownDescription: "The keys of the tags associated with the NAT services.",
			},
			"tag_values": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Description:         "The values of the tags associated with the NAT services.",
				MarkdownDescription: "The values of the tags associated with the NAT services.",
			},
			"tags": schema.ListAttribute{
				ElementType:         types.StringType,
				Optional:            true,
				Description:         `The key/value combination of the tags associated with the NAT services, in the following format: "Filters":{"Tags":["TAGKEY=TAGVALUE"]}.`,
				MarkdownDescription: `The key/value combination of the tags associated with the NAT services, in the following format: "Filters":{"Tags":["TAGKEY=TAGVALUE"]}.`,
			},
		},
		DeprecationMessage: "Managing IAAS services with Terraform is deprecated",
	}
}
