// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package datasource_permissions

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
)

func PermissionsDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"items": schema.ListNestedAttribute{
				Computed: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"id": schema.StringAttribute{
							Computed:            true,
							Description:         "Internal ID",
							MarkdownDescription: "Internal ID",
						},
						"name": schema.StringAttribute{
							Computed:            true,
							Description:         "Human-readable name",
							MarkdownDescription: "Human-readable name",
						},
						"description": schema.StringAttribute{
							Computed:            true,
							Description:         "Human-readable description",
							MarkdownDescription: "Human-readable description",
						},
						"service": schema.StringAttribute{
							Computed:            true,
							Description:         "Service name",
							MarkdownDescription: "Service name",
						},
						"resource": schema.StringAttribute{
							Computed:            true,
							Description:         "Resource name",
							MarkdownDescription: "Resource name",
						},
						"subresource": schema.StringAttribute{
							Computed:            true,
							Description:         "subresource name",
							MarkdownDescription: "subresource name",
						},
						"action": schema.StringAttribute{
							Computed:            true,
							Description:         "Allowed operation type",
							MarkdownDescription: "Allowed operation type",
						},
						"created_on": schema.StringAttribute{
							Computed:            true,
							Description:         "creation date",
							MarkdownDescription: "creation date",
						},
						"updated_on": schema.StringAttribute{
							Computed:            true,
							Description:         "last update",
							MarkdownDescription: "last update",
						},
					},
				},
			},
			"action": schema.StringAttribute{
				Optional:            true,
				Description:         "action the permission allows to perform",
				MarkdownDescription: "action the permission allows to perform",
			},
			"resource": schema.StringAttribute{
				Optional:            true,
				Description:         "resource the permission is related to",
				MarkdownDescription: "resource the permission is related to",
			},
			"service": schema.StringAttribute{
				Optional:            true,
				Description:         "service the permission is related to",
				MarkdownDescription: "service the permission is related to",
			},
			"space_id": schema.StringAttribute{
				Required:            true,
				Description:         "Space ID",
				MarkdownDescription: "Space ID",
			},
			"subresource": schema.StringAttribute{
				Optional:            true,
				Description:         "subresource the permission is related to",
				MarkdownDescription: "subresource the permission is related to",
			},
		},
	}
}

type PermissionModel struct {
	ID          types.String `tfsdk:"id"`
	Name        types.String `tfsdk:"name"`
	Description types.String `tfsdk:"description"`
	Service     types.String `tfsdk:"service"`
	Resource    types.String `tfsdk:"resource"`
	Subresource types.String `tfsdk:"subresource"`
	Action      types.String `tfsdk:"action"`
	CreatedOn   types.String `tfsdk:"created_on"`
	UpdatedOn   types.String `tfsdk:"updated_on"`
}
