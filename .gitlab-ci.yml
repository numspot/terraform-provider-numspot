# workflow:
#   rules:
#     - if: $CI_PIPELINE_SOURCE != "merge_request_event"
# include:
#   - project: 'platform-software-factory/ci-templates'
#     ref: 'jobs/go_unit-tests@0.2.2'
#     file: 'jobs/go_unit-tests/go_unit-tests.yml'

# variables:
#   GOPRIVATE: gitlab.numspot.cloud/*
# before_script:
#   - echo "machine ${CI_SERVER_HOST} login gitlab-ci-token password
#     ${CI_JOB_TOKEN}" > ~/.netrc

# fmt:
#   image: golang:1.21.0
#   stage: test
#   before_script:
#     - apt update && apt install -y git lsb-release gnupg software-properties-common
#     - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
#     - gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
#     - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
#     - apt update
#     - apt install terraform -y
#     - go install github.com/katbyte/terrafmt@latest
#     - go install mvdan.cc/gofumpt@latest
#     - go install github.com/daixiang0/gci@latest
#   script:
#     - gofumpt -l -w .
#     - gci write --skip-generated --skip-vendor -s standard -s default -s "prefix(gitlab.numspot.cloud/cloud/terraform-provider-numspot)" -s blank -s dot .
#     - find . | egrep "test.go" | sort | while read f; do terrafmt fmt -fv $f; done
#     - terraform fmt -recursive examples/
#     - git diff --compact-summary --exit-code || (echo; echo "Unexpected difference in directories after code formatting. Run 'make fmt' command and commit."; exit 1)

# go_lint:
#   image: golangci/golangci-lint:v1.57.1-alpine
#   stage: test
#   script:
#     - golangci-lint run --out-format code-climate:gl-code-quality-report.json,line-number --timeout=10m
#   artifacts:
#     when: always
#     expire_in: 1 month
#     reports:
#       codequality: gl-code-quality-report.json
#     paths:
#       - gl-code-quality-report.json
#   rules:
#     - if: $CI_PIPELINE_SOURCE != "schedule"

# go_unit-tests:
#   rules:
#     - if: $CI_PIPELINE_SOURCE != "schedule"

# go_generate:
#   image: golang:1.21.0
#   stage: test
#   before_script:
#     - apt update && apt install -y git lsb-release gnupg software-properties-common
#     - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
#     - gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
#     - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
#     - apt update
#     - apt install terraform -y
#   script:
#     - go generate
#     - git diff --compact-summary --exit-code || (echo; echo "Unexpected difference in directories after code generation. Run 'go generate' command and commit."; exit 1)

# acc-tests:
#   image: golang:1.21.0
#   stage: test
#   before_script:
#     - go install gotest.tools/gotestsum@latest
#   variables:
#     NUMSPOT_HOST: $NUMSPOT_API_HOST
#     NUMSPOT_CLIENT_ID: $NUMSPOT_CLIENT_ID
#     NUMSPOT_CLIENT_SECRET: $NUMSPOT_CLIENT_SECRET
#     NUMSPOT_SPACE_ID: $NUMSPOT_SPACE_ID
#     TF_ACC: "1"
#     PARALLEL_TEST: "true"
#     RETRY_BACKOFF: "5ms"
#     VCR_MODE : "replay"
#   script:
#     - gotestsum --junitfile acc-tests-report.xml --format testname -- -timeout 30m --tags=acc ./...
#   artifacts:
#     when: always
#     reports:
#       junit: acc-tests-report.xml
#   rules:
#     - when: always
#     - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#     - if: $CI_COMMIT_TAG
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#


# push_to_github:
#   stage: deploy
#   image:
#     name: alpine/git
#     entrypoint: [""]
#   before_script:
#     - which ssh-agent || ( apk add openssh-client )
#     - eval $(ssh-agent -s)
#     - echo "$GITHUB_DEPLOY_KEY" | ssh-add -
#     - mkdir -p ~/.ssh
#     - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#   script:
#     - git config http.sslVerify false
#     - git fetch origin release
#     - git checkout release
#     - git pull
#     - git fetch --tags
#     - git tag
#     - git config remote.github.url >&- || git remote add github git@github.com:numspot/terraform-provider-numspot.git
#     - git push -f github HEAD:main
#     - git push -f github HEAD:main --tags
#   when: manual

try_push_to_github:
  stage: deploy
  image:
    name: alpine/git
    entrypoint: [""]
  before_script:
    - which ssh-agent || ( apk add openssh-client )
    - eval $(ssh-agent -s)
    - echo "$GITHUB_DEPLOY_KEY" | ssh-add -
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - git config http.sslVerify false
    - echo $GITLAB_USER_EMAIL
    - echo $CI_COMMIT_TAG
#    - cd /tmp
#    - git clone https://github.com/numspot/terraform-provider-numspot.git
    - git config --global user.email "$GITLAB_USER_EMAIL"
#    - cd -
    - git rebase -i --root
    - git commit --amend --no-edit
    - git rm .gitlab-ci.yml
    - git commit --amend --no-edit
    - rm -r internal/test internal/acctest
#    - rm -r .git
#    - git reset --hard $(git commit-tree HEAD^{tree} -m "version $CI_COMMIT_TAG")
    - pwd
#    - cp -r /builds/cloud-terraform/terraform-provider-numspot/* /tmp/terraform-provider-numspot
#    - ls -la /tmp/terraform-provider-numspot
#    - cd /tmp/terraform-provider-numspot
#    - git add .
#    - git commit -m "version $CI_COMMIT_TAG"
#    - git tag $CI_COMMIT_TAG
    - git tag
    - git config remote.github.url >&- || git remote add github git@github.com:numspot/terraform-provider-numspot.git
    - git fetch --unshallow || git fetch --all
    - git log
    - git push -f github HEAD:main
    - git push -f github HEAD:main $CI_COMMIT_TAG
#    - git push --tags
#    - git fetch origin release
#    - git checkout release
#    - rm .gitlab-ci.yml
#    - git add .
#    - git commit -m "test"
#    - git push
  rules:
    - if: $CI_COMMIT_TAG
#  when: manual
